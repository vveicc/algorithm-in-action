{"config":{"lang":["ja"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5173\u4e8e\u672c\u7ad9","text":""},{"location":"#\u6b22\u8fce\u6765\u5230-algorithm-in-action-","title":"\u6b22\u8fce\u6765\u5230 Algorithm in Action !","text":"<p>\u672c\u7ad9\u7684\u4e3b\u8981\u76ee\u6807\u662f\u6301\u7eed\u5206\u7c7b\u6574\u7406\u7b14\u8005\u5728\u5b66\u4e60\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u9898\u76ee\u3002</p> <p>\u672c\u7ad9\u4ec5\u8fdb\u884c\u9898\u76ee\u6574\u7406\uff0c\u4e0d\u4f1a\u7ed9\u51fa\u6bcf\u79cd\u7b97\u6cd5\u7684\u8be6\u7ec6\u8bb2\u89e3\uff0c\u5982\u679c\u9700\u8981\u5b66\u4e60\u6bcf\u79cd\u7b97\u6cd5\u7684\u8be6\u7ec6\u539f\u7406\uff0c\u8bf7\u81ea\u884c\u67e5\u627e\u76f8\u5173\u8d44\u6599\u5b66\u4e60\u3002</p> <p>\u672c\u9879\u76ee\u53c2\u8003 OI Wiki \u7684\u7b97\u6cd5\u5206\u7c7b\u5bf9\u9898\u76ee\u8fdb\u884c\u5206\u7c7b\u6574\u7406\u3002OI Wiki \u662f\u4e00\u4e2a\u975e\u5e38\u4f18\u79c0\u7684\u7f16\u7a0b\u7ade\u8d5b\u77e5\u8bc6\u6574\u5408\u7ad9\u70b9\uff0c\u5bf9\u4e8e\u7b97\u6cd5\u5b66\u4e60\u5e2e\u52a9\u5f88\u5927\uff0c\u5728\u6b64\u6df1\u8868\u611f\u8c22\u3002</p>"},{"location":"basic/binary/","title":"\u4e8c\u5206","text":""},{"location":"basic/binary/#\u4e8c\u5206\u6cd5","title":"\u4e8c\u5206\u6cd5","text":""},{"location":"basic/binary/#cf1379c-choosing-flowers","title":"CF1379C: Choosing flowers","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(t(1\u2264t\u22641e4)\\) \u8868\u793a \\(t\\) \u7ec4\u7531\u7a7a\u884c\u5206\u9694\u7684\u6570\u636e\u3002\u6240\u6709 \\(t\\) \u7ec4\u6570\u636e\u7684 \\(m\\) \u4e4b\u548c \\(\u22641e5\\)\u3002 \u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff1a \u7b2c\u4e00\u884c\u8f93\u5165 \\(n(1\u2264n\u22641e9)\\) \u548c \\(m(1\u2264m\u22641e5)\\) \u8868\u793a\u6709 \\(m\\) \u79cd\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u65e0\u9650\u4e2a\uff0c\u4f60\u9700\u8981\u9009\u62e9 \\(n\\) \u4e2a\u3002 \u7136\u540e\u8f93\u5165 \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570\u5b57 \\(a[i]\\) \u548c \\(b[i]\\)\uff0c\u8303\u56f4\u5728 \\([0,1e9]\\)\u3002 \u5982\u679c\u7b2c \\(i\\) \u79cd\u7269\u54c1\u9009 \\(x(x&gt;0)\\) \u4e2a\uff0c\u6536\u76ca\u4e3a \\(a[i]+(x-1)*b[i]\\)\u3002 \u8f93\u51fa\u6700\u5927\u6536\u76ca\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n\"sort\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar t, n, m, a, b int\nfor Fscan(in, &amp;t); t &gt; 0; t-- {\nFscan(in, &amp;n, &amp;m)\nabs := make([][2]int, m)\nfor i := 0; i &lt; m; i++ {\nFscan(in, &amp;a, &amp;b)\nabs[i] = [2]int{a, b}\n}\n// \u6309\u7167a\u964d\u5e8f\u6392\u5e8f\nsort.Slice(abs, func(i, j int) bool { return abs[i][0] &gt; abs[j][0] })\n// \u524d\u7f00\u548c\ns := make([]int64, m+1)\nfor i, ab := range abs {\ns[i+1] = s[i] + int64(ab[0])\n}\nvar ans int64\nfor _, ab := range abs {\na, b = ab[0], ab[1]\n// \u524di\u4e2a\u7269\u54c1\u7684a\u5927\u4e8e\u5f53\u524d\u7269\u54c1\u7684b\uff0c\u5982\u679c\u5f53\u524d\u7269\u54c1\u53d6\u591a\u4e2a\uff08\u591a\u4e8e1\u4e2a\uff09\uff0c\u5219\u524di\u4e2a\u7269\u54c1\u9700\u8981\u6bcf\u4e2a\u53d61\u4e2a\ni := sort.Search(m, func(i int) bool { return abs[i][0] &lt;= b })\nif i &gt;= n {\nans = max(ans, s[n])\n} else if a &gt; b { // \u524di\u4e2a\u7269\u54c1\u5305\u542b\u5f53\u524d\u7269\u54c1\nans = max(ans, s[i]+int64(b)*int64(n-i))\n} else { // \u524di\u4e2a\u7269\u54c1\u4e0d\u5305\u542b\u5f53\u524d\u7269\u54c1\nans = max(ans, s[i]+int64(a)+int64(b)*int64(n-i-1))\n}\n}\nFprintln(out, ans)\n}\n}\nfunc max(x, y int64) int64 {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint t = Integer.parseInt(in.readLine());\nfor (; t &gt; 0; t--) {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nInteger[] as = new Integer[m];\nint[][] abs = new int[m][2];\nfor (int i = 0; i &lt; m; i++) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nabs[i][0] = Integer.parseInt(tokenizer.nextToken());\nabs[i][1] = Integer.parseInt(tokenizer.nextToken());\nas[i] = abs[i][0];\n}\n// \u6309\u7167a\u964d\u5e8f\u6392\u5e8f\nArrays.sort(as, (o1, o2) -&gt; Integer.compare(o2, o1));\n// \u524d\u7f00\u548c\nlong[] s = new long[m + 1];\nfor (int i = 0; i &lt; m; i++) {\ns[i + 1] = s[i] + as[i];\n}\nlong ans = 0;\nfor (int[] ab : abs) {\nint a = ab[0];\nint b = ab[1];\n// \u524di\u4e2a\u7269\u54c1\u7684a\u5927\u4e8e\u5f53\u524d\u7269\u54c1\u7684b\uff0c\u5982\u679c\u5f53\u524d\u7269\u54c1\u53d6\u591a\u4e2a\uff08\u591a\u4e8e1\u4e2a\uff09\uff0c\u5219\u524di\u4e2a\u7269\u54c1\u9700\u8981\u6bcf\u4e2a\u53d61\u4e2a\nint i = Arrays.binarySearch(as, b, (o1, o2) -&gt; Integer.compare(o2, o1));\nif (i &lt; 0) {\ni = -i - 1;\n}\nif (i &gt;= n) {\nans = Math.max(ans, s[n]);\n} else if (a &gt; b) { // \u524di\u4e2a\u7269\u54c1\u5305\u542b\u5f53\u524d\u7269\u54c1\nans = Math.max(ans, s[i] + ((long) b) * (n - i));\n} else { // \u524di\u4e2a\u7269\u54c1\u4e0d\u5305\u542b\u5f53\u524d\u7269\u54c1\nans = Math.max(ans, s[i] + a + ((long) b) * (n - i - 1));\n}\n}\nout.println(ans);\nif (t &gt; 1) {\nin.readLine(); // \u6bcf\u7ec4\u6570\u636e\u7531\u7a7a\u884c\u5206\u9694\n}\n}\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"basic/binary/#\u4e09\u5206\u6cd5","title":"\u4e09\u5206\u6cd5","text":""},{"location":"basic/construction/","title":"\u6784\u9020","text":""},{"location":"basic/construction/#cf1554c-mikasa","title":"CF1554C: Mikasa","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u8f93\u5165 \\(t(1\u2264t\u22643e4)\\) \u8868\u793a \\(t\\) \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u8f93\u5165\u4e24\u4e2a\u6574\u6570 \\(n\\) \u548c \\(m\\)\uff0c\u5747\u5728 \\([0,1e9]\\) \u8303\u56f4\u5185\u3002 \u5b9a\u4e49\u6570\u7ec4 \\(a = [n \\oplus 0, n \\oplus 1, n \\oplus 2, ..., n \\oplus m]\\)\u3002 \u8f93\u51fa\u4e0d\u5728 \\(a\\) \u4e2d\u7684\u6700\u5c0f\u975e\u8d1f\u6574\u6570\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u4ece\u9ad8\u5230\u4f4e\u6309\u4f4d\u6784\u9020</p> <p>\u6839\u636e\u9898\u610f\uff0c\u9700\u8981\u627e\u5230\u6700\u5c0f\u7684 \\(x\\) \uff0c\u4f7f\u5f97 \\(n \\oplus x &gt; m\\) \u3002 \u663e\u7136\uff0c\u5f53 \\(n &gt; m\\) \u65f6\uff0c\u7b54\u6848\u4e3a 0 \u3002 \u4ee4 \\(k = m+1\\) \uff0c\u5219 \\(x\\) \u9700\u8981\u6ee1\u8db3 \\(n \\oplus x \u2265 k\\)\u3002 \u5206\u522b\u4f7f\u7528 \\(n_i, k_i, x_i\\) \u8868\u793a \\(n, k, x\\) \u7684\u4e8c\u8fdb\u5236\u7b2c \\(i\\) \u4f4d\u3002 \u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u6309\u4f4d\u6784\u9020\uff0c\u5bf9\u4e8e\u7b2c \\(i\\) \u4f4d\uff0c\u6709\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a</p> \\(n_i\\) \\(k_i\\) \u5982\u4f55\u5904\u7406\u80fd\u591f\u4fdd\u8bc1 \\(n \\oplus x \u2265 k\\) \u4e14 \\(x\\) \u6700\u5c0f\uff1f 0 0 \u5c06 \\(x_i\\) \u8d4b\u4e3a 0 1 1 \u5c06 \\(x_i\\) \u8d4b\u4e3a 0 0 1 \u5c06 \\(x_i\\) \u8d4b\u4e3a 1 \uff0c\u5982\u679c\u8d4b\u4e3a 0 \u5c06\u4f1a\u5bfc\u81f4 \\(n \\oplus x &lt; k\\) 1 0 \u5c06 \\(x_i\\) \u8d4b\u4e3a 0 \uff0c\u6b64\u65f6\u5df2\u7ecf\u80fd\u4fdd\u8bc1 \\(n \\oplus x \u2265 k\\)\uff0c\u4e3a\u4e86\u4f7f \\(x\\) \u6700\u5c0f\uff0c\u9700\u8981\u5c06\u5269\u4f59\u7684\u4e8c\u8fdb\u5236\u4f4d\u5168\u90e8\u8d4b\u4e3a 0 GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar T, n, m int\nfor Fscan(in, &amp;T); T &gt; 0; T-- {\nif Fscan(in, &amp;n, &amp;m); n &gt; m {\nFprintln(out, 0)\n} else {\ni, x := 1, 0\nfor m++; m&gt;&gt;i != 0; i++ {\n}\nfor ; i &gt;= 0; i-- {\nif n&gt;&gt;i&amp;1 == 0 &amp;&amp; m&gt;&gt;i&amp;1 == 1 {\nx |= 1 &lt;&lt; i\n} else if n&gt;&gt;i&amp;1 == 1 &amp;&amp; m&gt;&gt;i&amp;1 == 0 {\nbreak\n}\n}\nFprintln(out, x)\n}\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint t = Integer.parseInt(in.readLine());\nfor (; t &gt; 0; t--) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(tokenizer.nextToken());\nint k = Integer.parseInt(tokenizer.nextToken()) + 1;\nif (n &gt;= k) {\nout.println(0);\n} else {\nint x = 0;\nint i = 1;\nfor (; k &gt;&gt; i != 0; i++) {\n}\nfor (; i &gt;= 0; i--) {\nint ni = (n &gt;&gt; i) &amp; 1;\nint ki = (k &gt;&gt; i) &amp; 1;\nif (ni == 0 &amp;&amp; ki == 1) {\nx |= 1 &lt;&lt; i;\n} else if (ni == 1 &amp;&amp; ki == 0) {\nbreak;\n}\n}\nout.println(x);\n}\n}\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u57fa\u4e8e \\(n \\oplus m\\) \u6784\u9020</p> <p>\u6839\u636e\u9898\u610f\uff0c\u9700\u8981\u627e\u5230\u6700\u5c0f\u7684 \\(x\\) \uff0c\u4f7f\u5f97 \\(n \\oplus x &gt; m\\) \u3002 \u663e\u7136\uff0c\u5f53 \\(n &gt; m\\) \u65f6\uff0c\u7b54\u6848\u4e3a 0 \u3002 \u4ee4 \\(x = n \\oplus m\\) \uff0c\u6b64\u65f6 \\(x\\) \u4e0d\u6ee1\u8db3 \\(n \\oplus x &gt; m\\) \uff0c\u8003\u8651\u5982\u4f55\u4fee\u6539 \\(x\\) \u80fd\u591f\u6ee1\u8db3\u6761\u4ef6\u3002 \u5206\u522b\u4f7f\u7528 \\(n_i, m_i, x_i\\) \u8868\u793a \\(n, m, x\\) \u7684\u4e8c\u8fdb\u5236\u7b2c \\(i\\) \u4f4d\u3002 \u5bf9\u4e8e \\(x\\) \u7684\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6709\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a</p> \\(n_i\\) \\(m_i\\) \u5982\u4f55\u4fee\u6539 \\(x\\) \u80fd\u591f\u589e\u5927 \\(n \\oplus x\\) \u4e14\u4fdd\u8bc1 \\(x\\) \u6700\u5c0f\uff1f 0 1 \u4e0d\u80fd\u4fee\u6539 \\(x_i\\) \uff0c\u5c06 \\(x_i\\) \u6539\u4e3a 0 \u4f1a\u5bfc\u81f4 \\(n \\oplus x\\) \u51cf\u5c0f 1 1 \u4e0d\u80fd\u4fee\u6539 \\(x_i\\) \uff0c\u5c06 \\(x_i\\) \u6539\u4e3a 1 \u4f1a\u5bfc\u81f4 \\(n \\oplus x\\) \u51cf\u5c0f 1 0 \u5c06 \\(x_i\\) \u6539\u4e3a 0 \u80fd\u591f\u589e\u5927 \\(n \\oplus x\\) \uff0c\u540c\u65f6\u5bfc\u81f4 \\(x\\) \u51cf\u5c0f\uff0c\u4e3a\u4e86\u4f7f \\(x\\) \u6700\u5c0f\uff0c\u9700\u8981\u4fee\u6539\u8be5\u60c5\u51b5\u7684\u6700\u9ad8\u4f4d\uff0c\u5e76\u5c06\u5176\u540e\u4f4e\u4f4d\u5168\u90e8\u7f6e 0 0 0 \u5c06 \\(x_i\\) \u6539\u4e3a 1 \u80fd\u591f\u589e\u5927 \\(n \\oplus x\\) \uff0c\u540c\u65f6\u5bfc\u81f4 \\(x\\) \u589e\u5927\uff0c\u4e3a\u4e86\u4f7f \\(x\\) \u6700\u5c0f\uff0c\u9700\u8981\u4fee\u6539\u8be5\u60c5\u51b5\u7684\u6700\u4f4e\u4f4d\uff0c\u5e76\u5c06\u5176\u540e\u4f4e\u4f4d\u5168\u90e8\u7f6e 0 <p>\u6ce8\u610f\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5\u662f\u6700\u4f18\u7684\uff0c\u4f46\u53ef\u80fd\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\uff0c\u6b64\u65f6\u9700\u8981\u901a\u8fc7\u7b2c\u56db\u79cd\u60c5\u51b5\u4fee\u6539 \\(x\\) \u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar T, n, m int\nfor Fscan(in, &amp;T); T &gt; 0; T-- {\nif Fscan(in, &amp;n, &amp;m); n &gt; m {\nFprintln(out, 0)\n} else {\nx := n ^ m\nif i := 0; n&amp;x == 0 {\nfor y := n | x; y&gt;&gt;i&amp;1 == 1; i++ {\n}\nFprintln(out, (x&gt;&gt;i|1)&lt;&lt;i) // \u901a\u8fc7\u7b2c\u56db\u79cd\u60c5\u51b5\u4fee\u6539x\n} else {\nfor y := n &amp; x; y&gt;&gt;i != 0; i++ {\n}\nFprintln(out, x&gt;&gt;i&lt;&lt;i) // \u901a\u8fc7\u7b2c\u4e09\u79cd\u60c5\u51b5\u4fee\u6539x\n}\n}\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint t = Integer.parseInt(in.readLine());\nfor (; t &gt; 0; t--) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(tokenizer.nextToken());\nint m = Integer.parseInt(tokenizer.nextToken());\nif (n &gt; m) {\nout.println(0);\n} else {\nint i = 0;\nint x = n ^ m;\nif ((n &amp; x) == 0) {\nfor (int y = n | x; (y &gt;&gt; i &amp; 1) == 1; i++) {\n}\nout.println((x &gt;&gt; i | 1) &lt;&lt; i); // \u901a\u8fc7\u7b2c\u56db\u79cd\u60c5\u51b5\u4fee\u6539x\n} else {\nfor (int y = n &amp; x; (y &gt;&gt; i) != 0; i++) {\n}\nout.println(x &gt;&gt; i &lt;&lt; i); // \u901a\u8fc7\u7b2c\u4e09\u79cd\u60c5\u51b5\u4fee\u6539x\n}\n}\n}\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"basic/construction/#lc2375-\u6839\u636e\u6a21\u5f0f\u4e32\u6784\u9020\u6700\u5c0f\u6570\u5b57","title":"LC2375: \u6839\u636e\u6a21\u5f0f\u4e32\u6784\u9020\u6700\u5c0f\u6570\u5b57","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e0b\u6807\u4ece <code>0</code> \u5f00\u59cb\u3001\u957f\u5ea6\u4e3a <code>n(1\u2264n\u22648)</code> \u7684\u5b57\u7b26\u4e32 <code>pattern</code> \uff0c\u53ea\u5305\u542b <code>'I'</code> \u548c <code>'D'</code> \u3002 \u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u4e0b\u6807\u4ece <code>0</code> \u5f00\u59cb\u957f\u5ea6\u4e3a <code>n + 1</code> \u7684\u5b57\u7b26\u4e32\uff0c\u4e14\u5b83\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li><code>num</code> \u5305\u542b\u6570\u5b57 <code>'1'</code> \u5230 <code>'9'</code> \uff0c\u5176\u4e2d\u6bcf\u4e2a\u6570\u5b57 \u81f3\u591a \u4f7f\u7528\u4e00\u6b21\u3002</li> <li>\u5982\u679c <code>pattern[i] == 'I'</code> \uff0c\u90a3\u4e48 <code>num[i] &lt; num[i + 1]</code> \u3002</li> <li>\u5982\u679c <code>pattern[i] == 'D'</code> \uff0c\u90a3\u4e48 <code>num[i] &gt; num[i + 1]</code> \u3002</li> </ul> <p>\u8bf7\u4f60\u8fd4\u56de\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32 <code>num</code> \u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def Go <pre><code>package main\nfunc smallestNumber(pattern string) string {\nn := len(pattern)\nbytes := make([]byte, n+1)\nfor i := range bytes {\nbytes[i] = byte(i) + '1' // \u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5148\u6784\u9020\u6210\u5347\u5e8f\u6392\u5217\n}\nfor i := 0; i &lt; n; i++ {\nif pattern[i] == 'D' {\nl := i\nfor i++; i &lt; n &amp;&amp; pattern[i] == 'D'; i++ {\n}\n// \u7ffb\u8f6c\u6570\u7ec4bytes\u4e2d\u7684\u8fde\u7eed'D'\u6bb5\nfor r := i; l &lt; r; r-- {\nbytes[l], bytes[r] = bytes[r], bytes[l]\nl++\n}\n}\n}\nreturn string(bytes)\n}\n</code></pre>"},{"location":"basic/construction/#cf1304d-shortest-and-longest-lis","title":"CF1304D: Shortest and Longest LIS","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u8f93\u5165 \\(t(1\u2264t\u22641e4)\\) \u8868\u793a \\(t\\) \u7ec4\u6570\u636e\u3002\u6240\u6709\u6570\u636e\u7684 \\(n\\) \u4e4b\u548c \\(\u22642e5\\)\u3002 \u6bcf\u7ec4\u6570\u636e\u8f93\u5165 \\(n(2\u2264n\u22642e5)\\) \u548c\u957f\u4e3a \\(n-1\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u4ec5\u5305\u542b <code>'&lt;'</code> \u548c <code>'&gt;'</code>\u3002</p> <ul> <li><code>s[i] = '&lt;'</code> \u8868\u793a <code>a[i] &lt; a[i+1]</code> \uff1b</li> <li><code>s[i] = '&gt;'</code> \u8868\u793a <code>a[i] &gt; a[i+1]</code> \u3002</li> </ul> <p>\u8bf7\u6784\u9020\u4e24\u4e2a \\(1\\) ~ \\(n\\) \u7684\u6392\u5217\uff0c\u7b26\u5408\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u4e14\u7b2c\u4e00\u4e2a\u6570\u7ec4\u7684 LIS \u6700\u77ed\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u7684 LIS \u6700\u957f\u3002 \u5982\u679c\u6709\u591a\u79cd\u6784\u9020\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> <p>\u5982\u679c\u89c9\u5f97\u8fd9\u9898\u6bd4\u8f83\u96be\uff0c\u53ef\u4ee5\u5148\u505a\u7b80\u5355\u7248\uff1aLC2375: \u6839\u636e\u6a21\u5f0f\u4e32\u6784\u9020\u6700\u5c0f\u6570\u5b57\u3002</p> \u89e3\u9898\u601d\u8def GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar t, n int\nfor Fscan(in, &amp;t); t &gt; 0; t-- {\nvar s string\nFscan(in, &amp;n, &amp;s)\na := make([]int, n)\nb := make([]int, n)\nfor i := range a {\na[i] = n - i // \u6570\u7ec4a\u7684LIS\u6700\u77ed\uff0c\u5148\u6784\u9020\u6210\u964d\u5e8f\u6392\u5217\nb[i] = i + 1 // \u6570\u7ec4b\u7684LIS\u6700\u957f\uff0c\u5148\u6784\u9020\u6210\u5347\u5e8f\u6392\u5217\n}\nreverse := func(arr []int, sign byte) {\nfor i := 0; i &lt; n-1; i++ {\nif s[i] == sign {\nl := i\nfor i++; i &lt; n-1 &amp;&amp; s[i] == sign; i++ {\n}\nfor r := i; l &lt; r; r-- {\narr[l], arr[r] = arr[r], arr[l]\nl++\n}\n}\n}\n}\nreverse(a, '&lt;') // \u7ffb\u8f6c\u6570\u7ec4a\u4e2d\u7684\u8fde\u7eed'&lt;'\u6bb5\nreverse(b, '&gt;') // \u7ffb\u8f6c\u6570\u7ec4b\u4e2d\u7684\u8fde\u7eed'&gt;'\u6bb5\nfor _, x := range a {\nFprint(out, x, \" \")\n}\nFprintln(out)\nfor _, x := range b {\nFprint(out, x, \" \")\n}\nFprintln(out)\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\nstatic int n;\nstatic String s;\npublic static void main(String[] args) throws Exception {\nint t = Integer.parseInt(in.readLine());\nfor (; t &gt; 0; t--) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nn = Integer.parseInt(tokenizer.nextToken());\ns = tokenizer.nextToken();\nint[] a = new int[n];\nint[] b = new int[n];\nfor (int i = 0; i &lt; n; i++) {\na[i] = n - i; // \u6570\u7ec4a\u7684LIS\u6700\u77ed\uff0c\u5148\u6784\u9020\u6210\u964d\u5e8f\u6392\u5217\nb[i] = i + 1; // \u6570\u7ec4b\u7684LIS\u6700\u957f\uff0c\u5148\u6784\u9020\u6210\u5347\u5e8f\u6392\u5217\n}\nreverse(a, '&lt;'); // \u7ffb\u8f6c\u6570\u7ec4a\u4e2d\u7684\u8fde\u7eed'&lt;'\u6bb5\nreverse(b, '&gt;'); // \u7ffb\u8f6c\u6570\u7ec4b\u4e2d\u7684\u8fde\u7eed'&gt;'\u6bb5\nfor (int x : a) {\nout.printf(\"%d \", x);\n}\nout.println();\nfor (int x : b) {\nout.printf(\"%d \", x);\n}\nout.println();\n}\nout.flush();\nout.close();\nin.close();\n}\npublic static void reverse(int[] arr, char sign) {\nfor (int i = 0; i &lt; n - 1; i++) {\nif (s.charAt(i) == sign) {\nint l = i;\nfor (i++; i &lt; n - 1 &amp;&amp; s.charAt(i) == sign; i++) {\n}\nfor (int r = i; l &lt; r; r--) {\nint x = arr[l];\narr[l] = arr[r];\narr[r] = x;\nl++;\n}\n}\n}\n}\n}\n</code></pre>"},{"location":"basic/construction/#cf1156b-ugly-pairs","title":"CF1156B: Ugly Pairs","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u8f93\u5165 \\(t(1\u2264t\u2264100)\\) \u8868\u793a \\(t\\) \u7ec4\u6570\u636e\u3002\u6bcf\u7ec4\u6570\u636e\u8f93\u5165\u4e00\u4e2a\u957f\u5ea6\u8303\u56f4 \\([1,100]\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u4f60\u9700\u8981\u91cd\u6392 \\(s\\) \u4e2d\u7684\u5b57\u6bcd\uff08\u6216\u8005\u4fdd\u6301 \\(s\\) \u4e0d\u53d8\uff09\uff0c\u4f7f\u5f97 \\(abs(s[i]-s[i+1]) \\neq 1\\)\uff0c\u5373\u4efb\u610f\u76f8\u90bb\u5b57\u6bcd\u5728\u5b57\u6bcd\u8868\u4e2d\u4e0d\u76f8\u90bb\u3002 \u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u7ed3\u679c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8f93\u51fa <code>No answer</code>\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5f53\u4e14\u4ec5\u5f53\u5b57\u7b26\u4e32 \\(s\\) \u4ec5\u7531 2 \u4e2a\u6216 3 \u4e2a\u76f8\u90bb\u5b57\u6bcd\u7ec4\u6210\u65f6\uff0c\u65e0\u6cd5\u5b8c\u6210\u6784\u9020\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n\"sort\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar t int\nvar s []byte\nfor Fscan(in, &amp;t); t &gt; 0; t-- {\nFscan(in, &amp;s)\n// \u6392\u5e8f\nsort.Slice(s, func(i, j int) bool { return s[i] &lt; s[j] })\nvar a [2][]byte\nfor _, b := range s {\na[b&amp;1] = append(a[b&amp;1], b) // \u6309\u5e8f\u5947\u5076\u5206\u7ec4\n}\nx, y := a[0], a[1]\nif m, n := len(x), len(y); m == 0 {\nFprintf(out, \"%s\\n\", y)\n} else if n == 0 {\nFprintf(out, \"%s\\n\", x)\n} else if abs(int(x[m-1])-int(y[0])) != 1 {\nFprintf(out, \"%s%s\\n\", x, y) // x+y\n} else if abs(int(y[n-1])-int(x[0])) != 1 {\nFprintf(out, \"%s%s\\n\", y, x) // y+x\n} else {\n// \u5f53\u4e14\u4ec5\u5f53\u5b57\u7b26\u4e32s\u4ec5\u75312\u4e2a\u62163\u4e2a\u76f8\u90bb\u5b57\u6bcd\u7ec4\u6210\u65f6\uff0c\u65e0\u6cd5\u5b8c\u6210\u6784\u9020\nFprintln(out, \"No answer\")\n}\n}\n}\nfunc abs(x int) int {\nif x &lt; 0 {\nreturn -x\n} else {\nreturn x\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint t = Integer.parseInt(in.readLine());\nfor (; t &gt; 0; t--) {\nchar[] s = in.readLine().toCharArray();\n// \u6392\u5e8f\nArrays.sort(s);\nint[] idx = new int[2];\nchar[][] a = new char[2][s.length];\nfor (char c : s) {\nint j = c &amp; 1;\na[j][idx[j]] = c; // \u6309\u5e8f\u5947\u5076\u5206\u7ec4\nidx[j]++;\n}\nint m = idx[0], n = idx[1];\nString x = new String(a[0], 0, m);\nString y = new String(a[1], 0, n);\nif (m == 0) {\nout.println(y);\n} else if (n == 0) {\nout.println(x);\n} else if (Math.abs(a[0][m - 1] - a[1][0]) != 1) {\nout.printf(\"%s%s%n\", x, y); // x+y\n} else if (Math.abs(a[1][n - 1] - a[0][0]) != 1) {\nout.printf(\"%s%s%n\", y, x); // y+x\n} else {\n// \u5f53\u4e14\u4ec5\u5f53\u5b57\u7b26\u4e32s\u4ec5\u75312\u4e2a\u62163\u4e2a\u76f8\u90bb\u5b57\u6bcd\u7ec4\u6210\u65f6\uff0c\u65e0\u6cd5\u5b8c\u6210\u6784\u9020\nout.println(\"No answer\");\n}\n}\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"basic/divide-and-conquer/","title":"\u9012\u5f52 &amp; \u5206\u6cbb","text":""},{"location":"basic/divide-and-conquer/#lc1096-\u82b1\u62ec\u53f7\u5c55\u5f00-ii","title":"LC1096: \u82b1\u62ec\u53f7\u5c55\u5f00 II","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u82b1\u62ec\u53f7\u5c55\u5f00\u7684\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u7531\u82b1\u62ec\u53f7\u3001\u9017\u53f7\u548c\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002</p> \u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u89c4\u5219 <ul> <li> <p>\u5982\u679c\u53ea\u7ed9\u51fa\u5355\u4e00\u7684\u5143\u7d20 x\uff0c\u90a3\u4e48\u8868\u8fbe\u5f0f\u8868\u793a\u7684\u5b57\u7b26\u4e32\u5c31\u53ea\u6709 \"x\"\u3002\\(R(x) = {x}\\)</p> <ul> <li>\u4f8b\u5982\uff0c\u8868\u8fbe\u5f0f \"a\" \u8868\u793a\u5b57\u7b26\u4e32 \"a\"\u3002</li> <li>\u800c\u8868\u8fbe\u5f0f \"w\" \u5c31\u8868\u793a\u5b57\u7b26\u4e32 \"w\"\u3002</li> </ul> </li> <li> <p>\u5f53\u4e24\u4e2a\u6216\u591a\u4e2a\u8868\u8fbe\u5f0f\u5e76\u5217\uff0c\u4ee5\u9017\u53f7\u5206\u9694\uff0c\u6211\u4eec\u53d6\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u4e2d\u5143\u7d20\u7684\u5e76\u96c6\u3002\\(R({e_1,e_2,...}) = R(e_1) \u222a R(e_2) \u222a ...\\)</p> <ul> <li>\u4f8b\u5982\uff0c\u8868\u8fbe\u5f0f \"{a,b,c}\" \u8868\u793a\u5b57\u7b26\u4e32 \"a\",\"b\",\"c\"\u3002</li> <li>\u800c\u8868\u8fbe\u5f0f \"{{a,b},{b,c}}\" \u4e5f\u53ef\u4ee5\u8868\u793a\u5b57\u7b26\u4e32 \"a\",\"b\",\"c\"\u3002</li> </ul> </li> <li> <p>\u8981\u662f\u4e24\u4e2a\u6216\u591a\u4e2a\u8868\u8fbe\u5f0f\u76f8\u63a5\uff0c\u4e2d\u95f4\u6ca1\u6709\u9694\u5f00\u65f6\uff0c\u6211\u4eec\u4ece\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u4e2d\u5404\u53d6\u4e00\u4e2a\u5143\u7d20\u4f9d\u6b21\u8fde\u63a5\u5f62\u6210\u5b57\u7b26\u4e32\u3002\\(R(e_1 + e_2) = {a + b\\ for (a, b)\\ in\\ R(e_1) \u00d7 R(e_2)}\\)</p> <ul> <li>\u4f8b\u5982\uff0c\u8868\u8fbe\u5f0f \"{a,b}{c,d}\" \u8868\u793a\u5b57\u7b26\u4e32 \"ac\",\"ad\",\"bc\",\"bd\"\u3002</li> </ul> </li> <li> <p>\u8868\u8fbe\u5f0f\u4e4b\u95f4\u5141\u8bb8\u5d4c\u5957\uff0c\u5355\u4e00\u5143\u7d20\u4e0e\u8868\u8fbe\u5f0f\u7684\u8fde\u63a5\u4e5f\u662f\u5141\u8bb8\u7684\u3002</p> <ul> <li>\u4f8b\u5982\uff0c\u8868\u8fbe\u5f0f \"a{b,c,d}\" \u8868\u793a\u5b57\u7b26\u4e32 \"ab\",\"ac\",\"ad\"\u200b\u200b\u200b\u200b\u200b\u200b\u3002</li> <li>\u4f8b\u5982\uff0c\u8868\u8fbe\u5f0f \"a{b,c}{d,e}f{g,h}\" \u53ef\u4ee5\u8868\u793a\u5b57\u7b26\u4e32 \"abdfg\", \"abdfh\", \"abefg\", \"abefh\", \"acdfg\", \"acdfh\", \"acefg\", \"acefh\"\u3002</li> </ul> </li> </ul> <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n(1\u2264n\u226460)\\) \u7684\u5408\u6cd5\u8868\u8fbe\u5f0f\uff0c\u8fd4\u56de\u5b83\u6240\u8868\u793a\u7684\u6240\u6709\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u6709\u5e8f\u5217\u8868\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u81ea\u9876\u5411\u4e0b\u9012\u5f52</p> Go <pre><code>package main\nimport (\n\"sort\"\n\"unicode\"\n)\nfunc braceExpansionII(expression string) []string {\nidx, n := 0, len(expression)\n// expr: term[,term]   \u6bcf\u4e2a\u8868\u8fbe\u5f0f\u7531\u591a\u4e2aterm\u4ee5\u9017\u53f7\u5206\u9694\n// term: item[item]    \u6bcf\u4e2aterm\u7531\u591a\u4e2aitem\u76f8\u63a5\uff0c\u65e0\u9017\u53f7\u5206\u9694\n// item: letter|{expr} \u6bcf\u4e2aitem\u53ef\u4ee5\u662f\u5355\u4e2a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff0c\u6216\u8005\u7531\u82b1\u62ec\u53f7\u5305\u88f9\u7684\u8868\u8fbe\u5f0f\nvar expr func() []string\nvar term func() []string\nvar item func() []string\nexpr = func() (ret []string) {\nret = append(ret, term()...)\nfor idx &lt; n &amp;&amp; expression[idx] == ',' {\nidx++\nret = append(ret, term()...)\n}\nreturn\n}\nterm = func() (ret []string) {\nvar tmp []string\nret = []string{\"\"}\nfor idx &lt; n &amp;&amp; (expression[idx] == '{' || unicode.IsLetter(rune(expression[idx]))) {\nsub := item()\nfor _, s := range ret {\nfor _, t := range sub {\ntmp = append(tmp, s+t)\n}\n}\nret, tmp = tmp, nil\n}\nreturn\n}\nitem = func() (ret []string) {\nif expression[idx] == '{' {\nidx++\nret = expr()\n} else {\nret = []string{string(expression[idx])}\n}\nidx++\nreturn\n}\nset := make(map[string]struct{})\nfor _, s := range expr() {\nset[s] = struct{}{}\n}\nans := make([]string, 0, len(set))\nfor s := range set {\nans = append(ans, s)\n}\nsort.Strings(ans)\nreturn ans\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u81ea\u5e95\u5411\u4e0a\u5c55\u5f00</p> Go <pre><code>package main\nimport (\n\"sort\"\n\"strings\"\n)\nfunc braceExpansionII(expression string) []string {\nset := make(map[string]struct{})\nvar dfs func(expr string)\ndfs = func(expr string) {\nr := strings.IndexByte(expr, '}')\nif r == -1 {\nset[expr] = struct{}{}\n} else {\nl := r - 1\nfor ; expr[l] != '{'; l-- {\n}\nfor _, s := range strings.Split(expr[l+1:r], \",\") {\ndfs(expr[:l] + s + expr[r+1:])\n}\n}\n}\ndfs(expression)\nans := make([]string, 0, len(set))\nfor s := range set {\nans = append(ans, s)\n}\nsort.Strings(ans)\nreturn ans\n}\n</code></pre>"},{"location":"basic/enumerate/","title":"\u679a\u4e3e","text":""},{"location":"basic/enumerate/#lc1615-\u6700\u5927\u7f51\u7edc\u79e9","title":"LC1615: \u6700\u5927\u7f51\u7edc\u79e9","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60 <code>n(2\u2264n\u2264100)</code> \u5ea7\u57ce\u5e02\uff0c\u7f16\u53f7\u4ece <code>0</code> \u5f00\u59cb\u3002 \u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 <code>roads</code> \uff0c\u5176\u4e2d \\(roads[i] = [a_i, b_i]\\) \u90fd\u8868\u793a\u5728\u57ce\u5e02 \\(a_i\\) \u548c \\(b_i\\) \u4e4b\u95f4\u6709\u4e00\u6761\u53cc\u5411\u9053\u8def\u3002 \u9898\u76ee\u4fdd\u8bc1\u6bcf\u5bf9\u57ce\u5e02\u4e4b\u95f4\u6700\u591a\u53ea\u6709\u4e00\u6761\u9053\u8def\u76f8\u8fde\u3002 \u4efb\u610f\u4e24\u5ea7\u4e0d\u540c\u57ce\u5e02\u6784\u6210\u7684\u57ce\u5e02\u5bf9\u7684\u7f51\u7edc\u79e9\u5b9a\u4e49\u4e3a\uff1a\u4e0e\u8fd9\u4e24\u5ea7\u57ce\u5e02\u76f4\u63a5\u76f8\u8fde\u7684\u9053\u8def\u603b\u6570\u3002 \u5982\u679c\u5b58\u5728\u4e00\u6761\u9053\u8def\u76f4\u63a5\u8fde\u63a5\u8fd9\u4e24\u5ea7\u57ce\u5e02\uff0c\u5219\u8fd9\u6761\u9053\u8def\u53ea\u8ba1\u7b97\u4e00\u6b21\u3002 \u8bf7\u8fd4\u56de\u6240\u6709\u4e0d\u540c\u57ce\u5e02\u5bf9\u4e2d\u7684\u6700\u5927\u7f51\u7edc\u79e9\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def Go <pre><code>package main\nfunc maximalNetworkRank(n int, roads [][]int) (ans int) {\ndegrees := make([]int, n)\nconnect := make([][]int, n)\nfor i := range connect {\nconnect[i] = make([]int, n)\n}\nfor _, road := range roads {\nx, y := road[0], road[1]\nconnect[x][y] = 1\nconnect[y][x] = 1\ndegrees[x]++\ndegrees[y]++\n}\nfor i := 0; i &lt; n; i++ {\nfor j := i + 1; j &lt; n; j++ {\nrank := degrees[i] + degrees[j] - connect[i][j]\nans = max(ans, rank)\n}\n}\nreturn\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre>"},{"location":"basic/enumerate/#lc829-\u8fde\u7eed\u6574\u6570\u6c42\u548c","title":"LC829: \u8fde\u7eed\u6574\u6570\u6c42\u548c","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 <code>n(1\u2264n\u22641e9)</code> \uff0c\u8fd4\u56de\u8fde\u7eed\u6b63\u6574\u6570\u6ee1\u8db3\u6240\u6709\u6570\u5b57\u4e4b\u548c\u4e3a <code>n</code> \u7684\u7ec4\u6570 \u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u679a\u4e3e\u548c\u4e3a <code>n</code> \u7684\u8fde\u7eed\u6b63\u6574\u6570\u7684\u957f\u5ea6 <code>k</code> \u3002</p> Go <pre><code>package main\nfunc consecutiveNumbersSum(n int) (ans int) {\n// k*(k+1) &lt;= n&lt;&lt;1\u4fdd\u8bc1k\u4e2a\u8fde\u7eed\u6b63\u6574\u6570\u7684\u6700\u5c0f\u548c\u4e0d\u8d85\u8fc7n\nfor k := 1; k*(k+1) &lt;= n&lt;&lt;1; k++ {\n// \u5224\u65ad\u6b63\u6574\u6570n\u662f\u5426\u53ef\u4ee5\u8868\u793a\u6210k\u4e2a\u8fde\u7eed\u6b63\u6574\u6570\u4e4b\u548c\nif k&amp;1 == 0 {\n// \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8868\u793a\u6210\u5076\u6570\u4e2a\u8fde\u7eed\u6b63\u6574\u6570\u4e4b\u548c\nif n%k != 0 &amp;&amp; (n&lt;&lt;1)%k == 0 {\nans++\n}\n} else {\n// \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8868\u793a\u6210\u5947\u6570\u4e2a\u8fde\u7eed\u6b63\u6574\u6570\u4e4b\u548c\nif n%k == 0 {\nans++\n}\n}\n}\nreturn\n}\n</code></pre>"},{"location":"basic/enumerate/#cf118c-fancy-number","title":"CF118C: Fancy Number","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(k\\) \u4e24\u4e2a\u6574\u6570\uff0c\\((2\u2264k\u2264n\u22641e4)\\) \u3002 \u7b2c\u4e8c\u884c\u8f93\u5165\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u4ec5\u5305\u542b '0'~'9'\u3002 \u6bcf\u6b21\u64cd\u4f5c\u4f60\u53ef\u4ee5\u628a\u4e00\u4e2a s[i] \u4fee\u6539\u6210\u4efb\u610f '0'~'9'\uff0c\u5047\u8bbe\u4fee\u6539\u6210 \\(b\\) \uff0c\u5219\u82b1\u8d39\u4e3a \\(abs(s[i]-b)\\) \u3002 \u8981\u4f7f \\(s\\) \u4e2d\u81f3\u5c11\u6709 \\(k\\) \u4e2a\u76f8\u540c\u5b57\u7b26\uff0c\u4e14\u5728\u603b\u82b1\u8d39\u6700\u5c0f\u7684\u524d\u63d0\u4e0b\uff0c\u8ba9\u4fee\u6539\u540e\u7684 \\(s\\) \u7684\u5b57\u5178\u5e8f\u5c3d\u91cf\u5c0f\u3002 \u8f93\u51fa\u6700\u5c0f\u603b\u82b1\u8d39\u4ee5\u53ca\u4fee\u6539\u540e\u7684 \\(s\\) \u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u679a\u4e3e\u8981\u4fee\u6539\u51fa \\(k\\) \u4e2a\u7684\u5b57\u7b26 \\(b\\) \u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n\"bytes\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, k int\ns := make([]byte, n)\nFscan(in, &amp;n, &amp;k, &amp;s)\nvar indexes [10][]int\nfor i, c := range s {\nindexes[c&amp;15] = append(indexes[c&amp;15], i)\n}\nvar mt []byte\nvar mc int = 1e5\nfor i, pos := range indexes {\n// \u66ff\u6362\u51fak\u4e2ab\nb := byte(i + '0')\ncnt, cost := len(pos), 0\nt := make([]byte, n)\ncopy(t, s)\nfor d := 1; cnt &lt; k; d++ {\n// i+d =&gt; i \u5b57\u5178\u5e8f\u964d\u4f4e\uff0c\u4ece\u524d\u5f80\u540e\u66ff\u6362\nif i+d &lt; 10 {\np := indexes[i+d]\nfor j, m := 0, len(p); j &lt; m &amp;&amp; cnt &lt; k; j++ {\nt[p[j]] = b\ncost += d\ncnt++\n}\n}\n// i-d =&gt; i \u5b57\u5178\u5e8f\u5347\u9ad8\uff0c\u4ece\u540e\u5f80\u524d\u66ff\u6362\nif i-d &gt;= 0 {\np := indexes[i-d]\nfor j := len(p) - 1; j &gt;= 0 &amp;&amp; cnt &lt; k; j-- {\nt[p[j]] = b\ncost += d\ncnt++\n}\n}\n}\nif cost &lt; mc {\nmc, mt = cost, t\n} else if cost == mc &amp;&amp; bytes.Compare(mt, t) == 1 {\nmt = t\n}\n}\nFprintf(out, \"%d\\n%s\", mc, mt)\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nStringTokenizer nk = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nk.nextToken());\nint k = Integer.parseInt(nk.nextToken());\nString s = in.readLine();\nList&lt;Integer&gt;[] indexes = new List[10];\nfor (int i = 0; i &lt; 10; i++) {\nindexes[i] = new ArrayList&lt;&gt;();\n}\nfor (int i = 0; i &lt; n; i++) {\nindexes[s.charAt(i) &amp; 15].add(i);\n}\nString mt = \"\";\nint mc = (int) 1e5;\nfor (char b = '0'; b &lt;= '9'; b++) {\n// \u66ff\u6362\u51fak\u4e2ab\nint cnt = indexes[b &amp; 15].size();\nint cost = 0;\nchar[] t = s.toCharArray();\nfor (char d = 1; cnt &lt; k; d++) {\nif (b + d &lt;= '9') { // i+d =&gt; i \u5b57\u5178\u5e8f\u964d\u4f4e\uff0c\u4ece\u524d\u5f80\u540e\u66ff\u6362\nList&lt;Integer&gt; p = indexes[(b + d) &amp; 15];\nfor (int i = 0, m = p.size(); i &lt; m &amp;&amp; cnt &lt; k; i++) {\nt[p.get(i)] = b;\ncost += d;\ncnt++;\n}\n}\nif (b - d &gt;= '0') { // i-d =&gt; i \u5b57\u5178\u5e8f\u5347\u9ad8\uff0c\u4ece\u540e\u5f80\u524d\u66ff\u6362\nList&lt;Integer&gt; p = indexes[(b - d) &amp; 15];\nfor (int i = p.size() - 1; i &gt;= 0 &amp;&amp; cnt &lt; k; i--) {\nt[p.get(i)] = b;\ncost += d;\ncnt++;\n}\n}\n}\nString str = new String(t);\nif (mc &gt; cost) {\nmc = cost;\nmt = str;\n} else if (mc == cost &amp;&amp; mt.compareTo(str) &gt; 0) {\nmt = str;\n}\n}\nout.println(mc);\nout.println(mt);\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"basic/enumerate/#lc1625-\u6267\u884c\u64cd\u4f5c\u540e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32","title":"LC1625: \u6267\u884c\u64cd\u4f5c\u540e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>n(2\u2264n\u2264100)</code> \u7684\u5b57\u7b26\u4e32 <code>s</code> \u4ee5\u53ca\u4e24\u4e2a\u6574\u6570 <code>a(0\u2264a\u22649)</code> \u548c <code>b(1\u2264b&lt;n)</code> \u3002 \u5176\u4e2d\uff0c<code>n</code> \u4e3a\u5076\u6570\uff0c\u4e14\u5b57\u7b26\u4e32 <code>s</code> \u4ec5\u7531\u6570\u5b57 <code>0</code> \u5230 <code>9</code> \u7ec4\u6210\u3002\u4f60\u53ef\u4ee5\u5728 <code>s</code> \u4e0a\u6309\u4efb\u610f\u987a\u5e8f\u591a\u6b21\u6267\u884c\u4e0b\u9762\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u4e00\uff1a</p> <ul> <li>\u7d2f\u52a0\uff1a\u5c06 <code>a</code> \u52a0\u5230 <code>s</code> \u4e2d\u6240\u6709\u4e0b\u6807\u4e3a\u5947\u6570\u7684\u5143\u7d20\u4e0a\uff08\u4e0b\u6807\u4ece <code>0</code> \u5f00\u59cb\uff09\u3002\u6570\u5b57\u4e00\u65e6\u8d85\u8fc7 <code>9</code> \u5c31\u4f1a\u53d8\u6210 <code>0</code>\uff0c\u5982\u6b64\u5faa\u73af\u5f80\u590d\u3002\u4f8b\u5982\uff0c<code>s = \"3456\"</code> \u4e14 <code>a = 5</code>\uff0c\u5219\u6267\u884c\u6b64\u64cd\u4f5c\u540e <code>s</code> \u53d8\u6210 <code>\"3951\"</code>\u3002</li> <li>\u8f6e\u8f6c\uff1a\u5c06 <code>s</code> \u5411\u53f3\u8f6e\u8f6c <code>b</code> \u4f4d\u3002\u4f8b\u5982\uff0c<code>s = \"3456\"</code> \u4e14 <code>b = 1</code>\uff0c\u5219\u6267\u884c\u6b64\u64cd\u4f5c\u540e <code>s</code> \u53d8\u6210 <code>\"6345\"</code>\u3002</li> </ul> <p>\u8bf7\u4f60\u8fd4\u56de\u5728 <code>s</code> \u4e0a\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u4efb\u610f\u6b21\u540e\u53ef\u4ee5\u5f97\u5230\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u7d2f\u52a0\u64cd\u4f5c\u6267\u884c <code>10 / GCD(10, a)</code> \u6b21\u540e\u590d\u539f\u3002 \u8f6e\u8f6c\u64cd\u4f5c\u6267\u884c <code>n / GCD(n, b)</code> \u6b21\u540e\u590d\u539f\u3002 <code>b</code> \u4e3a\u5076\u6570\u65f6\uff0c\u53ea\u6709\u5947\u6570\u7d22\u5f15\u4f4d\u7f6e\u53ef\u4ee5\u6267\u884c\u7d2f\u52a0\u64cd\u4f5c\uff1b <code>b</code> \u4e3a\u5947\u6570\u65f6\uff0c\u5947\u6570\u7d22\u5f15\u4f4d\u7f6e\u548c\u5076\u6570\u7d22\u5f15\u4f4d\u7f6e\u53ef\u4ee5\u72ec\u7acb\u6267\u884c\u7d2f\u52a0\u64cd\u4f5c\u3002</p> Go <pre><code>package main\nimport \"bytes\"\nfunc findLexSmallestString(s string, a int, b int) string {\nn := len(s)\nc1 := 10 / gcd(10, a) // \u7d2f\u52a0c1\u6b21\u540e\u590d\u539f\nc2 := n / gcd(n, b)   // \u8f6e\u8f6cc2\u6b21\u540e\u590d\u539f\nans := []byte(s)\ntmp := []byte(s + s) // \u65b9\u4fbf\u622a\u53d6\u8f6e\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\nrotate := func() {\nfor i := 0; i &lt; c2; i++ {\nl := ((n-i*b)%n + n) % n // \u8f6e\u8f6ci\u6b21\u540e\u7684\u8d77\u59cb\u4f4d\u7f6e\nif bytes.Compare(ans, tmp[l:l+n]) == 1 {\ncopy(ans, tmp[l:l+n])\n}\n}\n}\nfor i := 0; i &lt; c1; i++ {\n// \u7d2f\u52a0\u5947\u6570\u7d22\u5f15\u4f4d\u7f6e\nfor j := 1; j &lt; n&lt;&lt;1; j += 2 {\ntmp[j] = (tmp[j]&amp;15+byte(a))%10 + '0'\n}\nif b&amp;1 == 0 {\nrotate() // \u6267\u884c\u8f6e\u8f6c\u64cd\u4f5c\uff0c\u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\n} else {\nfor j := 0; j &lt; c1; j++ {\n// \u7d2f\u52a0\u5076\u6570\u7d22\u5f15\u4f4d\u7f6e\nfor k := 0; k &lt; n&lt;&lt;1; k += 2 {\ntmp[k] = (tmp[k]&amp;15+byte(a))%10 + '0'\n}\nrotate() // \u6267\u884c\u8f6e\u8f6c\u64cd\u4f5c\uff0c\u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\n}\n}\n}\nreturn string(ans)\n}\nfunc gcd(x, y int) int {\nfor y &gt; 0 {\nx, y = y, x%y\n}\nreturn x\n}\n</code></pre>"},{"location":"basic/greedy/","title":"\u8d2a\u5fc3","text":""},{"location":"basic/greedy/#lc1605-\u7ed9\u5b9a\u884c\u548c\u5217\u7684\u548c\u6c42\u53ef\u884c\u77e9\u9635","title":"LC1605: \u7ed9\u5b9a\u884c\u548c\u5217\u7684\u548c\u6c42\u53ef\u884c\u77e9\u9635","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e24\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a <code>m</code> \u548c <code>n</code> \u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4 <code>rowSum</code> \u548c <code>colSum</code> \uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\u6570\u7ec4\u957f\u5ea6 <code>1\u2264m,n\u2264500</code> \u4e14\u4e24\u4e2a\u6570\u7ec4\u503c\u7684\u8303\u56f4\u4e3a <code>[0,1e8]</code>\uff1b</li> <li><code>rowSum[i]</code> \u662f\u4e8c\u7ef4\u77e9\u9635\u4e2d\u7b2c <code>i</code> \u884c\u5143\u7d20\u7684\u548c\uff1b</li> <li><code>colSum[j]</code> \u662f\u4e8c\u7ef4\u77e9\u9635\u4e2d\u7b2c <code>j</code> \u5217\u5143\u7d20\u7684\u548c\u3002</li> </ul> <p>\u8bf7\u8fd4\u56de\u5927\u5c0f\u4e3a <code>m x n</code> \u7684\u4efb\u610f\u975e\u8d1f\u6574\u6570\u77e9\u9635\uff0c\u4e14\u8be5\u77e9\u9635\u6ee1\u8db3 <code>rowSum</code> \u548c <code>colSum</code> \u7684\u8981\u6c42\u3002 \u9898\u76ee\u4fdd\u8bc1\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u53ef\u884c\u77e9\u9635\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u8d2a\u5fc3\u7684\u5c06 <code>matrix[i][j]</code> \u7684\u503c\u6784\u9020\u4e3a\u6ee1\u8db3\u884c\u5217\u548c\u4e0d\u8d85\u8fc7 <code>rowSum</code> \u548c <code>colSum</code> \u7684\u6700\u5927\u503c\u3002</p> Go <pre><code>package main\nfunc restoreMatrix(rowSum []int, colSum []int) [][]int {\nm, n := len(rowSum), len(colSum)\nans := make([][]int, m)\nfor i := range ans {\nans[i] = make([]int, n)\n}\nfor i, j := 0, 0; i &lt; m &amp;&amp; j &lt; n; {\nx := min(rowSum[i], colSum[j])\nans[i][j] = x // \u53d6\u4e0d\u8d85\u8fc7rowSum[i]\u548ccolSum[j]\u7684\u6700\u5927\u503c\nif rowSum[i] -= x; rowSum[i] == 0 {\ni++ // \u8be5\u884c\u5269\u4f59\u5143\u7d20\u8d4b0\n}\nif colSum[j] -= x; colSum[j] == 0 {\nj++ // \u8be5\u5217\u5269\u4f59\u5143\u7d20\u8d4b0\n}\n}\nreturn ans\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre>"},{"location":"basic/greedy/#cf1054d-changing-array","title":"CF1054D: Changing Array","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165\u6b63\u6574\u6570 \\(n(1\u2264n\u22642e5)\\ k(1\u2264k\u226430)\\) \uff0c\u7b2c\u4e8c\u884c\u8f93\u5165\u957f\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(a(0\u2264a[i]\u22642^k-1)\\) \u3002 \u8bbe \\(mask = (1&lt;&lt;k)-1\\) \uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f60\u53ef\u4ee5\u628a\u4efb\u610f \\(a[i]\\) \u4fee\u6539\u4e3a \\(a[i] \\oplus mask\\) \uff0c\u4f60\u53ef\u4ee5\u64cd\u4f5c\u4efb\u610f\u6b21\uff08\u5305\u62ec \\(0\\) \u6b21\uff09\u3002 \u4fee\u6539\u540e\uff0c\u6700\u591a\u6709\u591a\u5c11\u4e2a \\(a\\) \u7684\u975e\u7a7a\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5176\u5f02\u6216\u548c\u4e0d\u7b49\u4e8e \\(0\\) \uff1f</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u8fd9\u91cc\u6709\u4e00\u7bc7\u5f88\u8be6\u7ec6\u7684\u9898\u89e3\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nvar n, k, x, s int\nFscan(in, &amp;n, &amp;k)\nans := c2(n + 1) // \u5f02\u6216\u524d\u7f00\u548c\u6570\u5bf9\u603b\u6570\nmask := 1&lt;&lt;k - 1\ncnt := map[int]int{s: 1}\nfor ; n &gt; 0; n-- {\nFscan(in, &amp;x)\ns ^= x\ncnt[min(s, s^mask)]++ // s\u548cs^mask\u7684\u4e2a\u6570\u4e00\u8d77\u7edf\u8ba1\n}\nfor _, c := range cnt {\n// \u51cf\u53bb\u76f8\u540c\u6570\u5bf9\u6570\u76ee\uff0c\u5e73\u5747\u5206\u914ds\u548cs^mask\u7684\u4e2a\u6570\uff0c\u4f7f\u76f8\u540c\u5f02\u6216\u524d\u7f00\u548c\u6570\u5bf9\u6570\u76ee\u6700\u5c11\nans -= c2(c&gt;&gt;1) + c2((c+1)&gt;&gt;1)\n}\nPrintln(ans)\n}\nfunc c2(n int) int64 {\nreturn (int64(n) * int64(n-1)) &gt;&gt; 1 // n\u4e2a\u6570\u5b57\u7684\u4e0d\u540c\u6570\u5bf9\u6570\u76ee\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nk = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nk.nextToken());\nint k = Integer.parseInt(nk.nextToken());\nlong ans = c2(n + 1); // \u5f02\u6216\u524d\u7f00\u548c\u6570\u5bf9\u603b\u6570\nint s = 0, mask = (1 &lt;&lt; k) - 1;\nMap&lt;Integer, Integer&gt; cnt = new HashMap&lt;&gt;();\ncnt.put(s, 1);\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nfor (; n &gt; 0; n--) {\ns ^= Integer.parseInt(tokenizer.nextToken());\n// s\u548cs^mask\u7684\u4e2a\u6570\u4e00\u8d77\u7edf\u8ba1\ncnt.compute(Math.min(s, s ^ mask), (v, c) -&gt; c == null ? 1 : c + 1);\n}\nfor (int c : cnt.values()) {\n// \u51cf\u53bb\u76f8\u540c\u6570\u5bf9\u6570\u76ee\uff0c\u5e73\u5747\u5206\u914ds\u548cs^mask\u7684\u4e2a\u6570\uff0c\u4f7f\u76f8\u540c\u5f02\u6216\u524d\u7f00\u548c\u6570\u5bf9\u6570\u76ee\u6700\u5c11\nans -= c2(c &gt;&gt; 1) + c2((c + 1) &gt;&gt; 1);\n}\nSystem.out.println(ans);\nin.close();\n}\npublic static long c2(int n) {\nreturn (((long) n) * ((long) (n - 1))) &gt;&gt; 1; // n\u4e2a\u6570\u5b57\u7684\u4e0d\u540c\u6570\u5bf9\u6570\u76ee\n}\n}\n</code></pre>"},{"location":"basic/prefix-sum/","title":"\u524d\u7f00\u548c &amp; \u5dee\u5206","text":""},{"location":"basic/prefix-sum/#\u524d\u7f00\u548c","title":"\u524d\u7f00\u548c","text":""},{"location":"basic/prefix-sum/#lc1124-\u8868\u73b0\u826f\u597d\u7684\u6700\u957f\u65f6\u95f4\u6bb5","title":"LC1124: \u8868\u73b0\u826f\u597d\u7684\u6700\u957f\u65f6\u95f4\u6bb5","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u957f\u5ea6\u4e3a \\(n(1\u2264n\u226410^4)\\) \u7684\u5de5\u4f5c\u65f6\u95f4\u8868 \\(hours\\) \uff0c\u8bb0\u5f55\u7740\u67d0\u4f4d\u5458\u5de5\u6bcf\u5929\u7684\u5de5\u4f5c\u5c0f\u65f6\u6570\u3002 \u6211\u4eec\u8ba4\u4e3a\u5f53\u5458\u5de5\u4e00\u5929\u4e2d\u7684\u5de5\u4f5c\u5c0f\u65f6\u6570\u5927\u4e8e 8 \u5c0f\u65f6\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u8fd9\u4e00\u5929\u5c31\u662f\u300c\u52b3\u7d2f\u7684\u4e00\u5929\u300d\u3002 \u6240\u8c13\u300c\u8868\u73b0\u826f\u597d\u7684\u65f6\u95f4\u6bb5\u300d\uff0c\u610f\u5473\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u300c\u52b3\u7d2f\u7684\u5929\u6570\u300d\u4e25\u683c\u5927\u4e8e\u300c\u4e0d\u52b3\u7d2f\u7684\u5929\u6570\u300d\u3002 \u8bf7\u4f60\u8fd4\u56de\u300c\u8868\u73b0\u826f\u597d\u65f6\u95f4\u6bb5\u300d\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u524d\u7f00\u548c + \u54c8\u5e0c\u8868</p> Go <pre><code>package main\nfunc longestWPI(hours []int) (ans int) {\ns := 0                     // \u524d\u7f00\u548c\nfirst := make(map[int]int) // \u524d\u7f00\u548c\u9996\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\nfor i, h := range hours {\nif h &gt; 8 {\ns++\n} else {\ns--\n}\nif s &gt; 0 {\nans = i + 1\n} else if j, ok := first[s-1]; ok {\nans = max(ans, i-j)\n}\nif _, ok := first[s]; !ok {\nfirst[s] = i\n}\n}\nreturn\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u524d\u7f00\u548c + \u5355\u8c03\u6808</p> <p>\u8fdb\u9636\uff1a\u5982\u679c\u6570\u7ec4\u4e2d\u7684\u503c\u4e0d\u53ea\u6709 \\(1\\) \u548c \\(-1\\)\uff0c\u90a3\u4e48\u5982\u4f55\u8ba1\u7b97\u548c\u81f3\u5c11\u4e3a \\(k\\) \u7684\u6700\u957f\u5b50\u6570\u7ec4\uff1f</p> Go <pre><code>package main\nfunc longestWPI(hours []int) int {\nfor i, x := range hours {\nif x &gt; 8 {\nhours[i] = 1\n} else {\nhours[i] = -1\n}\n}\nreturn longestSubarray(hours, 1)\n}\n// \u6cdb\u5316\uff1a\u548c\u81f3\u5c11\u4e3a K \u7684\u6700\u957f\u5b50\u6570\u7ec4\nfunc longestSubarray(nums []int, k int) (ans int) {\nk-- // \u548c\u81f3\u5c11\u4e3ak -&gt; \u548c\u5927\u4e8ek\nn := len(nums)\ns := make([]int, n+1)   // \u524d\u7f00\u548c\nst, tail := []int{}, -1 // \u524d\u7f00\u548c\u5355\u8c03\u9012\u51cf\u7d22\u5f15\u6808\nfor i, x := range nums {\ni++\nif s[i] = s[i-1] + x; s[i] &gt; k {\nans = i\n}\nif tail == -1 || s[i] &lt; s[st[tail]] {\nst = append(st, i)\ntail++\n}\n}\nfor i := n; i &gt; ans &amp;&amp; tail != -1; i-- {\nfor ; tail != -1 &amp;&amp; s[i]-s[st[tail]] &gt; k; tail-- {\nans = max(ans, i-st[tail])\n}\n}\nreturn\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre>"},{"location":"basic/prefix-sum/#lc2488-\u7edf\u8ba1\u4e2d\u4f4d\u6570\u4e3a-k-\u7684\u5b50\u6570\u7ec4","title":"LC2488: \u7edf\u8ba1\u4e2d\u4f4d\u6570\u4e3a K \u7684\u5b50\u6570\u7ec4","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>n(1\u2264n\u22641e5)</code> \u7684\u6570\u7ec4 <code>nums</code> \uff0c\u8be5\u6570\u7ec4\u7531\u4ece <code>1</code> \u5230 <code>n</code> \u7684\u4e0d\u540c\u6574\u6570\u7ec4\u6210\u3002 \u53e6\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570 <code>k(1\u2264k\u2264n)</code> \u3002\u7edf\u8ba1\u5e76\u8fd4\u56de <code>nums</code> \u4e2d\u7684\u4e2d\u4f4d\u6570\u7b49\u4e8e <code>k</code> \u7684\u975e\u7a7a\u5b50\u6570\u7ec4\u7684\u6570\u76ee\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u524d\u7f00\u548c + \u54c8\u5e0c\u8868</p> <p>\u5b9e\u73b0\u65f6\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u4ee3\u66ff\u54c8\u5e0c\u8868\uff0c\u7a7a\u95f4\u6362\u65f6\u95f4\u3002</p> Go <pre><code>package main\nfunc countSubarrays(nums []int, k int) (ans int) {\nj := 0\nfor ; nums[j] != k; j++ {\n}\ns := len(nums)\n// [-n, n] =&gt; [0, n&lt;&lt;1]\ncnt := make([]int, s&lt;&lt;1+1)\ncnt[s] = 1\nfor i, x := range nums {\nif x &gt; k {\ns++\n} else {\ns--\n}\nif i &lt; j {\ncnt[s]++\n} else {\nans += cnt[s] + cnt[s+1]\n}\n}\nreturn\n}\n</code></pre>"},{"location":"basic/prefix-sum/#lc1590-\u4f7f\u6570\u7ec4\u548c\u80fd\u88ab-p-\u6574\u9664","title":"LC1590: \u4f7f\u6570\u7ec4\u548c\u80fd\u88ab P \u6574\u9664","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n(1\u2264n\u226410^5)\\) \u7684\u6b63\u6574\u6570\u6570\u7ec4 \\(nums(1\u2264nums[i]\u226410^9)\\) \u3002 \u8bf7\u4f60\u79fb\u9664\u4e00\u4e2a\u6700\u77ed\u7684\u5b50\u6570\u7ec4\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\uff0c\u4f7f\u5f97\u5269\u4f59\u5143\u7d20\u7684\u548c\u80fd\u88ab \\(p(1\u2264p\u226410^9)\\) \u6574\u9664\u3002 \u4e0d\u5141\u8bb8\u5c06\u6574\u4e2a\u6570\u7ec4\u90fd\u79fb\u9664\u3002 \u8bf7\u4f60\u8fd4\u56de\u4f60\u9700\u8981\u79fb\u9664\u7684\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5982\u679c\u65e0\u6cd5\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff0c\u8fd4\u56de \\(-1\\) \u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u524d\u7f00\u548c + \u54c8\u5e0c\u8868</p> Go <pre><code>package main\nfunc minSubarray(nums []int, p int) int {\ns := 0\nfor _, x := range nums {\ns += x\n}\nif s %= p; s == 0 {\nreturn 0\n} else {\nn := len(nums)\nans, pre := n, 0\n// last[pre]\u4fdd\u5b58\u524d\u7f00\u548c\u4f59p\u4e3apre\u7684\u6700\u5927\u7d22\u5f15\nlast := map[int]int{0: -1}\nfor i, x := range nums {\npre = (pre + x) % p\nt := (p - (s - pre)) % p\nif j, ok := last[t]; ok {\nans = min(ans, i-j)\n}\nlast[pre] = i\n}\nif ans == n {\nreturn -1\n} else {\nreturn ans\n}\n}\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre>"},{"location":"basic/prefix-sum/#cf1552d-array-differentiation","title":"CF1552D: Array Differentiation","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u8f93\u5165 \\(t(1\u2264t\u226420)\\) \u8868\u793a \\(t\\) \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u8f93\u5165 \\(n(1\u2264n\u226410)\\) \u548c\u957f\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(a(-1e5\u2264a[i]\u22641e5)\\)\u3002 \u5982\u679c\u5b58\u5728\u957f\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(b\\) \uff0c\u5bf9\u4e8e\u4efb\u610f \\(i\\) \uff0c\u90fd\u5b58\u5728 \\(j\\) \u548c \\(k\\)\uff0c\u4f7f\u5f97 \\(a[i]=b[j]-b[k]\\) \uff0c\u5219\u8f93\u51fa <code>YES</code>\uff0c\u5426\u5219\u8f93\u51fa <code>NO</code>\u3002 \u6ce8\u610f \\(j\\) \u53ef\u4ee5\u7b49\u4e8e \\(k\\)\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6570\u7ec4 \\(a\\) \u4e2d\u5143\u7d20\u7684\u987a\u5e8f\u4e0d\u5f71\u54cd\u7b54\u6848\u3002 \u6570\u7ec4 \\(a\\) \u4e2d\u5143\u7d20\u7684\u6b63\u8d1f\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ef\u4ee5\u4efb\u610f\u53d6\u53cd\u3002 \u9996\u5148\u5c06\u6570\u7ec4 \\(b\\) \u6784\u9020\u4e3a\u6570\u7ec4 \\(a\\) \u524d \\(n-1\\) \u4e2a\u5143\u7d20\u7684\u524d\u7f00\u548c\uff0c\u5219\u6709\uff1a</p> <ul> <li>\u5f53 \\(i &lt; n-1\\) \u65f6\uff0c\\(a_i = b_{i+1} - b_i\\) \uff1b</li> <li>\u5f53 \\(i = n-1\\) \u65f6\uff0c\u5982\u679c\u5b58\u5728\u533a\u95f4 \\([l, r]\\) \uff0c\u6ee1\u8db3 \\(\\sum\\limits_{i=l}^r a_i = a_n\\) \uff0c\u5219 \\(a_n = b_{r+1} - b_l\\) \u3002</li> </ul> <p>\u56e0\u6b64\uff0c\u53ea\u8981\u5b58\u5728\u533a\u95f4 \\([l, r]\\) \uff0c\u6ee1\u8db3 \\(\\sum\\limits_{i=l}^r a_i = a_n\\) \u5373\u53ef\u3002 \u56e0\u4e3a\u6570\u7ec4 \\(a\\) \u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u4efb\u610f\u4ea4\u6362\u987a\u5e8f\u3001\u4efb\u610f\u53d6\u53cd\uff0c\u6240\u4ee5\u4e0a\u8ff0\u6761\u4ef6\u7b49\u4ef7\u4e8e\u6570\u7ec4 \\(a\\) \u5b58\u5728\u4e24\u4e2a\u5143\u7d20\u548c\u76f8\u7b49\u7684\u5b50\u96c6\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar t, n int\nfor Fscan(in, &amp;t); t &gt; 0; t-- {\nFscan(in, &amp;n)\na := make([]int, n)\nfor i := range a {\nFscan(in, &amp;a[i])\n}\nans := false\nset := map[int]bool{0: true}\nfor i := (1 &lt;&lt; n) - 1; i &gt; 0; i-- {\nsum := 0\nfor j, x := range a {\nif i&gt;&gt;j&amp;1 == 1 {\nsum += x\n}\n}\nif set[sum] {\nans = true\nbreak\n} else {\nset[sum] = true\n}\n}\nif ans {\nFprintln(out, \"YES\")\n} else {\nFprintln(out, \"NO\")\n}\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint t = Integer.parseInt(in.readLine());\nfor (; t &gt; 0; t--) {\nint n = Integer.parseInt(in.readLine());\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nint[] a = new int[n];\nfor (int i = 0; i &lt; n; i++) {\na[i] = Integer.parseInt(tokenizer.nextToken());\n}\nboolean ans = false;\nSet&lt;Integer&gt; set = new HashSet&lt;&gt;();\nset.add(0);\nfor (int i = (1 &lt;&lt; n) - 1; i &gt; 0; i--) {\nint sum = 0;\nfor (int j = 0; j &lt; n; j++) {\nif (((i &gt;&gt; j) &amp; 1) == 1) {\nsum += a[j];\n}\n}\nif (set.contains(sum)) {\nans = true;\nbreak;\n} else {\nset.add(sum);\n}\n}\nout.println(ans ? \"YES\" : \"NO\");\n}\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"basic/prefix-sum/#\u5dee\u5206","title":"\u5dee\u5206","text":""},{"location":"basic/prefix-sum/#\u4e00\u7ef4\u5dee\u5206","title":"\u4e00\u7ef4\u5dee\u5206","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u5217 \\(A\\) \uff0c\u5176\u5dee\u5206\u6570\u5217 \\(B\\) \u6839\u636e\u5982\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a</p> \\[B_i = A_i - A_{i-1}\\] <p>\u5176\u4e2d \\(1\u2264i\u2264n\\) \u4e14 \\(B_0 = A_0\\) \u3002</p>"},{"location":"basic/prefix-sum/#\u4e8c\u7ef4\u5dee\u5206","title":"\u4e8c\u7ef4\u5dee\u5206","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u77e9\u9635 \\(A\\) \uff0c\u5176\u5dee\u5206\u77e9\u9635 \\(B\\) \u6839\u636e\u5982\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a</p> \\[B_{i,j} = A_{i,j} - A_{i-1,j} - A_{i,j-1} + A_{i-1,j-1}\\] <p>\u5176\u4e2d \\(1\u2264i,j\u2264n\\) \u3002</p> <p>\u8fd9\u91cc\u6709\u4e00\u7bc7\u5f88\u8be6\u7ec6\u7684\u6559\u7a0b\u3002</p>"},{"location":"basic/prefix-sum/#lg3397-\u5730\u6bef","title":"LG3397: \u5730\u6bef","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570 \\(n,m\\) \\((1\u2264n,m\u22641e3)\\)\u3002\u8868\u793a\u5728 \\(n \\times n\\) \u7684\u683c\u5b50\u4e0a\u6709 \\(m\\) \u4e2a\u5730\u6bef\u3002 \u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165\u56db\u4e2a\u6574\u6570\uff1a\\(x_1,y_1,x_2,y_2\\) \u3002 \u8868\u793a\u4e00\u5757\u5730\u6bef\uff0c\u5de6\u4e0a\u89d2\u662f \\((x_1,y_1)\\) \uff0c\u53f3\u4e0b\u89d2\u662f \\((x_2,y_2)\\) \u3002\u5750\u6807\u4ece \\(1\\) \u5f00\u59cb\u3002 \u8bf7\u8f93\u51fa\u4e00\u4e2a \\(n \\times n\\) \u7684\u77e9\u9635 \\(grid\\)\uff0c\u5176\u4e2d \\(grid[i][j]\\) \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u88ab\u591a\u5c11\u4e2a\u5730\u6bef\u8986\u76d6\u3002</p> <p>\u5728 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u6309\u884c\u5dee\u5206</p> Go <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m, x1, y1, x2, y2 int\nFscan(in, &amp;n, &amp;m)\ndiff := make([][]int, n+1)\nfor i := range diff {\ndiff[i] = make([]int, n+2)\n}\nfor ; m &gt; 0; m-- {\nFscan(in, &amp;x1, &amp;y1, &amp;x2, &amp;y2)\nfor i := x1; i &lt;= x2; i++ {\ndiff[i][y1]++\ndiff[i][y2+1]--\n}\n}\nfor i := 1; i &lt;= n; i++ {\nx := 0\nfor j := 1; j &lt;= n; j++ {\nx += diff[i][j]\nFprint(out, x, \" \")\n}\nFprintln(out)\n}\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u4e8c\u7ef4\u5dee\u5206</p> Go <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m, x1, y1, x2, y2 int\nFscan(in, &amp;n, &amp;m)\ndiff := make([][]int, n+2)\nfor i := range diff {\ndiff[i] = make([]int, n+2)\n}\nfor ; m &gt; 0; m-- {\nFscan(in, &amp;x1, &amp;y1, &amp;x2, &amp;y2)\ndiff[x1][y1]++\ndiff[x1][y2+1]--\ndiff[x2+1][y1]--\ndiff[x2+1][y2+1]++\n}\nfor i := 1; i &lt;= n; i++ {\nfor j := 1; j &lt;= n; j++ {\ndiff[i][j] += diff[i-1][j] + diff[i][j-1] - diff[i-1][j-1]\nFprint(out, diff[i][j], \" \")\n}\nFprintln(out)\n}\n}\n</code></pre>"},{"location":"basic/simulate/","title":"\u6a21\u62df","text":""},{"location":"basic/simulate/#lc43-\u5b57\u7b26\u4e32\u76f8\u4e58","title":"LC43: \u5b57\u7b26\u4e32\u76f8\u4e58","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u5b9a\u4e24\u4e2a\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570 <code>num1</code> \u548c <code>num2</code> \uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u8303\u56f4\uff1a<code>[1,200]</code> \u3002 <code>num1</code> \u548c <code>num2</code> \u90fd\u4e0d\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6\uff0c\u9664\u4e86\u6570\u5b57 <code>0</code> \u672c\u8eab\u3002 \u8fd4\u56de <code>num1</code> \u548c <code>num2</code> \u7684\u4e58\u79ef\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u505a\u52a0\u6cd5</p> Go <pre><code>package main\nfunc multiply(num1 string, num2 string) string {\nif num1 == \"0\" || num2 == \"0\" {\nreturn \"0\"\n} else {\nans := \"0\"\nm, n := len(num1), len(num2)\n//   num2\n// x num1\n// \u53d6\u51fanum1\u4e2d\u7684\u6bcf\u4e00\u4f4d\u5206\u522b\u4e0enum2\u76f8\u4e58\uff0c\u5e76\u7d2f\u52a0\u7ed3\u679c\nfor i := 0; i &lt; m; i++ {\nif a := num1[m-i-1] &amp; 15; a != 0 {\nvar x byte\ns := make([]byte, n+1)\nfor j := 0; j &lt; n; j++ {\nx += a * (num2[n-j-1] &amp; 15)\ns[n-j] = '0' + x%10\nx /= 10 // \u8fdb\u4f4d\n}\nif x &gt; 0 {\ns[0] = '0' + x\n} else {\ns = s[1:]\n}\nfor j := 0; j &lt; i; j++ {\ns = append(s, '0')\n}\n// \u7d2f\u52a0\u7ed3\u679c\nans = add(ans, string(s))\n}\n}\nreturn ans\n}\n}\nfunc add(num1 string, num2 string) string {\nif m, n := len(num1), len(num2); m &gt; n {\nreturn add(num2, num1)\n} else {\nvar x byte\nans := make([]byte, n+1)\nfor i := 0; i &lt; n; i++ {\nif i &lt; m {\nx += num1[m-i-1] &amp; 15\n}\nx += num2[n-i-1] &amp; 15\nans[n-i] = '0' + x%10\nx /= 10 // \u8fdb\u4f4d\n}\nif x &gt; 0 {\nans[0] = '0' + x\nreturn string(ans)\n} else {\nreturn string(ans[1:])\n}\n}\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u505a\u4e58\u6cd5</p> Go <pre><code>package main\nfunc multiply(num1 string, num2 string) string {\nif num1 == \"0\" || num2 == \"0\" {\nreturn \"0\"\n} else {\nm, n := len(num1), len(num2)\n// \u5f53num1\u548cnum2\u5747\u4e0d\u4e3a0\u65f6\uff0c\u5176\u4e58\u79ef\u7684\u957f\u5ea6\u4e3am+n\u6216m+n-1\nans := make([]rune, m+n)\nfor i, a := range num1 {\nfor j, b := range num2 {\n// \u9010\u4f4d\u76f8\u4e58\uff0cnum1[i]*num2[j]\u7684\u7ed3\u679c\u7d2f\u52a0\u5230ans[i+j+1]\nans[i+j+1] += (a &amp; 15) * (b &amp; 15)\n}\n}\nfor i := m + n - 1; i &gt; 0; i-- {\nif ans[i] &gt; 9 { // \u8fdb\u4f4d\nans[i-1] += ans[i] / 10\nans[i] %= 10\n}\n}\nfor ans[0] == 0 {\nans = ans[1:] // \u53bb\u9664\u524d\u7f000\n}\nfor i := range ans {\nans[i] += '0' // \u6570\u5b57\u8f6c\u4e3a\u5b57\u7b26\n}\nreturn string(ans)\n}\n}\n</code></pre>"},{"location":"basic/simulate/#lc2532-\u8fc7\u6865\u7684\u65f6\u95f4","title":"LC2532: \u8fc7\u6865\u7684\u65f6\u95f4","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u5171\u6709 \\(k\\) \u4f4d\u5de5\u4eba\u8ba1\u5212\u5c06 \\(n\\) \u4e2a\u7bb1\u5b50\u4ece\u65e7\u4ed3\u5e93\u79fb\u52a8\u5230\u65b0\u4ed3\u5e93\u3002 \u7ed9\u4f60\u4e24\u4e2a\u6574\u6570 \\(n(1\u2264n\u22641e4)\\) \u548c \\(k(1\u2264k\u22641e4)\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 \\(time\\) \uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u4e3a \\(k \\times 4\\) \u3002 \u5176\u4e2d \\(time[i] = [leftToRight_i,\\ pickOld_i,\\ rightToLeft_i,\\ putNew_i]\\) \u4e14 \\(1\u2264time[i][j]\u22641e3\\) \u3002</p> \u7bb1\u5b50\u642c\u8fd0\u89c4\u5219 <p>\u4e00\u6761\u6cb3\u5c06\u4e24\u5ea7\u4ed3\u5e93\u5206\u9694\uff0c\u53ea\u80fd\u901a\u8fc7\u4e00\u5ea7\u6865\u901a\u884c\u3002\u65e7\u4ed3\u5e93\u4f4d\u4e8e\u6cb3\u7684\u53f3\u5cb8\uff0c\u65b0\u4ed3\u5e93\u5728\u6cb3\u7684\u5de6\u5cb8\u3002 \u5f00\u59cb\u65f6\uff0c\u6240\u6709 \\(k\\) \u4f4d\u5de5\u4eba\u90fd\u5728\u6865\u7684\u5de6\u4fa7\u7b49\u5f85\u3002\u4e3a\u4e86\u79fb\u52a8\u8fd9\u4e9b\u7bb1\u5b50\uff0c\u7b2c \\(i\\) \u4f4d\u5de5\u4eba\uff08\u4e0b\u6807\u4ece \\(0\\) \u5f00\u59cb\uff09\u53ef\u4ee5\uff1a</p> <ul> <li>\u4ece\u5de6\u5cb8\uff08\u65b0\u4ed3\u5e93\uff09\u8de8\u8fc7\u6865\u5230\u53f3\u5cb8\uff08\u65e7\u4ed3\u5e93\uff09\uff0c\u7528\u65f6 \\(leftToRight_i\\) \u5206\u949f\u3002</li> <li>\u4ece\u65e7\u4ed3\u5e93\u9009\u62e9\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5e76\u8fd4\u56de\u5230\u6865\u8fb9\uff0c\u7528\u65f6 \\(pickOld_i\\) \u5206\u949f\u3002\u4e0d\u540c\u5de5\u4eba\u53ef\u4ee5\u540c\u65f6\u642c\u8d77\u6240\u9009\u7684\u7bb1\u5b50\u3002</li> <li>\u4ece\u53f3\u5cb8\uff08\u65e7\u4ed3\u5e93\uff09\u8de8\u8fc7\u6865\u5230\u5de6\u5cb8\uff08\u65b0\u4ed3\u5e93\uff09\uff0c\u7528\u65f6 \\(rightToLeft_i\\) \u5206\u949f\u3002</li> <li>\u5c06\u7bb1\u5b50\u653e\u5165\u65b0\u4ed3\u5e93\uff0c\u5e76\u8fd4\u56de\u5230\u6865\u8fb9\uff0c\u7528\u65f6 \\(putNew_i\\) \u5206\u949f\u3002\u4e0d\u540c\u5de5\u4eba\u53ef\u4ee5\u540c\u65f6\u653e\u4e0b\u6240\u9009\u7684\u7bb1\u5b50\u3002</li> </ul> <p>\u5982\u679c\u6ee1\u8db3\u4e0b\u9762\u4efb\u4e00\u6761\u4ef6\uff0c\u5219\u8ba4\u4e3a\u5de5\u4eba \\(i\\) \u7684\u6548\u7387\u4f4e\u4e8e\u5de5\u4eba \\(j\\) \uff1a</p> <ul> <li>\\(leftToRight_i + rightToLeft_i &gt; leftToRight_j + rightToLeft_j\\)</li> <li>\\(leftToRight_i + rightToLeft_i == leftToRight_j + rightToLeft_j\\) \u4e14 \\(i &gt; j\\)</li> </ul> <p>\u5de5\u4eba\u901a\u8fc7\u6865\u65f6\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a</p> <ul> <li>\u5982\u679c\u5de5\u4eba \\(x\\) \u5230\u8fbe\u6865\u8fb9\u65f6\uff0c\u5de5\u4eba \\(y\\) \u6b63\u5728\u8fc7\u6865\uff0c\u90a3\u4e48\u5de5\u4eba \\(x\\) \u9700\u8981\u5728\u6865\u8fb9\u7b49\u5f85\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u6b63\u5728\u8fc7\u6865\u7684\u5de5\u4eba\uff0c\u90a3\u4e48\u5728\u6865\u53f3\u8fb9\u7b49\u5f85\u7684\u5de5\u4eba\u53ef\u4ee5\u5148\u8fc7\u6865\u3002\u5982\u679c\u540c\u65f6\u6709\u591a\u4e2a\u5de5\u4eba\u5728\u53f3\u8fb9\u7b49\u5f85\uff0c\u90a3\u4e48\u6548\u7387\u6700\u4f4e\u7684\u5de5\u4eba\u4f1a\u5148\u8fc7\u6865\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u6b63\u5728\u8fc7\u6865\u7684\u5de5\u4eba\uff0c\u4e14\u6865\u53f3\u8fb9\u4e5f\u6ca1\u6709\u5728\u7b49\u5f85\u7684\u5de5\u4eba\uff0c\u540c\u65f6\u65e7\u4ed3\u5e93\u8fd8\u5269\u4e0b\u81f3\u5c11\u4e00\u4e2a\u7bb1\u5b50\u9700\u8981\u642c\u8fd0\uff0c\u6b64\u65f6\u5728\u6865\u5de6\u8fb9\u7684\u5de5\u4eba\u53ef\u4ee5\u8fc7\u6865\u3002\u5982\u679c\u540c\u65f6\u6709\u591a\u4e2a\u5de5\u4eba\u5728\u5de6\u8fb9\u7b49\u5f85\uff0c\u90a3\u4e48\u6548\u7387\u6700\u4f4e\u7684\u5de5\u4eba\u4f1a\u5148\u8fc7\u6865\u3002</li> </ul> <p>\u6240\u6709 \\(n\\) \u4e2a\u7bb1\u5b50\u90fd\u9700\u8981\u653e\u5165\u65b0\u4ed3\u5e93\uff0c\u8bf7\u4f60\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u642c\u8fd0\u7bb1\u5b50\u7684\u5de5\u4eba\u5230\u8fbe\u6cb3\u5de6\u5cb8\u7684\u65f6\u95f4\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u56db\u5806\u6a21\u62df</p> Go <pre><code>package main\nimport (\n\"container/heap\"\n\"sort\"\n)\nfunc findCrossingTime(n int, k int, time [][]int) (curr int) {\n// \u6309\u7167\u4f18\u5148\u7ea7\u4ece\u4f4e\u5230\u9ad8\u6392\u5e8f\uff0c\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u7d22\u5f15\u8d8a\u5927\u6548\u7387\u8d8a\u4f4e\uff0c\u8fc7\u6865\u4f18\u5148\u7ea7\u8d8a\u9ad8\nsort.SliceStable(time, func(i, j int) bool {\nx, y := time[i], time[j]\nreturn x[0]+x[2] &lt; y[0]+y[2]\n})\n// \u5de6\u53f3\u4e24\u5cb8\u6b63\u5728\u653e\u7bb1/\u642c\u7bb1\u7684\u5de5\u4eba\nworkL, workR := working{}, working{}\n// \u5de6\u53f3\u4e24\u5cb8\u6b63\u5728\u7b49\u5f85\u8fc7\u6865\u7684\u5de5\u4eba\nwaitL, waitR := make(waiting, k), waiting{}\nfor i := range waitL {\nwaitL[i].i = k - 1 - i // \u7d22\u5f15\u8d8a\u5927\u6548\u7387\u8d8a\u4f4e\uff0c\u8fc7\u6865\u4f18\u5148\u7ea7\u8d8a\u9ad8\n}\nfor n &gt; 0 {\n// \u5de6\u5cb8\u5b8c\u6210\u653e\u7bb1\uff0c\u8fdb\u5165\u5de6\u5cb8\u7b49\u5f85\u8fc7\u6865\u961f\u5217\nfor workL.Len() &gt; 0 &amp;&amp; workL[0].t &lt;= curr {\nheap.Push(&amp;waitL, heap.Pop(&amp;workL))\n}\n// \u53f3\u5cb8\u5b8c\u6210\u642c\u7bb1\uff0c\u8fdb\u5165\u53f3\u5cb8\u7b49\u5f85\u8fc7\u6865\u961f\u5217\nfor workR.Len() &gt; 0 &amp;&amp; workR[0].t &lt;= curr {\nheap.Push(&amp;waitR, heap.Pop(&amp;workR))\n}\nif waitR.Len() &gt; 0 &amp;&amp; waitR[0].t &lt;= curr { // \u53f3\u5cb8\u7b49\u5f85\u8fc7\u6865\u7684\u5de5\u4eba\u8fc7\u6865\nw := heap.Pop(&amp;waitR).(worker)\ncurr += time[w.i][2]                                // \u65f6\u95f4\u6765\u5230w\u8fc7\u6865\u7ed3\u675f\u6765\u5230\u5de6\u5cb8\u7684\u65f6\u523b\nheap.Push(&amp;workL, worker{w.i, curr + time[w.i][3]}) // w\u8fdb\u5165\u653e\u7bb1\u961f\u5217\uff0c\u8bb0\u5f55\u653e\u7bb1\u5b8c\u6210\u65f6\u95f4\n} else if waitL.Len() &gt; 0 &amp;&amp; waitL[0].t &lt;= curr { // \u5de6\u5cb8\u7b49\u5f85\u8fc7\u6865\u7684\u5de5\u4eba\u8fc7\u6865\nw := heap.Pop(&amp;waitL).(worker)\ncurr += time[w.i][0]                                // \u65f6\u95f4\u6765\u5230w\u8fc7\u6865\u7ed3\u675f\u6765\u5230\u53f3\u5cb8\u7684\u65f6\u523b\nheap.Push(&amp;workR, worker{w.i, curr + time[w.i][1]}) // w\u8fdb\u5165\u642c\u7bb1\u961f\u5217\uff0c\u8bb0\u5f55\u642c\u7bb1\u5b8c\u6210\u65f6\u95f4\nn--                                                 // w\u5c06\u4f1a\u5b8c\u6210\u4e00\u4e2a\u7bb1\u5b50\u7684\u642c\u8fd0\n} else {\n// \u6b64\u65f6\u6240\u6709\u5de5\u4eba\u90fd\u5728\u8fdb\u884c\u653e\u7bb1/\u642c\u7bb1\u7684\u5de5\u4f5c\uff0c\u6ca1\u6709\u7b49\u5f85\u8fc7\u6865\u7684\u5de5\u4eba\n// \u6211\u4eec\u8ba9\u65e0\u804a\u7684\u65f6\u95f4\u6765\u5230\u6240\u6709\u5de5\u4eba\u4e2d\u6700\u65e9\u5b8c\u6210\u5f53\u524d\u5de5\u4f5c\u51c6\u5907\u8fc7\u6865\u7684\u65f6\u523b\nif workL.Len() == 0 {\ncurr = workR[0].t\n} else if workR.Len() == 0 {\ncurr = workL[0].t\n} else {\ncurr = min(workL[0].t, workR[0].t)\n}\n}\n}\n// \u6b64\u65f6\u642c\u8fd0\u6700\u540e\u4e00\u4e2a\u7bb1\u5b50\u7684\u5de5\u4eba\u5df2\u7ecf\u6765\u5230\u53f3\u5cb8\n// \u7b49\u5f85\u6240\u6709\u53f3\u5cb8\u7684\u5de5\u4eba\u5b8c\u6210\u642c\u7bb1\u5e76\u8fc7\u6865\u524d\u5f80\u5de6\u5cb8\u5373\u53ef\uff0c\u7531\u4e8e\u6240\u6709\u53f3\u5cb8\u7684\u5de5\u4eba\u90fd\u8981\u524d\u5f80\u5de6\u5cb8\uff0c\u6240\u4ee5\u8fc7\u6865\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u5df2\u4e0d\u518d\u91cd\u8981\nfor workR.Len() &gt; 0 {\nw := heap.Pop(&amp;workR).(worker)\ncurr = max(curr, w.t) + time[w.i][2]\n}\nreturn\n}\ntype worker struct{ i, t int } // \u5de5\u4eba\u7f16\u53f7\u53ca\u5b8c\u6210\u65f6\u95f4\ntype working []worker\nfunc (h working) Len() int            { return len(h) }\nfunc (h working) Less(i, j int) bool  { return h[i].t &lt; h[j].t }\nfunc (h working) Swap(i, j int)       { h[i], h[j] = h[j], h[i] }\nfunc (h *working) Push(x interface{}) { *h = append(*h, x.(worker)) }\nfunc (h *working) Pop() interface{} {\nold := *h\nn := len(old)\nx := old[n-1]\n*h = old[0 : n-1]\nreturn x\n}\ntype waiting []worker\nfunc (h waiting) Len() int            { return len(h) }\nfunc (h waiting) Less(i, j int) bool  { return h[i].i &gt; h[j].i }\nfunc (h waiting) Swap(i, j int)       { h[i], h[j] = h[j], h[i] }\nfunc (h *waiting) Push(x interface{}) { *h = append(*h, x.(worker)) }\nfunc (h *waiting) Pop() interface{} {\nold := *h\nn := len(old)\nx := old[n-1]\n*h = old[0 : n-1]\nreturn x\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre>"},{"location":"basic/two-pointer/","title":"\u53cc\u6307\u9488","text":""},{"location":"basic/two-pointer/#\u6ed1\u52a8\u7a97\u53e3","title":"\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"basic/two-pointer/#lc713-\u4e58\u79ef\u5c0f\u4e8e-k-\u7684\u5b50\u6570\u7ec4","title":"LC713: \u4e58\u79ef\u5c0f\u4e8e K \u7684\u5b50\u6570\u7ec4","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>n(1\u2264n\u22643e4)</code> \u7684\u6574\u6570\u6570\u7ec4 <code>nums(1\u2264nums[i]\u22641e3)</code> \u548c\u4e00\u4e2a\u6574\u6570 <code>k(0\u2264k\u22641e6)</code> \u3002 \u8bf7\u4f60\u8fd4\u56de\u5b50\u6570\u7ec4\u5185\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\u4e25\u683c\u5c0f\u4e8e <code>k</code> \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6570\u76ee\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def Go <pre><code>package main\nfunc numSubarrayProductLessThanK(nums []int, k int) (ans int) {\nif k &lt; 2 {\nreturn 0\n} else {\nl, product := -1, 1\nfor r, x := range nums {\nfor product *= x; product &gt;= k; product /= nums[l] {\nl++\n}\nans += r - l\n}\nreturn\n}\n}\n</code></pre>"},{"location":"basic/two-pointer/#\u5feb\u6162\u6307\u9488","title":"\u5feb\u6162\u6307\u9488","text":""},{"location":"basic/two-pointer/#lc141-\u73af\u5f62\u94fe\u8868","title":"LC141: \u73af\u5f62\u94fe\u8868","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 <code>head</code> \uff0c\u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\u3002\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u6570\u76ee\u8303\u56f4\uff1a<code>[0,1e4]</code>\u3002 \u5982\u679c\u94fe\u8868\u4e2d\u5b58\u5728\u73af\uff0c\u5219\u8fd4\u56de <code>true</code> \uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def Go <pre><code>package main\ntype ListNode struct {\nVal  int\nNext *ListNode\n}\nfunc hasCycle(head *ListNode) bool {\nif head != nil {\nslow, fast := head, head\nfor fast.Next != nil &amp;&amp; fast.Next.Next != nil {\nslow, fast = slow.Next, fast.Next.Next\nif slow == fast {\nreturn true\n}\n}\n}\nreturn false\n}\n</code></pre>"},{"location":"basic/two-pointer/#\u5b50\u5e8f\u5217\u5339\u914d","title":"\u5b50\u5e8f\u5217\u5339\u914d","text":""},{"location":"basic/two-pointer/#lc524-\u901a\u8fc7\u5220\u9664\u5b57\u6bcd\u5339\u914d\u5230\u5b57\u5178\u91cc\u6700\u957f\u5355\u8bcd","title":"LC524: \u901a\u8fc7\u5220\u9664\u5b57\u6bcd\u5339\u914d\u5230\u5b57\u5178\u91cc\u6700\u957f\u5355\u8bcd","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>m(1\u2264m\u22641e3)</code> \u7684\u5b57\u7b26\u4e32 <code>s</code> \u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>n(1\u2264n\u22641e3)</code> \u7684\u5b57\u7b26\u4e32\u6570\u7ec4 <code>dictionary</code> \uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a <code>[1,1e3]</code> \u3002 \u627e\u51fa\u5e76\u8fd4\u56de <code>dictionary</code> \u4e2d\u6700\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5220\u9664 <code>s</code> \u4e2d\u7684\u67d0\u4e9b\u5b57\u7b26\u5f97\u5230\u3002 \u5982\u679c\u7b54\u6848\u4e0d\u6b62\u4e00\u4e2a\uff0c\u8fd4\u56de\u957f\u5ea6\u6700\u957f\u4e14\u5b57\u6bcd\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b54\u6848\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u53cc\u6307\u9488</p> Go <pre><code>package main\nfunc findLongestWord(s string, dictionary []string) (ans string) {\nm := len(s)\nfor _, t := range dictionary {\ni, j, n := 0, 0, len(t)\nfor ; i &lt; m &amp;&amp; j &lt; n; i++ {\nif s[i] == t[j] {\nj++\n}\n}\nif j == n &amp;&amp; (n &gt; len(ans) || (n == len(ans) &amp;&amp; t &lt; ans)) {\nans = t\n}\n}\nreturn\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u9884\u5904\u7406 + \u53cc\u6307\u9488</p> Go <pre><code>package main\nfunc findLongestWord(s string, dictionary []string) (ans string) {\nm := len(s)\nvar first [26]int\nfor i := range first {\nfirst[i] = m\n}\n// next[i][j]\u8868\u793as[i]\u540e\u7b2c\u4e00\u4e2a\u5b57\u6bcdj+'a'\u7684\u7d22\u5f15\nnext := make([][]int, m)\nfor i := m - 1; i &gt;= 0; i-- {\nnext[i] = make([]int, 26)\ncopy(next[i], first[:])\nfirst[s[i]-'a'] = i\n}\nfor _, t := range dictionary {\nj, n := 0, len(t)\nfor i := first[t[j]-'a']; i &lt; m; i = next[i][t[j]-'a'] {\nif j++; j == n {\nif n &gt; len(ans) || (n == len(ans) &amp;&amp; t &lt; ans) {\nans = t\n}\nbreak\n}\n}\n}\nreturn\n}\n</code></pre>"},{"location":"basic/two-pointer/#\u5229\u7528\u5e8f\u5217\u6709\u5e8f\u6027","title":"\u5229\u7528\u5e8f\u5217\u6709\u5e8f\u6027","text":""},{"location":"basic/two-pointer/#lc167-\u4e24\u6570\u4e4b\u548c-ii---\u8f93\u5165\u6709\u5e8f\u6570\u7ec4","title":"LC167: \u4e24\u6570\u4e4b\u548c II - \u8f93\u5165\u6709\u5e8f\u6570\u7ec4","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>n(2\u2264n\u22643e4)</code> \u7684\u6574\u6570\u6570\u7ec4 <code>numbers</code>\uff08\u4e0b\u6807\u4ece <code>1</code> \u5f00\u59cb\uff09\uff0c\u8be5\u6570\u7ec4\u5df2\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5217\u3002 \u8bf7\u4f60\u4ece\u6570\u7ec4\u4e2d\u627e\u51fa\u4e0b\u6807\u5206\u522b\u4e3a <code>i</code> \u548c <code>j</code> \u7684\u4e24\u4e2a\u6570\uff0c\u6ee1\u8db3\u4e24\u6570\u548c\u7b49\u4e8e <code>target</code> \u4e14 <code>i &lt; j</code>\u3002 \u4ee5\u957f\u5ea6\u4e3a <code>2</code> \u7684\u6574\u6570\u6570\u7ec4 <code>[i, j]</code> \u7684\u5f62\u5f0f\u8fd4\u56de\u8fd9\u4e24\u4e2a\u6570\u7684\u4e0b\u6807 <code>i</code> \u548c <code>j</code> \u3002 \u9898\u76ee\u4fdd\u8bc1\u5b58\u5728\u4e14\u4ec5\u5b58\u5728\u4e00\u4e2a\u6709\u6548\u7b54\u6848\u3002\u4f60\u6240\u8bbe\u8ba1\u7684\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u53ea\u4f7f\u7528\u5e38\u91cf\u7ea7\u7684\u989d\u5916\u7a7a\u95f4\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def Go <pre><code>package main\nfunc twoSum(numbers []int, target int) []int {\nl, r := 0, len(numbers)-1\nfor {\nsum := numbers[l] + numbers[r]\nif sum == target {\nreturn []int{l + 1, r + 1} // \u4e0b\u6807\u4ece 1 \u5f00\u59cb\n} else if sum &lt; target {\nl++\n} else {\nr--\n}\n}\n}\n</code></pre>"},{"location":"dp/basic/","title":"\u52a8\u6001\u89c4\u5212\u57fa\u7840","text":""},{"location":"dp/digital/","title":"\u6570\u4f4d DP","text":""},{"location":"dp/digital/#lc357-\u5404\u4f4d\u6570\u5b57\u90fd\u4e0d\u540c\u7684\u6570\u5b57","title":"LC357: \u5404\u4f4d\u6570\u5b57\u90fd\u4e0d\u540c\u7684\u6570\u5b57","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(n(0\u2264n\u22648)\\) \uff0c\u7edf\u8ba1\u5e76\u8fd4\u56de\u5404\u4f4d\u6570\u5b57\u90fd\u4e0d\u540c\u7684\u6570\u5b57 \\(x(0\u2264x&lt;10^n)\\) \u7684\u4e2a\u6570\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> Go <pre><code>package main\nfunc countNumbersWithUniqueDigits(n int) int {\n// memo[i][mask]\u8bb0\u5f55 f(i, mask) \u7684\u7ed3\u679c\nmemo := make([][]int, n)\nfor i := range memo {\nmemo[i] = make([]int, 1&lt;&lt;10)\nfor j := range memo[i] {\nmemo[i][j] = -1\n}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// mask: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u7684\u6570\u5b57\u9009\u62e9\u72b6\u6001\uff0cmask&gt;&gt;d&amp;1 == 1 \u8868\u793a\u6570\u5b57 d\uff080~9\uff09\u5df2\u88ab\u9009\u62e9\uff08\u6709\u6548\u9009\u62e9\uff0c\u524d\u5bfc0\u4e0d\u7b97\uff0c\u7b49\u540c\u4e8e\u672a\u9009\u62e90\uff09\nvar f func(i, mask int) int\nf = func(i, mask int) (ans int) {\nif i == n {\nreturn 1\n} else if memo[i][mask] != -1 {\nreturn memo[i][mask]\n} else {\n// \u9009\u62e90\u4f5c\u4e3a\u5f53\u524d\u4f4d\nif mask == 0 { // \u5f53\u524d\u4f4d\u9009\u62e90\u53ea\u80fd\u4f5c\u4e3a\u524d\u5bfc0\uff08\u524d\u5bfc0\u7b49\u540c\u4e8e\u672a\u4f7f\u75280\uff0c\u6240\u4ee5mask\u4f9d\u7136\u662f0\uff09\nans += f(i+1, mask)\n} else if mask&amp;1 == 0 { // \u9ad8\u4f4d\u5df2\u7ecf\u9009\u4e86\u975e0\u7684\u6570\u5b57\uff0c\u4e140\u672a\u88ab\u4f7f\u7528\uff0c\u5219\u5f53\u524d\u4f4d\u53ef\u4ee5\u4f7f\u75280\nans += f(i+1, mask|1)\n}\n// \u9009\u62e91~9\u4f5c\u4e3a\u5f53\u524d\u4f4d\nfor d := 1; d &lt;= 9; d++ {\nif mask&gt;&gt;d&amp;1 == 0 {\nans += f(i+1, mask|(1&lt;&lt;d))\n}\n}\nmemo[i][mask] = ans\nreturn ans\n}\n}\nreturn f(0, 0)\n}\n</code></pre>"},{"location":"dp/digital/#lc1012-\u81f3\u5c11\u6709-1-\u4f4d\u91cd\u590d\u7684\u6570\u5b57","title":"LC1012: \u81f3\u5c11\u6709 1 \u4f4d\u91cd\u590d\u7684\u6570\u5b57","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u5b9a\u6b63\u6574\u6570 \\(n(1\u2264n\u22641e9)\\)\uff0c\u8fd4\u56de\u5728 \\([1, n]\\) \u8303\u56f4\u5185\u5177\u6709 \u81f3\u5c11 \\(1\\) \u4f4d \u91cd\u590d\u6570\u5b57\u7684\u6b63\u6574\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> <p>\u5982\u679c\u8981\u7edf\u8ba1\u6bcf\u4e2a\u6570\u4f4d\u4e92\u4e0d\u76f8\u540c\u7684\u6b63\u6574\u6570\u7684\u4e2a\u6570\u5462\uff1f\u53c2\u8003 LC2376: \u7edf\u8ba1\u7279\u6b8a\u6574\u6570\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> Go <pre><code>package main\nimport \"strconv\"\nfunc numDupDigitsAtMostN(n int) int {\nreturn n - countSpecialNumbers(n)\n}\n// \u7edf\u8ba1[1, n]\u8303\u56f4\u5185\u6bcf\u4e2a\u6570\u4f4d\u4e92\u4e0d\u76f8\u540c\u7684\u6b63\u6574\u6570\u7684\u4e2a\u6570\nfunc countSpecialNumbers(n int) int {\ns := strconv.Itoa(n)\nm := len(s)\n// memo[i][mask]\u8bb0\u5f55 f(i, mask, false) \u7684\u7ed3\u679c\nmemo := make([][]int, m)\nfor i := range memo {\nmemo[i] = make([]int, 1&lt;&lt;10)\nfor j := range memo[i] {\nmemo[i][j] = -1\n}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// mask: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u7684\u6570\u5b57\u9009\u62e9\u72b6\u6001\uff0cmask&gt;&gt;d&amp;1 == 1 \u8868\u793a\u6570\u5b57 d\uff080~9\uff09\u5df2\u88ab\u9009\u62e9\uff08\u6709\u6548\u9009\u62e9\uff0c\u524d\u5bfc0\u4e0d\u7b97\uff0c\u7b49\u540c\u4e8e\u672a\u9009\u62e90\uff09\n// limit: \u5f53\u524d\u6570\u4f4d\u662f\u5426\u53d7n\u5bf9\u5e94\u6570\u4f4d\u7684\u9650\u5236\uff0c\u4f8b\u5982n=10\uff0c\u5219\u7b2c0\u4e2a\u6570\u4f4d\u53ea\u80fd\u9009\u62e90\u62161\uff1b\u5982\u679c\u9009\u62e91\uff0c\u5219\u7b2c1\u4e2a\u6570\u4f4d\u4e5f\u53d7\u9650\uff0c\u53ea\u80fd\u9009\u62e90\nvar f func(i, mask int, limit bool) int\nf = func(i, mask int, limit bool) (ans int) {\nif i == m {\nreturn 1 // \u6682\u4e14\u628a0\uff08mask = 0\uff09\u7b97\u8fdb\u53bb\uff0c\u6700\u7ec8\u7ed3\u679c\u518d\u51cf\u53bb1\n} else if !limit &amp;&amp; memo[i][mask] != -1 {\n// limit\u4e3atrue\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\n// \u4f8b\u5982n=210\uff0c\u8fdb\u5165\u6700\u53f3\u4fa7\u6570\u4f4d\u65f6\uff0c\u524d\u4e24\u4f4d\u5206\u522b\u9009\u62e92\u30011\u548c1\u30012\u5bf9\u5e94\u7684mask\u76f8\u540c\uff0c\u4f46\u662f\u9009\u62e92\u30011\u662f\u53d7\u9650\u72b6\u6001\uff0c\u6700\u53f3\u4fa7\u6570\u4f4d\u53ea\u80fd\u9009\u62e90\nreturn memo[i][mask]\n} else {\n// \u9009\u62e90\u4f5c\u4e3a\u5f53\u524d\u4f4d\nif mask == 0 { // \u5f53\u524d\u4f4d\u9009\u62e90\u53ea\u80fd\u4f5c\u4e3a\u524d\u5bfc0\uff08\u524d\u5bfc0\u7b49\u540c\u4e8e\u672a\u4f7f\u75280\uff0c\u6240\u4ee5mask\u4f9d\u7136\u662f0\uff09\nans += f(i+1, mask, false)\n} else if mask&amp;1 == 0 { // \u9ad8\u4f4d\u5df2\u7ecf\u9009\u4e86\u975e0\u7684\u6570\u5b57\uff0c\u4e140\u672a\u88ab\u4f7f\u7528\uff0c\u5219\u5f53\u524d\u4f4d\u53ef\u4ee5\u4f7f\u75280\nans += f(i+1, mask|1, limit &amp;&amp; s[i] == '0')\n}\n// \u9009\u62e91~9\u4f5c\u4e3a\u5f53\u524d\u4f4d\nupper := 9\nif limit {\nupper = int(s[i] &amp; 15)\n}\nfor d := 1; d &lt;= upper; d++ {\nif mask&gt;&gt;d&amp;1 == 0 { // 1~9\u53ea\u8981\u8fd8\u672a\u88ab\u4f7f\u7528\uff0c\u5f53\u524d\u4f4d\u5c31\u53ef\u4ee5\u4f7f\u7528\nans += f(i+1, mask|(1&lt;&lt;d), limit &amp;&amp; d == upper)\n}\n}\nif !limit {\nmemo[i][mask] = ans\n}\nreturn\n}\n}\nreturn f(0, 0, true) - 1\n}\n</code></pre>"},{"location":"dp/digital/#lc600-\u4e0d\u542b\u8fde\u7eed-1-\u7684\u975e\u8d1f\u6574\u6570","title":"LC600: \u4e0d\u542b\u8fde\u7eed 1 \u7684\u975e\u8d1f\u6574\u6570","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 \\(n(1\u2264n\u22641e9)\\) \uff0c\u7edf\u8ba1\u5728 \\([0, n]\\) \u8303\u56f4\u7684\u6574\u6570\u4e2d\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4e0d\u5b58\u5728 \u8fde\u7eed\u7684 \\(1\\) \u7684\u6574\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a2\u8fdb\u5236 + \u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> Go <pre><code>package main\nimport \"strconv\"\nfunc findIntegers(n int) int {\n// \u8f6c\u4e3a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\ns := strconv.FormatInt(int64(n), 2)\nm := len(s)\n// memo[i][prev]\u8bb0\u5f55 f(i, prev, false) \u7684\u7ed3\u679c\nmemo := make([][]int, m)\nfor i := range memo {\nmemo[i] = []int{-1, -1}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// prev: \u524d\u4e00\u4e2a2\u8fdb\u5236\u6570\u4f4d\u9009\u62e9\u7684\u6570\u5b57\n// limit: \u5f53\u524d\u6570\u4f4d\u662f\u5426\u53d7n\u5bf9\u5e94\u6570\u4f4d\u7684\u9650\u5236\uff0c\u4f8b\u5982n=10\uff0c\u5219\u7b2c0\u4e2a\u6570\u4f4d\u53ea\u80fd\u9009\u62e90\u62161\uff1b\u5982\u679c\u9009\u62e91\uff0c\u5219\u7b2c1\u4e2a\u6570\u4f4d\u4e5f\u53d7\u9650\uff0c\u53ea\u80fd\u9009\u62e90\nvar f func(i, prev int, limit bool) int\nf = func(i, prev int, limit bool) (ans int) {\nif i == m {\nreturn 1\n} else if !limit &amp;&amp; memo[i][prev] != -1 {\nreturn memo[i][prev]\n} else {\n// \u9009\u62e90\nans += f(i+1, 0, limit &amp;&amp; s[i] == '0')\n// \u9009\u62e91\nif prev == 0 &amp;&amp; (!limit || s[i] == '1') {\nans += f(i+1, 1, limit &amp;&amp; s[i] == '1')\n}\nif !limit {\nmemo[i][prev] = ans\n}\nreturn ans\n}\n}\nreturn f(0, 0, true)\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a4\u8fdb\u5236 + \u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> Go <pre><code>package main\nimport \"strconv\"\nfunc findIntegers(n int) int {\n// \u8f6c\u4e3a4\u8fdb\u5236\u5b57\u7b26\u4e32\ns := strconv.FormatInt(int64(n), 4)\nm := len(s)\n// memo[i][prev]\u8bb0\u5f55 f(i, prev, false) \u7684\u7ed3\u679c\nmemo := make([][]int, m)\nfor i := range memo {\nmemo[i] = make([]int, 4)\nfor j := range memo[i] {\nmemo[i][j] = -1\n}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// prev: \u524d\u4e00\u4e2a4\u8fdb\u5236\u6570\u4f4d\u9009\u62e9\u7684\u6570\u5b57\n// limit: \u5f53\u524d\u6570\u4f4d\u662f\u5426\u53d7n\u5bf9\u5e94\u6570\u4f4d\u7684\u9650\u5236\uff0c\u4f8b\u5982n=10\uff0c\u5219\u7b2c0\u4e2a\u6570\u4f4d\u53ea\u80fd\u9009\u62e90\u62161\uff1b\u5982\u679c\u9009\u62e91\uff0c\u5219\u7b2c1\u4e2a\u6570\u4f4d\u4e5f\u53d7\u9650\uff0c\u53ea\u80fd\u9009\u62e90\nvar f func(i, prev int, limit bool) int\nf = func(i, prev int, limit bool) (ans int) {\nif i == m {\nreturn 1\n} else if !limit &amp;&amp; memo[i][prev] != -1 {\n// limit\u4e3atrue\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\nreturn memo[i][prev]\n} else {\nupper := 3\nif limit {\nupper = int(s[i] &amp; 15)\n}\nfor d := 0; d &lt;= upper &amp;&amp; d &lt; 3; d++ {\nif d &lt; 2 || prev != 1 { // \u5f53\u524d4\u8fdb\u5236\u4f4d\u53ef\u4ee5\u662f0\u30011\u30012\uff0c\u4e14\u524d\u4e00\u4f4d\u4e3a1\u65f6\uff0c\u5f53\u524d\u4f4d\u4e0d\u80fd\u662f2\nans += f(i+1, d, limit &amp;&amp; d == upper)\n}\n}\nif !limit {\nmemo[i][prev] = ans\n}\nreturn\n}\n}\nreturn f(0, 0, true)\n}\n</code></pre>"},{"location":"dp/digital/#lc902-\u6700\u5927\u4e3a-n-\u7684\u6570\u5b57\u7ec4\u5408","title":"LC902: \u6700\u5927\u4e3a N \u7684\u6570\u5b57\u7ec4\u5408","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u5b9a\u4e00\u4e2a\u6309 \u4e25\u683c\u9012\u589e\u987a\u5e8f \u6392\u5217\u7684\u6570\u5b57\u6570\u7ec4 <code>digits</code> \uff0c<code>'1'\u2264digits[i]\u2264'9'</code> \u3002 \u4f60\u53ef\u4ee5\u7528\u4efb\u610f\u6b21\u6570\u7684 <code>digits[i]</code> \u6765\u5199\u6570\u5b57\u3002\u4f8b\u5982\uff0c\u5982\u679c <code>digits = ['1','3','5']</code> \uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u6570\u5b57\uff0c\u5982 <code>'13'</code>, <code>'551'</code>, \u548c <code>'1351315'</code> \u3002 \u8fd4\u56de\u53ef\u4ee5\u751f\u6210\u7684\u5c0f\u4e8e\u6216\u7b49\u4e8e\u7ed9\u5b9a\u6574\u6570 <code>n</code> \u7684\u6b63\u6574\u6570\u7684\u4e2a\u6570 \u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> Go <pre><code>package main\nimport \"strconv\"\nfunc atMostNGivenDigitSet(digits []string, n int) int {\ns := strconv.Itoa(n)\nm := len(s)\n// \u9884\u5904\u7406\u53ef\u4ee5\u9009\u62e9\u7684\u6570\u5b57\nds := make([]int, len(digits))\nfor i, d := range digits {\nds[i] = int(d[0] &amp; 15)\n}\n// memo[i][selected]\u8bb0\u5f55 f(i, selected, false) \u7684\u7ed3\u679c\nmemo := make([][]int, m)\nfor i := range memo {\nmemo[i] = []int{-1, -1}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// selected: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u662f\u5426\u5df2\u9009\u62e9digits\u4e2d\u7684\u6570\u5b57\uff0cselected==0\u8868\u793a\u672a\u9009\u62e9\uff0c\u53ea\u6709\u524d\u5bfc0\uff1bselected==1\u8868\u793a\u5df2\u9009\u62e9\u8fc7\n// limit: \u5f53\u524d\u6570\u4f4d\u662f\u5426\u53d7n\u5bf9\u5e94\u6570\u4f4d\u7684\u9650\u5236\uff0c\u4f8b\u5982n=10\uff0c\u5219\u7b2c0\u4e2a\u6570\u4f4d\u53ea\u80fd\u9009\u62e90\u62161\uff1b\u5982\u679c\u9009\u62e91\uff0c\u5219\u7b2c1\u4e2a\u6570\u4f4d\u4e5f\u53d7\u9650\uff0c\u53ea\u80fd\u9009\u62e90\nvar f func(i, selected int, limit bool) int\nf = func(i, selected int, limit bool) (ans int) {\nif i == m {\nreturn selected // \u8ba1\u7b97\u6b63\u6574\u6570\u7684\u4e2a\u6570\n} else if !limit &amp;&amp; memo[i][selected] != -1 {\n// limit\u4e3atrue\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\nreturn memo[i][selected]\n} else {\nif selected == 0 {\nans += f(i+1, selected, false) // \u5f53\u524d\u6570\u4f4d\u7ee7\u7eed\u4e0d\u9009\u62e9\n}\nupper := 9\nif limit {\nupper = int(s[i] &amp; 15)\n}\nfor _, d := range ds {\nif d &gt; upper {\nbreak\n} else {\nans += f(i+1, 1, limit &amp;&amp; d == upper) // \u5f53\u524d\u6570\u4f4d\u9009\u62e9\u6570\u5b57d\n}\n}\nif !limit {\nmemo[i][selected] = ans\n}\nreturn\n}\n}\nreturn f(0, 0, true)\n}\n</code></pre>"},{"location":"dp/digital/#lc788-\u65cb\u8f6c\u6570\u5b57","title":"LC788: \u65cb\u8f6c\u6570\u5b57","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u6570 X \u4e3a\u597d\u6570, \u5982\u679c\u5b83\u7684\u6bcf\u4f4d\u6570\u5b57\u9010\u4e2a\u5730\u88ab\u65cb\u8f6c 180 \u5ea6\u540e\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\uff0c\u4e14\u548c X \u4e0d\u540c\u7684\u6570\u3002\u8981\u6c42\u6bcf\u4f4d\u6570\u5b57\u90fd\u8981\u88ab\u65cb\u8f6c\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u7684\u6bcf\u4f4d\u6570\u5b57\u88ab\u65cb\u8f6c\u4ee5\u540e\u4ecd\u7136\u8fd8\u662f\u4e00\u4e2a\u6570\u5b57\uff0c \u5219\u8fd9\u4e2a\u6570\u662f\u6709\u6548\u7684\u30020, 1, \u548c 8 \u88ab\u65cb\u8f6c\u540e\u4ecd\u7136\u662f\u5b83\u4eec\u81ea\u5df1\uff1b2 \u548c 5 \u53ef\u4ee5\u4e92\u76f8\u65cb\u8f6c\u6210\u5bf9\u65b9\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u4ee5\u4e0d\u540c\u7684\u65b9\u5411\u65cb\u8f6c\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c2 \u548c 5 \u4e92\u4e3a\u955c\u50cf\uff09\uff1b6 \u548c 9 \u540c\u7406\uff0c\u9664\u4e86\u8fd9\u4e9b\u4ee5\u5916\u5176\u4ed6\u7684\u6570\u5b57\u65cb\u8f6c\u4ee5\u540e\u90fd\u4e0d\u518d\u662f\u6709\u6548\u7684\u6570\u5b57\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u6b63\u6574\u6570 <code>N(1\u2264N\u22641e4)</code> , \u8ba1\u7b97\u4ece <code>1</code> \u5230 <code>N</code> \u4e2d\u6709\u591a\u5c11\u4e2a\u6570 X \u662f\u597d\u6570\uff1f</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> <p>\u9898\u76ee\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u7edf\u8ba1\u3002\u4f46\u5982\u679c\u6570\u636e\u8303\u56f4\u589e\u5927\u81f3 <code>1e9</code> \uff0c\u5219\u9700\u8981\u901a\u8fc7\u6570\u4f4d DP \u6c42\u89e3\u3002</p> Go <pre><code>package main\nimport \"strconv\"\n// score[d]==1\u8868\u793a\u81f3\u5c11\u9700\u8981\u5305\u542b\u4e00\u4e2a\u6570\u5b57d\uff0cscore[d]==-1\u8868\u793a\u4e0d\u80fd\u5305\u542b\u6570\u5b57d\nvar score = []int{0, 0, 1, -1, -1, 1, 1, -1, 0, 1}\nfunc rotatedDigits1(n int) int {\ns := strconv.Itoa(n)\nm := len(s)\n// memo[i][diff]\u8bb0\u5f55 f(i, diff, false) \u7684\u7ed3\u679c\nmemo := make([][]int, m)\nfor i := range memo {\nmemo[i] = []int{-1, -1}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// diff: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u662f\u5426\u5df2\u9009\u62e9\u8fc72\u30015\u30016\u30019\uff0cdiff==0\u8868\u793a\u672a\u9009\u62e9\u8fc7\uff0cdiff==1\u8868\u793a\u9009\u62e9\u8fc7\n// limit: \u5f53\u524d\u6570\u4f4d\u662f\u5426\u53d7n\u5bf9\u5e94\u6570\u4f4d\u7684\u9650\u5236\uff0c\u4f8b\u5982n=10\uff0c\u5219\u7b2c0\u4e2a\u6570\u4f4d\u53ea\u80fd\u9009\u62e90\u62161\uff1b\u5982\u679c\u9009\u62e91\uff0c\u5219\u7b2c1\u4e2a\u6570\u4f4d\u4e5f\u53d7\u9650\uff0c\u53ea\u80fd\u9009\u62e90\nvar f func(i, diff int, limit bool) int\nf = func(i, diff int, limit bool) (ans int) {\nif i == m {\nreturn diff\n} else if !limit &amp;&amp; memo[i][diff] != -1 {\n// limit\u4e3atrue\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\nreturn memo[i][diff]\n} else {\nupper := 9\nif limit {\nupper = int(s[i] &amp; 15)\n}\nfor d := 0; d &lt;= upper; d++ {\nif score[d] != -1 {\nans += f(i+1, diff|score[d], limit &amp;&amp; d == upper)\n}\n}\nif !limit {\nmemo[i][diff] = ans\n}\nreturn ans\n}\n}\nreturn f(0, 0, true)\n}\n</code></pre>"},{"location":"dp/digital/#lc233-\u6570\u5b57-1-\u7684\u4e2a\u6570","title":"LC233: \u6570\u5b57 1 \u7684\u4e2a\u6570","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 \\(n(0\u2264n\u22641e9)\\) \uff0c\u8ba1\u7b97\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e \\(n\\) \u7684\u975e\u8d1f\u6574\u6570\u4e2d\u6570\u5b57 \\(1\\) \u51fa\u73b0\u7684\u4e2a\u6570\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> <p>\u5982\u679c\u8981\u7edf\u8ba1\u6570\u5b57 \\(2\\) \u51fa\u73b0\u7684\u4e2a\u6570\u5462\uff1f\u53c2\u8003 LC\u9762\u8bd5\u9898 17.06: 2\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u6570\u5b66</p> <p>\u7d2f\u52a0\u6bcf\u4e00\u4e2a\u6570\u4f4d\u4e0a\u6570\u5b57 \\(d\\) \u51fa\u73b0\u7684\u4e2a\u6570\uff0c\u672c\u9898\u4e2d \\(d = 1\\) \u3002 \u4ee5 \\(n = 1234567\\) \u4e3a\u4f8b\uff0c\u8ba1\u7b97\u767e\u4f4d\u4e0a\u51fa\u73b0\u6570\u5b57 \\(d\\) \u7684\u6b21\u6570\u3002 \u9996\u5148 \\(n\\) \u6709 \\(1234\\) \u4e2a\u5b8c\u6574\u7684 \\([000,999]\\) \u7684\u5faa\u73af\uff0c\u6bcf\u4e2a\u5faa\u73af\u767e\u4f4d\u4e0a\u90fd\u4f1a\u51fa\u73b0 \\(100\\) \u6b21\u6570\u5b57 \\(d\\) \u3002 \u5bf9\u4e8e\u5269\u4f59\u7684 \\(m = 567\\) \uff0c\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a</p> <ul> <li>\u5982\u679c \\(m&lt;d*100\\) \uff0c\u5219\u767e\u4f4d\u4e0a\u4e0d\u4f1a\u51fa\u73b0\u6570\u5b57 \\(d\\) \uff1b</li> <li>\u5982\u679c \\(d*100\u2264m&lt;(d+1)*100\\) \uff0c\u5219\u767e\u4f4d\u4e0a\u4f1a\u51fa\u73b0 \\(m-d*100+1\\) \u6b21\u6570\u5b57 \\(d\\) \uff1b</li> <li>\u5982\u679c \\(m\u2265(d+1)*100\\) \uff0c\u5219\u767e\u4f4d\u4e0a\u4f1a\u51fa\u73b0\u5168\u90e8\u7684 \\(100\\) \u6b21\u6570\u5b57 \\(d\\) \u3002</li> </ul> Go <pre><code>package main\nfunc countDigitOne(n int) int {\nreturn countDigit(n, 1)\n}\nfunc countDigit(n, d int) (ans int) {\n// pow10k\u8868\u793a10^k\nfor pow10k := 1; n &gt;= pow10k; pow10k *= 10 {\n// \u7d2f\u52a0pow10k\u6570\u4f4d\u51fa\u73b0\u6570\u5b57d\u7684\u4e2a\u6570\n// pow10k == 1, 10, 100, ... \u5206\u522b\u7d2f\u52a0 \u4e2a\u4f4d, \u5341\u4f4d, \u767e\u4f4d, ... \u51fa\u73b0\u6570\u5b57d\u7684\u4e2a\u6570\nans += n/(10*pow10k)*pow10k + min(max(n%(10*pow10k)-d*pow10k+1, 0), pow10k)\n}\nreturn\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> Go <pre><code>package main\nimport \"strconv\"\nfunc countDigitOne(n int) int {\ns := strconv.Itoa(n)\nm := len(s)\n// memo[i][cnt]\u8bb0\u5f55 f(i, cnt, false) \u7684\u7ed3\u679c\nmemo := make([][]int, m)\nfor i := range memo {\nmemo[i] = make([]int, m)\nfor j := range memo[i] {\nmemo[i][j] = -1\n}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// cnt: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u6570\u5b571\u51fa\u73b0\u7684\u6b21\u6570\n// limit: \u5f53\u524d\u6570\u4f4d\u662f\u5426\u53d7n\u5bf9\u5e94\u6570\u4f4d\u7684\u9650\u5236\uff0c\u4f8b\u5982n=10\uff0c\u5219\u7b2c0\u4e2a\u6570\u4f4d\u53ea\u80fd\u9009\u62e90\u62161\uff1b\u5982\u679c\u9009\u62e91\uff0c\u5219\u7b2c1\u4e2a\u6570\u4f4d\u4e5f\u53d7\u9650\uff0c\u53ea\u80fd\u9009\u62e90\nvar f func(i, cnt int, limit bool) int\nf = func(i, cnt int, limit bool) (ans int) {\nif i == m {\nreturn cnt\n} else if !limit &amp;&amp; memo[i][cnt] != -1 {\n// limit\u4e3atrue\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\nreturn memo[i][cnt]\n} else {\nupper := 9\nif limit {\nupper = int(s[i] &amp; 15)\n}\nfor d := 0; d &lt;= upper; d++ {\nif d == 1 {\nans += f(i+1, cnt+1, limit &amp;&amp; d == upper)\n} else {\nans += f(i+1, cnt, limit &amp;&amp; d == upper)\n}\n}\nif !limit {\nmemo[i][cnt] = ans\n}\nreturn\n}\n}\nreturn f(0, 0, true)\n}\n</code></pre>"},{"location":"dp/digital/#lg2602-zjoi2010-\u6570\u5b57\u8ba1\u6570","title":"LG2602: [ZJOI2010] \u6570\u5b57\u8ba1\u6570","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570 \\(a\\) \u548c \\(b\\) \uff0c\\(1\u2264a\u2264b\u22641e12\\)\uff0c\u6c42\u5728 \\([a,b]\\) \u4e2d\u7684\u6240\u6709\u6574\u6570\u4e2d\uff0c\u6bcf\u4e2a\u6570\u7801(digit)\u5404\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002</p> <p>\u5728 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n\"strconv\"\n\"strings\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar a, b int\nFscan(in, &amp;a, &amp;b)\nlow, high := strconv.Itoa(a), strconv.Itoa(b)\nm, n := len(low), len(high)\nif m &lt; n {\nlow = strings.Repeat(\"0\", n-m) + low\n}\nfor d := byte('0'); d &lt;= '9'; d++ {\nFprint(out, countDigit(d, n, low, high), \" \")\n}\n}\nfunc countDigit(d byte, n int, low, high string) int {\n// memo[i][cnt]\u8bb0\u5f55 f(i, cnt, false, false, false) \u7684\u7ed3\u679c\nmemo := make([][]int, n)\nfor i := range memo {\nmemo[i] = make([]int, n)\nfor j := range memo[i] {\nmemo[i][j] = -1\n}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// cnt: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u6570\u5b57d\u51fa\u73b0\u7684\u6b21\u6570\n// zero: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u662f\u5426\u672a\u9009\u62e9\u975e0\u6570\u5b57\uff0c\u5982\u679c\u672a\u9009\u62e9\u5219\u5f53\u524d\u4f4d\u53ef\u4ee5\u9009\u62e90\u4f5c\u4e3a\u524d\u7f000\n// limitLower: \u5f53\u524d\u4f4d\u662f\u5426\u53d7low\u5bf9\u5e94\u4f4d\u7684\u9650\u5236\uff0c\u5982\u679c\u53d7\u9650\u5219\u5f53\u524d\u4f4d\u53ea\u80fd\u9009\u62e9\u5927\u4e8e\u7b49\u4e8elow[i]\u7684\u5b57\u7b26\n// limitUpper: \u5f53\u524d\u4f4d\u662f\u5426\u53d7high\u5bf9\u5e94\u4f4d\u7684\u9650\u5236\uff0c\u5982\u679c\u53d7\u9650\u5219\u5f53\u524d\u4f4d\u53ea\u80fd\u9009\u62e9\u5c0f\u4e8e\u7b49\u4e8ehigh[i]\u7684\u5b57\u7b26\nvar f func(i, cnt int, zero, limitLower, limitUpper bool) int\nf = func(i, cnt int, zero, limitLower, limitUpper bool) (ans int) {\nif i == n {\nreturn cnt\n} else if !zero &amp;&amp; !limitLower &amp;&amp; !limitUpper &amp;&amp; memo[i][cnt] != -1 {\n// \u53d7\u9650\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\nreturn memo[i][cnt]\n} else {\nvar lower, upper byte = '0', '9'\nif limitLower {\nlower = low[i]\n}\nif limitUpper {\nupper = high[i]\n}\nfor b := lower; b &lt;= upper; b++ {\nzo := zero &amp;&amp; b == '0'\nll := limitLower &amp;&amp; b == lower\nlu := limitUpper &amp;&amp; b == upper\nif !zo &amp;&amp; b == d {\nans += f(i+1, cnt+1, zo, ll, lu)\n} else {\nans += f(i+1, cnt, zo, ll, lu)\n}\n}\nif !zero &amp;&amp; !limitLower &amp;&amp; !limitUpper {\nmemo[i][cnt] = ans\n}\nreturn ans\n}\n}\nreturn f(0, 0, true, true, true)\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nStringTokenizer ab = new StringTokenizer(in.readLine());\nlong a = Long.parseLong(ab.nextToken());\nlong b = Long.parseLong(ab.nextToken());\nhigh = String.valueOf(b).toCharArray();\nn = high.length;\nString s = String.format(\"%013d\", a);\nlow = s.substring(13 - n, 13).toCharArray();\nmemo = new long[n][n];\nfor (d = '0'; d &lt;= '9'; d++) {\nout.printf(\"%d \", countDigit());\n}\nout.flush();\nout.close();\nin.close();\n}\nstatic int n;\nstatic char[] low, high;\nstatic long[][] memo;\nstatic char d;\nprivate static long countDigit() {\n// memo[i][cnt]\u8bb0\u5f55 f(i, cnt, false, false, false) \u7684\u7ed3\u679c\nfor (int i = 0; i &lt; n; i++) {\nfor (int j = 0; j &lt; n; j++) {\nmemo[i][j] = -1;\n}\n}\nreturn f(0, 0, true, true, true);\n}\n/**\n     * \u8bb0\u5fc6\u5316\u641c\u7d22\n     * \n     * @param i          \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n     * @param cnt        \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u6570\u5b57d\u51fa\u73b0\u7684\u6b21\u6570\n     * @param zero       \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u662f\u5426\u672a\u9009\u62e9\u975e0\u6570\u5b57\uff0c\u5982\u679c\u672a\u9009\u62e9\u5219\u5f53\u524d\u4f4d\u53ef\u4ee5\u9009\u62e90\u4f5c\u4e3a\u524d\u7f000\n     * @param limitLower \u5f53\u524d\u4f4d\u662f\u5426\u53d7low\u5bf9\u5e94\u4f4d\u7684\u9650\u5236\uff0c\u5982\u679c\u53d7\u9650\u5219\u5f53\u524d\u4f4d\u53ea\u80fd\u9009\u62e9\u5927\u4e8e\u7b49\u4e8elow[i]\u7684\u5b57\u7b26\n     * @param limitUpper \u5f53\u524d\u4f4d\u662f\u5426\u53d7high\u5bf9\u5e94\u4f4d\u7684\u9650\u5236\uff0c\u5982\u679c\u53d7\u9650\u5219\u5f53\u524d\u4f4d\u53ea\u80fd\u9009\u62e9\u5c0f\u4e8e\u7b49\u4e8ehigh[i]\u7684\u5b57\u7b26\n     */\nprivate static long f(int i, int cnt, boolean zero, boolean limitLower, boolean limitUpper) {\nif (i == n) {\nreturn cnt;\n} else if (!zero &amp;&amp; !limitLower &amp;&amp; !limitUpper &amp;&amp; memo[i][cnt] != -1) {\n// \u53d7\u9650\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\nreturn memo[i][cnt];\n} else {\nlong ans = 0;\nchar lower = limitLower ? low[i] : '0';\nchar upper = limitUpper ? high[i] : '9';\nfor (char c = lower; c &lt;= upper; c++) {\nboolean zo = zero &amp;&amp; c == '0';\nboolean ll = limitLower &amp;&amp; c == lower;\nboolean lu = limitUpper &amp;&amp; c == upper;\nif (!zo &amp;&amp; c == d) {\nans += f(i + 1, cnt + 1, zo, ll, lu);\n} else {\nans += f(i + 1, cnt, zo, ll, lu);\n}\n}\nif (!zero &amp;&amp; !limitLower &amp;&amp; !limitUpper) {\nmemo[i][cnt] = ans;\n}\nreturn ans;\n}\n}\n}\n</code></pre>"},{"location":"dp/digital/#lc1397-\u627e\u5230\u6240\u6709\u597d\u5b57\u7b26\u4e32","title":"LC1397: \u627e\u5230\u6240\u6709\u597d\u5b57\u7b26\u4e32","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e24\u4e2a\u957f\u5ea6\u4e3a <code>n(1\u2264n\u2264500)</code> \u7684\u5b57\u7b26\u4e32 <code>s1</code> \u548c <code>s2</code> \uff0c<code>s1&lt;=s2</code> \uff0c\u4ee5\u53ca\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>evil</code> \u3002 \u597d\u5b57\u7b26\u4e32 \u7684\u5b9a\u4e49\u4e3a\uff1a\u957f\u5ea6\u4e3a <code>n</code> \uff0c\u5b57\u5178\u5e8f\u5927\u4e8e\u7b49\u4e8e <code>s1</code> \u5c0f\u4e8e\u7b49\u4e8e <code>s2</code> \uff0c\u4e14\u4e0d\u5305\u542b <code>evil</code> \u4e3a\u5b50\u5b57\u7b26\u4e32\u3002 \u8bf7\u4f60\u8fd4\u56de\u597d\u5b57\u7b26\u4e32\u7684\u6570\u76ee\u3002\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u8bf7\u4f60\u8fd4\u56de\u7b54\u6848\u5bf9 <code>1e9 + 7</code> \u53d6\u4f59\u7684\u7ed3\u679c\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>KMP + \u6570\u4f4d DP + \u8bb0\u5fc6\u5316\u641c\u7d22</p> Go <pre><code>package main\nfunc findGoodStrings(n int, s1 string, s2 string, evil string) int {\nconst mod = 1e9 + 7\nmaxMatchLens := calcMaxMatchLens(evil)\nm := len(evil)\n// memo[i][matchLen]\u8bb0\u5f55 f(i, matchLen, false, false) \u7684\u7ed3\u679c\nmemo := make([][]int, n)\nfor i := range memo {\nmemo[i] = make([]int, m)\nfor j := range memo[i] {\nmemo[i][j] = -1\n}\n}\n// \u8bb0\u5fc6\u5316\u641c\u7d22\n// i: \u5f53\u524d\u9009\u62e9\u4ece\u5de6\u81f3\u53f3\u7b2c\u51e0\u4f4d\n// matchLen: \u8fdb\u5165\u7b2ci\u4f4d\u4e4b\u524d\u9009\u62e9\u7684\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u4e0e\u6a21\u5f0f\u4e32evil\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\n// limitLower: \u5f53\u524d\u4f4d\u662f\u5426\u53d7s1\u5bf9\u5e94\u4f4d\u7684\u9650\u5236\uff0c\u5982\u679c\u53d7\u9650\u5219\u5f53\u524d\u4f4d\u53ea\u80fd\u9009\u62e9\u5927\u4e8e\u7b49\u4e8es1[i]\u7684\u5b57\u7b26\n// limitUpper: \u5f53\u524d\u4f4d\u662f\u5426\u53d7s2\u5bf9\u5e94\u4f4d\u7684\u9650\u5236\uff0c\u5982\u679c\u53d7\u9650\u5219\u5f53\u524d\u4f4d\u53ea\u80fd\u9009\u62e9\u5c0f\u4e8e\u7b49\u4e8es2[i]\u7684\u5b57\u7b26\nvar f func(i, matchLen int, limitLower, limitUpper bool) int\nf = func(i, matchLen int, limitLower, limitUpper bool) (ans int) {\nif i == n {\nreturn 1\n} else if !limitLower &amp;&amp; !limitUpper &amp;&amp; memo[i][matchLen] != -1 {\n// \u53d7\u9650\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u4f7f\u7528\u8bb0\u5fc6\u7684\u7ed3\u679c\uff0c\u4e5f\u4e0d\u80fd\u8bb0\u5fc6\u5176\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d7\u9650\u60c5\u51b5\u4e0b\u7684\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\nreturn memo[i][matchLen]\n} else {\nvar lower, upper byte = 'a', 'z'\nif limitLower {\nlower = s1[i]\n}\nif limitUpper {\nupper = s2[i]\n}\nfor b := lower; b &lt;= upper; b++ {\nml := matchLen\nfor ml &gt; 0 &amp;&amp; evil[ml] != b {\nml = maxMatchLens[ml-1]\n}\nif evil[ml] == b {\nml++\n}\nif ml &lt; m {\nll := limitLower &amp;&amp; b == lower\nlu := limitUpper &amp;&amp; b == upper\nans = (ans + f(i+1, ml, ll, lu)) % mod\n}\n}\nif !limitLower &amp;&amp; !limitUpper {\nmemo[i][matchLen] = ans\n}\nreturn\n}\n}\nreturn f(0, 0, true, true)\n}\n// \u6784\u9020\u6a21\u5f0f\u4e32pattern\u7684\u6700\u5927\u5339\u914d\u6570\u8868\nfunc calcMaxMatchLens(pattern string) []int {\nn := len(pattern)\nmaxMatchLens := make([]int, n)\nmaxLen := 0\nfor i := 1; i &lt; n; i++ {\nfor maxLen &gt; 0 &amp;&amp; pattern[maxLen] != pattern[i] {\nmaxLen = maxMatchLens[maxLen-1]\n}\nif pattern[maxLen] == pattern[i] {\nmaxLen++\n}\nmaxMatchLens[i] = maxLen\n}\nreturn maxMatchLens\n}\n</code></pre>"},{"location":"dp/knapsack/","title":"\u80cc\u5305 DP","text":""},{"location":"dp/knapsack/#0-1-\u80cc\u5305","title":"0-1 \u80cc\u5305","text":""},{"location":"dp/knapsack/#t-acwing2-0-1-\u80cc\u5305","title":"[T] AcWing2: 0-1 \u80cc\u5305","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(m\\) \u4e24\u4e2a\u6574\u6570\uff0c\\(1\u2264n,m\u22641e3\\) \u3002\u8868\u793a\u6709 \\(n\\) \u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(m\\) \u7684\u80cc\u5305\u3002 \u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_i\\) \u548c \\(w_i\\) \u4e24\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f \\(v_i\\) \uff0c\u4ef7\u503c\u662f \\(w_i\\) \uff0c\\(1\u2264v_i,w_i\u22641e3\\) \u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u5728 AcWing \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5b9a\u4e49 \\(f[i][j]\\) \u8868\u793a\u53ea\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u4e2d\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\uff0c\u5bb9\u91cf\u4e3a \\(j\\) \u7684\u80cc\u5305\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002 \u6839\u636e\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u662f\u5426\u653e\u5165\uff0c\u72b6\u6001\u8f6c\u79fb\u5982\u4e0b\uff1a</p> \\[f[i][j] = {max}(f[i-1][j], f[i-1][j-v_i] + w_i)\\] <p>\u5b9e\u73b0\u65f6\u53ef\u4ee5\u4f18\u5316\u6389\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u6ce8\u610f\u5faa\u73af\u679a\u4e3e\u987a\u5e8f\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m int\nFscan(in, &amp;n, &amp;m)\narr := make([][2]int, n)\nfor i := range arr {\nFscan(in, &amp;arr[i][0], &amp;arr[i][1])\n}\ndp := make([]int, m+1)\nfor _, item := range arr { // \u679a\u4e3e\u7269\u54c1\nv, w := item[0], item[1]\nfor j := m; j &gt;= v; j-- { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\ndp[j] = max(dp[j], dp[j-v]+w)\n}\n}\nFprintln(out, dp[m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[n][2];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer item = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(item.nextToken());\nitems[i][1] = Integer.parseInt(item.nextToken());\n}\nint[] dp = new int[m + 1];\nfor (int[] item : items) { // \u679a\u4e3e\u7269\u54c1\nint v = item[0], w = item[1];\nfor (int j = m; j &gt;= v; j--) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\ndp[j] = Math.max(dp[j], dp[j - v] + w);\n}\n}\nSystem.out.println(dp[m]);\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u5b8c\u5168\u80cc\u5305","title":"\u5b8c\u5168\u80cc\u5305","text":""},{"location":"dp/knapsack/#t-acwing3-\u5b8c\u5168\u80cc\u5305","title":"[T] AcWing3: \u5b8c\u5168\u80cc\u5305","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(m\\) \u4e24\u4e2a\u6574\u6570\uff0c\\(1\u2264n,m\u22641e3\\) \u3002\u8868\u793a\u6709 \\(n\\) \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(m\\) \u7684\u80cc\u5305\u3002 \u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_i\\) \u548c \\(w_i\\) \u4e24\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b2c \\(i\\) \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u662f \\(v_i\\) \uff0c\u4ef7\u503c\u662f \\(w_i\\) \uff0c\\(1\u2264v_i,w_i\u22641e3\\) \u3002 \u6bcf\u79cd\u7269\u54c1\u90fd\u6709\u65e0\u9650\u4ef6\u53ef\u4f9b\u9009\u62e9\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u5728 AcWing \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5b9a\u4e49 \\(f[i][j]\\) \u8868\u793a\u53ea\u4ece\u524d \\(i\\) \u79cd\u7269\u54c1\u4e2d\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\uff0c\u5bb9\u91cf\u4e3a \\(j\\) \u7684\u80cc\u5305\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002 \u6839\u636e\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u653e\u5165 \\(k\\) \u4ef6\uff0c\u72b6\u6001\u8f6c\u79fb\u5982\u4e0b\uff1a</p> \\[f[i][j] = {max}\\{f[i-1][j-k \\times v_i] + k \\times w_i\\} \\qquad 0\u2264k \\times v_i\u2264m\\] <p>\u5f53 \\(k = 0\\) \u65f6\uff0c\\(f[i][j] = f[i-1][j]\\) \uff1b\u5f53 \\(k &gt; 1\\) \u65f6\uff0c\u6709</p> \\[ \\begin{align*}     f[i][j] &amp;= {max}\\{f[i-1][j-v_i-(k-1) \\times v_i] + (k-1) \\times w_i + w_i\\} \\\\             \\\\             &amp;= f[i][j-v_i] + w_i \\end{align*} \\] <p>\u56e0\u6b64\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u4f18\u5316\u4e3a\uff1a</p> \\[f[i][j] = {max}(f[i-1][j], f[i][j-v_i])\\] <p>\u5b9e\u73b0\u65f6\u53ef\u4ee5\u4f18\u5316\u6389\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u6ce8\u610f\u5faa\u73af\u679a\u4e3e\u987a\u5e8f\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nvar n, m int\nFscan(in, &amp;n, &amp;m)\nitems := make([][2]int, n)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1])\n}\ndp := make([]int, m+1)\nfor _, item := range items { // \u679a\u4e3e\u7269\u54c1\nv, w := item[0], item[1]\nfor j := v; j &lt;= m; j++ { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\ndp[j] = max(dp[j], dp[j-v]+w)\n}\n}\nPrintln(dp[m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[n][2];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(tokenizer.nextToken());\nitems[i][1] = Integer.parseInt(tokenizer.nextToken());\n}\nint[] dp = new int[m + 1];\nfor (int[] item : items) { // \u679a\u4e3e\u7269\u54c1\nint v = item[0], w = item[1];\nfor (int j = v; j &lt;= m; j++) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\ndp[j] = Math.max(dp[j], dp[j - v] + w);\n}\n}\nSystem.out.println(dp[m]);\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u591a\u91cd\u80cc\u5305","title":"\u591a\u91cd\u80cc\u5305","text":""},{"location":"dp/knapsack/#t-acwing4-\u591a\u91cd\u80cc\u5305-i","title":"[T] AcWing4: \u591a\u91cd\u80cc\u5305 I","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(m\\) \u4e24\u4e2a\u6574\u6570\uff0c\\(1\u2264n,m\u2264100\\) \u3002\u8868\u793a\u6709 \\(n\\) \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(m\\) \u7684\u80cc\u5305\u3002 \u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_i\\ \\ w_i\\ \\ c_i\\) \u4e09\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u662f \\(v_i\\) \uff0c\u4ef7\u503c\u662f \\(w_i\\) \uff0c\u6709 \\(c_i\\) \u4ef6\uff0c\\(1\u2264v_i,w_i,c_i\u2264100\\) \u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u5728 AcWing \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u7531\u4e8e\u6bcf\u79cd\u7269\u54c1\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u80fd\u6309\u7167\u5b8c\u5168\u80cc\u5305\u8fdb\u884c\u4f18\u5316\uff0c\u539f\u56e0\u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u4e00\u5b9a\u6210\u7acb\u3002</p> \u8f6c\u5316\u4e3a 0-1 \u80cc\u5305\u95ee\u9898 <p>\u6bcf\u79cd\u7269\u54c1\u9009 \\(c_i\\) \u6b21 \u7b49\u4ef7\u4e8e \u6709 \\(c_i\\) \u4ef6\u76f8\u540c\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u6700\u591a\u9009\u4e00\u6b21 \u3002 \u95ee\u9898\u8f6c\u6362\u4e3a 0-1 \u80cc\u5305\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(m\\sum{c_i})\\) \u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nvar n, m int\nFscan(in, &amp;n, &amp;m)\nitems := make([][3]int, n)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;items[i][2])\n}\ndp := make([]int, m+1)\nfor _, item := range items { // \u679a\u4e3e\u6bcf\u79cd\u5546\u54c1\nv, w, c := item[0], item[1], item[2]\nfor ; c &gt; 0; c-- { // \u679a\u4e3e\u8be5\u79cd\u5546\u54c1\u7684\u6bcf\u4e00\u4ef6\uff0c\u8f6c\u5316\u4e3a0-1\u80cc\u5305\nfor j := m; j &gt;= v; j-- { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\ndp[j] = max(dp[j], dp[j-v]+w)\n}\n}\n}\nPrintln(dp[m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[n][3];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(tokenizer.nextToken());\nitems[i][1] = Integer.parseInt(tokenizer.nextToken());\nitems[i][2] = Integer.parseInt(tokenizer.nextToken());\n}\nint[] dp = new int[m + 1];\nfor (int[] item : items) { // \u679a\u4e3e\u6bcf\u79cd\u7269\u54c1\nint v = item[0], w = item[1], c = item[2];\nfor (; c &gt; 0; c--) { // \u679a\u4e3e\u8be5\u79cd\u5546\u54c1\u7684\u6bcf\u4e00\u4ef6\uff0c\u8f6c\u5316\u4e3a0-1\u80cc\u5305\nfor (int j = m; j &gt;= v; j--) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\ndp[j] = Math.max(dp[j], dp[j - v] + w);\n}\n}\n}\nSystem.out.println(dp[m]);\nin.close();\n}\n}\n</code></pre> \u8f6c\u5316\u4e3a\u5206\u7ec4\u80cc\u5305\u95ee\u9898 <p>\u628a\u6bcf\u79cd\u7269\u54c1\u770b\u6210\u4e00\u4e2a\u5206\u7ec4\uff0c\u5206\u7ec4\u5185\u5305\u542b\u5206\u522b\u7531 \\(1, 2, ..., c_i\\) \u4ef6\u8be5\u79cd\u7269\u54c1\u7ec4\u6210\u7684 \\(c_i\\) \u4ef6\u7269\u54c1\uff0c\u6700\u591a\u9009\u62e9\u4e00\u4ef6\u3002 \u95ee\u9898\u8f6c\u6362\u4e3a\u5206\u7ec4\u80cc\u5305\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(m\\sum{c_i})\\) \u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nvar n, m int\nFscan(in, &amp;n, &amp;m)\nitems := make([][3]int, n)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;items[i][2])\n}\ndp := make([]int, m+1)\nfor _, item := range items { // \u679a\u4e3e\u6bcf\u79cd\u7269\u54c1\nv, w, c := item[0], item[1], item[2]\nfor j := m; j &gt;= v; j-- { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor k := 1; k &lt;= c &amp;&amp; k*v &lt;= j; k++ { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u6bcf\u4e00\u4ef6\u7269\u54c1\ndp[j] = max(dp[j], dp[j-k*v]+k*w)\n}\n}\n}\nPrintln(dp[m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[n][3];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(tokenizer.nextToken());\nitems[i][1] = Integer.parseInt(tokenizer.nextToken());\nitems[i][2] = Integer.parseInt(tokenizer.nextToken());\n}\nint[] dp = new int[m + 1];\nfor (int[] item : items) { // \u679a\u4e3e\u6bcf\u79cd\u7269\u54c1\nint v = item[0], w = item[1], c = item[2];\nfor (int j = m; j &gt;= v; j--) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor (int k = 1; k &lt;= c &amp;&amp; k * v &lt;= j; k++) { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u6bcf\u4e00\u4ef6\u7269\u54c1\ndp[j] = Math.max(dp[j], dp[j - k * v] + k * w);\n}\n}\n}\nSystem.out.println(dp[m]);\nin.close();\n}\n}\n</code></pre> \u8fdb\u9636\u4e00\uff1a\u4e8c\u8fdb\u5236\u5206\u7ec4\u4f18\u5316 <p>AcWing5: \u591a\u91cd\u80cc\u5305\u95ee\u9898 II \u5c06\u6570\u636e\u8303\u56f4\u589e\u5927\u4e3a\uff1a\\(1\u2264n\u22641e3\\) \uff1b\\(1\u2264m\u22642e3\\) \uff1b\\(1\u2264v_i,w_i,c_i\u22642e3\\) \u3002 \u91c7\u7528\u4e0a\u8ff0\u65b9\u6cd5\u5c06\u4f1a\u8d85\u51fa\u65f6\u95f4\u9650\u5236\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8c\u8fdb\u5236\u5206\u7ec4\u8fdb\u884c\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(m\\sum{\\log{c_i}})\\) \u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nvar n, m int\nFscan(in, &amp;n, &amp;m)\nitems := make([][3]int, n)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;items[i][2])\n}\ndp := make([]int, m+1)\nfor _, item := range items {\nv, w, c := item[0], item[1], item[2]\nif c*v &gt;= m { // \u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\nfor j := v; j &lt;= m; j++ {\ndp[j] = max(dp[j], dp[j-v]+w)\n}\n} else { // \u4e0d\u80fd\u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u5206\u7ec4\u4f18\u5316\n// \u6bcf\u4e2a\u5206\u7ec4\u770b\u4f5c\u72ec\u7acb\u7684\u4e00\u4ef6\u7269\u54c1\uff0c\u8f6c\u5316\u4e3a0-1\u80cc\u5305\uff0c\u7ec4\u5408\u5206\u7ec4\u53ef\u4ee5\u7ec4\u5408\u51fa[1, c]\u8303\u56f4\u5185\u7684\u4efb\u4e00\u4ef6\u6570\nfor k := 1; k &lt;= c; k &lt;&lt;= 1 {\nc -= k\nkv, kw := k*v, k*w\nfor j := m; j &gt;= kv; j-- {\ndp[j] = max(dp[j], dp[j-kv]+kw)\n}\n}\nif c != 0 {\ncv, cw := c*v, c*w\nfor j := m; j &gt;= cv; j-- {\ndp[j] = max(dp[j], dp[j-cv]+cw)\n}\n}\n}\n}\nPrintln(dp[m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[n][3];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(tokenizer.nextToken());\nitems[i][1] = Integer.parseInt(tokenizer.nextToken());\nitems[i][2] = Integer.parseInt(tokenizer.nextToken());\n}\nint[] dp = new int[m + 1];\nfor (int[] item : items) {\nint v = item[0], w = item[1], c = item[2];\nif (c * v &gt;= m) { // \u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\nfor (int j = v; j &lt;= m; j++) {\ndp[j] = Math.max(dp[j], dp[j - v] + w);\n}\n} else { // \u4e0d\u80fd\u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u5206\u7ec4\u4f18\u5316\n// \u6bcf\u4e2a\u5206\u7ec4\u770b\u4f5c\u72ec\u7acb\u7684\u4e00\u4ef6\u7269\u54c1\uff0c\u8f6c\u5316\u4e3a0-1\u80cc\u5305\uff0c\u7ec4\u5408\u5206\u7ec4\u53ef\u4ee5\u7ec4\u5408\u51fa[1, c]\u8303\u56f4\u5185\u7684\u4efb\u4e00\u4ef6\u6570\nfor (int k = 1; k &lt;= c; k &lt;&lt;= 1) {\nc -= k;\nint kv = k * v, kw = k * w;\nfor (int j = m; j &gt;= kv; j--) {\ndp[j] = Math.max(dp[j], dp[j - kv] + kw);\n}\n}\nif (c != 0) {\nint cv = c * v, cw = c * w;\nfor (int j = m; j &gt;= cv; j--) {\ndp[j] = Math.max(dp[j], dp[j - cv] + cw);\n}\n}\n}\n}\nSystem.out.println(dp[m]);\nin.close();\n}\n}\n</code></pre> \u8fdb\u9636\u4e8c\uff1a\u5355\u8c03\u961f\u5217\u4f18\u5316 <p>AcWing6: \u591a\u91cd\u80cc\u5305\u95ee\u9898 III \u5c06\u6570\u636e\u8303\u56f4\u589e\u5927\u4e3a\uff1a\\(1\u2264n\u22641e3\\) \uff1b\\(1\u2264m\u22642e4\\) \uff1b\\(1\u2264v_i,w_i,c_i\u22642e4\\) \u3002 \u91c7\u7528\u4e8c\u8fdb\u5236\u5206\u7ec4\u4f18\u5316\u4e5f\u4f1a\u8d85\u51fa\u65f6\u95f4\u9650\u5236\uff0c\u9700\u8981\u901a\u8fc7\u5355\u8c03\u961f\u5217\u8fdb\u884c\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nm)\\) \u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nvar n, m int\nFscan(in, &amp;n, &amp;m)\nitems := make([][3]int, n)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;items[i][2])\n}\n// \u6eda\u52a8\u6570\u7ec4\u4f18\u5316\ncur := make([]int, m+1)\npre := make([]int, m+1)\n// \u5355\u8c03\u9012\u51cf\u7d22\u5f15\u961f\u5217\nq := make([]int, m+1)\nfor _, item := range items {\nv, w, c := item[0], item[1], item[2]\nif cv := c * v; cv &gt;= m { // \u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\nfor j := v; j &lt;= m; j++ {\ncur[j] = max(cur[j], cur[j-v]+w)\n}\n} else { // \u4e0d\u80fd\u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\uff0c\u4f7f\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\n// \u6eda\u52a8\u6570\u7ec4\npre, cur = cur, pre\n// \u679a\u4e3e\u4f59\u6570\nfor j := 0; j &lt; v; j++ {\nhead, tail := 0, -1\n// \u679a\u4e3e\u4f59\u6570j\u7684\u65b9\u6848\uff1aj+v, j+2*v, j+3*v, ...\nfor k := j; k &lt;= m; k += v {\n// \u521d\u59cb\u5316\u4e3a\u4e0a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\ncur[k] = pre[k]\n// \u5c06\u4e0d\u5728\u7a97\u53e3\u5185\u7684\u7d22\u5f15\u4ece\u961f\u9996\u51fa\u961f\nfor ; head &lt;= tail &amp;&amp; k-q[head] &gt; cv; head++ {\n}\n// \u4f7f\u7528\u961f\u9996\u7684\u6700\u5927\u503c\u66f4\u65b0\u7ed3\u679c\nif head &lt;= tail {\n// \u4f7f\u7528k-q[head]\u7684\u5bb9\u91cf\u88c5\u5165\u5f53\u524d\u7269\u54c1\ncur[k] = max(cur[k], pre[q[head]]+(k-q[head])/v*w)\n}\n// \u5c06\u961f\u5c3e\u7684\u4ef7\u503c\u5c0f\u4e8e\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u79fb\u9664\uff0c\u4fdd\u8bc1\u5355\u8c03\u9012\u51cf\nfor ; head &lt;= tail &amp;&amp; pre[q[tail]]+(k-q[tail])/v*w &lt;= pre[k]; tail-- {\n}\n// \u5c06\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u5165\u961f\u5c3e\ntail++\nq[tail] = k\n}\n}\n}\n}\nPrintln(cur[m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[n][3];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer vwc = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(vwc.nextToken());\nitems[i][1] = Integer.parseInt(vwc.nextToken());\nitems[i][2] = Integer.parseInt(vwc.nextToken());\n}\n// \u6eda\u52a8\u6570\u7ec4\u4f18\u5316\nint i = 1;\nint[][] f = new int[2][m + 1];\n// \u5355\u8c03\u9012\u51cf\u7d22\u5f15\u961f\u5217\nint[] q = new int[m + 1];\nfor (int[] item : items) {\nint v = item[0], w = item[1], c = item[2];\nint cv = c * v;\nif (cv &gt;= m) { // \u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\nint[] cur = f[i &amp; 1];\nfor (int j = v; j &lt;= m; j++) {\ncur[j] = Math.max(cur[j], cur[j - v] + w);\n}\n} else { // \u4e0d\u80fd\u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\uff0c\u4f7f\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\n// \u6eda\u52a8\u6570\u7ec4\nint[] cur = f[++i &amp; 1], pre = f[(i &amp; 1) ^ 1];\n// \u679a\u4e3e\u4f59\u6570\nfor (int j = 0; j &lt; v; j++) {\nint head = 0, tail = -1;\n// \u679a\u4e3e\u4f59\u6570j\u7684\u65b9\u6848\uff1aj+v, j+2*v, j+3*v, ...\nfor (int k = j; k &lt;= m; k += v) {\n// \u521d\u59cb\u5316\u4e3a\u4e0a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\ncur[k] = pre[k];\n// \u5c06\u4e0d\u5728\u7a97\u53e3\u5185\u7684\u7d22\u5f15\u4ece\u961f\u9996\u51fa\u961f\nfor (; head &lt;= tail &amp;&amp; k - q[head] &gt; cv; head++) {\n}\n// \u4f7f\u7528\u961f\u9996\u7684\u6700\u5927\u503c\u66f4\u65b0\u7ed3\u679c\nif (head &lt;= tail) {\n// \u4f7f\u7528k-q[head]\u7684\u5bb9\u91cf\u88c5\u5165\u5f53\u524d\u7269\u54c1\ncur[k] = Math.max(cur[k], pre[q[head]] + (k - q[head]) / v * w);\n}\n// \u5c06\u961f\u5c3e\u7684\u4ef7\u503c\u5c0f\u4e8e\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u79fb\u9664\uff0c\u4fdd\u8bc1\u5355\u8c03\u9012\u51cf\nfor (; head &lt;= tail &amp;&amp; pre[q[tail]] + (k - q[tail]) / v * w &lt;= pre[k]; tail--) {\n}\n// \u5c06\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u5165\u961f\u5c3e\nq[++tail] = k;\n}\n}\n}\n}\nSystem.out.println(f[i &amp; 1][m]);\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u6df7\u5408\u80cc\u5305","title":"\u6df7\u5408\u80cc\u5305","text":""},{"location":"dp/knapsack/#t-acwing7-\u6df7\u5408\u80cc\u5305","title":"[T] AcWing7: \u6df7\u5408\u80cc\u5305","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(m\\) \u4e24\u4e2a\u6574\u6570\uff0c\\(1\u2264n,m\u22641e3\\) \u3002\u8868\u793a\u6709 \\(n\\) \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(m\\) \u7684\u80cc\u5305\u3002 \u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_i\\ \\ w_i\\ \\ c_i\\) \u4e09\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b2c \\(i\\) \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u662f \\(v_i\\) \uff0c\u4ef7\u503c\u662f \\(w_i\\) \uff0c\\(1\u2264v_i,w_i\u22641e3\\) \uff0c\\(-1\u2264c_i\u22641e3\\) \u7684\u503c\u5219\u5206\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\\(c_i = -1\\) \u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u53ea\u6709 \\(1\\) \u4ef6\uff1b</li> <li>\\(c_i = 0\\) \u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u6709\u65e0\u9650\u4ef6\uff1b</li> <li>\\(c_i &gt; 0\\) \u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u6709 \\(c_i\\) \u4ef6\u3002</li> </ol> <p>\u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u5728 AcWing \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6df7\u5408\u80cc\u5305\u5c31\u662f\u5c060-1 \u80cc\u5305\u3001\u5b8c\u5168\u80cc\u5305\u3001\u591a\u91cd\u80cc\u5305\u4e09\u79cd\u80cc\u5305\u6df7\u5408\u8d77\u6765\uff0c\u6c42\u89e3\u65f6\u5206\u60c5\u51b5\u5904\u7406\u5373\u53ef\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m int\nFscan(in, &amp;n, &amp;m)\nitems := make([][3]int, n)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;items[i][2])\n}\n// \u6eda\u52a8\u6570\u7ec4\u4f18\u5316\ncur := make([]int, m+1)\npre := make([]int, m+1)\n// \u5355\u8c03\u9012\u51cf\u7d22\u5f15\u961f\u5217\nq := make([]int, m+1)\nfor _, item := range items {\nv, w, c := item[0], item[1], item[2]\nif c == -1 || c == 1 { // 0-1 \u80cc\u5305\nfor j := m; j &gt;= v; j-- {\ncur[j] = max(cur[j], cur[j-v]+w)\n}\n} else if cv := c * v; c == 0 || cv &gt;= m { // \u5b8c\u5168\u80cc\u5305\nfor j := v; j &lt;= m; j++ {\ncur[j] = max(cur[j], cur[j-v]+w)\n}\n} else { // \u591a\u91cd\u80cc\u5305\uff0c\u4f7f\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\n// \u6eda\u52a8\u6570\u7ec4\npre, cur = cur, pre\n// \u679a\u4e3e\u4f59\u6570\nfor j := 0; j &lt; v; j++ {\nhead, tail := 0, -1\n// \u679a\u4e3e\u4f59\u6570j\u7684\u65b9\u6848\uff1aj+v, j+2*v, j+3*v, ...\nfor k := j; k &lt;= m; k += v {\n// \u521d\u59cb\u5316\u4e3a\u4e0a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\ncur[k] = pre[k]\n// \u5c06\u4e0d\u5728\u7a97\u53e3\u5185\u7684\u7d22\u5f15\u4ece\u961f\u9996\u51fa\u961f\nfor ; head &lt;= tail &amp;&amp; k-q[head] &gt; cv; head++ {\n}\n// \u4f7f\u7528\u961f\u9996\u7684\u6700\u5927\u503c\u66f4\u65b0\u7ed3\u679c\nif head &lt;= tail {\n// \u4f7f\u7528k-q[head]\u7684\u5bb9\u91cf\u88c5\u5165\u5f53\u524d\u7269\u54c1\ncur[k] = max(cur[k], pre[q[head]]+(k-q[head])/v*w)\n}\n// \u5c06\u961f\u5c3e\u7684\u4ef7\u503c\u5c0f\u4e8e\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u79fb\u9664\uff0c\u4fdd\u8bc1\u5355\u8c03\u9012\u51cf\nfor ; head &lt;= tail &amp;&amp; pre[q[tail]]+(k-q[tail])/v*w &lt;= pre[k]; tail-- {\n}\n// \u5c06\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u5165\u961f\u5c3e\ntail++\nq[tail] = k\n}\n}\n}\n}\nFprintln(out, cur[m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[n][3];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer vwc = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(vwc.nextToken());\nitems[i][1] = Integer.parseInt(vwc.nextToken());\nitems[i][2] = Integer.parseInt(vwc.nextToken());\n}\n// \u6eda\u52a8\u6570\u7ec4\u4f18\u5316\nint i = 1;\nint[][] f = new int[2][m + 1];\n// \u5355\u8c03\u9012\u51cf\u7d22\u5f15\u961f\u5217\nint[] q = new int[m + 1];\nfor (int[] item : items) {\nint v = item[0], w = item[1], c = item[2];\nint cv = c * v;\nif (c == -1 || c == 1) { // 0-1 \u80cc\u5305\nint[] cur = f[i &amp; 1];\nfor (int j = m; j &gt;= v; j--) {\ncur[j] = Math.max(cur[j], cur[j - v] + w);\n}\n} else if (c == 0 || cv &gt;= m) { // \u5b8c\u5168\u80cc\u5305\nint[] cur = f[i &amp; 1];\nfor (int j = v; j &lt;= m; j++) {\ncur[j] = Math.max(cur[j], cur[j - v] + w);\n}\n} else { // \u591a\u91cd\u80cc\u5305\uff0c\u4f7f\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\n// \u6eda\u52a8\u6570\u7ec4\nint[] cur = f[++i &amp; 1], pre = f[(i &amp; 1) ^ 1];\n// \u679a\u4e3e\u4f59\u6570\nfor (int j = 0; j &lt; v; j++) {\nint head = 0, tail = -1;\n// \u679a\u4e3e\u4f59\u6570j\u7684\u65b9\u6848\uff1aj+v, j+2*v, j+3*v, ...\nfor (int k = j; k &lt;= m; k += v) {\n// \u521d\u59cb\u5316\u4e3a\u4e0a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\ncur[k] = pre[k];\n// \u5c06\u4e0d\u5728\u7a97\u53e3\u5185\u7684\u7d22\u5f15\u4ece\u961f\u9996\u51fa\u961f\nfor (; head &lt;= tail &amp;&amp; k - q[head] &gt; cv; head++) {\n}\n// \u4f7f\u7528\u961f\u9996\u7684\u6700\u5927\u503c\u66f4\u65b0\u7ed3\u679c\nif (head &lt;= tail) {\n// \u4f7f\u7528k-q[head]\u7684\u5bb9\u91cf\u88c5\u5165\u5f53\u524d\u7269\u54c1\ncur[k] = Math.max(cur[k], pre[q[head]] + (k - q[head]) / v * w);\n}\n// \u5c06\u961f\u5c3e\u7684\u4ef7\u503c\u5c0f\u4e8e\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u79fb\u9664\uff0c\u4fdd\u8bc1\u5355\u8c03\u9012\u51cf\nfor (; head &lt;= tail &amp;&amp; pre[q[tail]] + (k - q[tail]) / v * w &lt;= pre[k]; tail--) {\n}\n// \u5c06\u5f53\u524d\u65b9\u6848\u7684\u7d22\u5f15\u5165\u961f\u5c3e\nq[++tail] = k;\n}\n}\n}\n}\nout.println(f[i &amp; 1][m]);\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u4e8c\u7ef4\u8d39\u7528\u80cc\u5305","title":"\u4e8c\u7ef4\u8d39\u7528\u80cc\u5305","text":""},{"location":"dp/knapsack/#t-acwing8-\u4e8c\u7ef4\u8d39\u7528\u80cc\u5305","title":"[T] AcWing8: \u4e8c\u7ef4\u8d39\u7528\u80cc\u5305","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(N\\ \\ C\\ \\ M\\) \u4e09\u4e2a\u6574\u6570\uff0c\\(1\u2264N\u22641e3\\) \uff0c\\(1\u2264C,M\u22641e2\\) \u3002\u8868\u793a\u6709 \\(N\\) \u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(C\\) \u6700\u5927\u627f\u91cd\u4e3a \\(M\\) \u7684\u80cc\u5305\u3002 \u63a5\u4e0b\u6765 \\(N\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_i\\ \\ m_i\\ \\ w_i\\) \u4e09\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f \\(v_i\\) \uff0c\u91cd\u91cf\u662f \\(m_i\\) \uff0c\u4ef7\u503c\u662f \\(w_i\\) \uff0c\\(1\u2264v_i,m_i\u22641e2\\) \uff0c\\(1\u2264w_i\u22641e3\\) \u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u603b\u91cd\u91cf\u4e0d\u8d85\u8fc7\u80cc\u5305\u6700\u5927\u627f\u91cd\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u5728 AcWing \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5728 0-1 \u80cc\u5305\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u8d39\u7528\u7ef4\u5ea6\u5373\u53ef\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar N, C, M int\nFscan(in, &amp;N, &amp;C, &amp;M)\nitems := make([][3]int, N)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;items[i][2])\n}\ndp := make([][]int, C+1)\nfor i := range dp {\ndp[i] = make([]int, M+1)\n}\nfor _, item := range items { // \u679a\u4e3e\u7269\u54c1\nv, m, w := item[0], item[1], item[2]\nfor i := C; i &gt;= v; i-- { // \u679a\u4e3e\u7b2c\u4e00\u7ef4\u5ea6\u8d39\u7528\nfor j := M; j &gt;= m; j-- { // \u679a\u4e3e\u7b2c\u4e8c\u7ef4\u5ea6\u8d39\u7528\ndp[i][j] = max(dp[i][j], dp[i-v][j-m]+w)\n}\n}\n}\nFprintln(out, dp[C][M])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nStringTokenizer ncm = new StringTokenizer(in.readLine());\nint N = Integer.parseInt(ncm.nextToken());\nint C = Integer.parseInt(ncm.nextToken());\nint M = Integer.parseInt(ncm.nextToken());\nint[][] items = new int[N][3];\nfor (int i = 0; i &lt; N; i++) {\nStringTokenizer vmw = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(vmw.nextToken());\nitems[i][1] = Integer.parseInt(vmw.nextToken());\nitems[i][2] = Integer.parseInt(vmw.nextToken());\n}\nint[][] dp = new int[C + 1][M + 1];\nfor (int[] item : items) { // \u679a\u4e3e\u7269\u54c1\nint v = item[0], m = item[1], w = item[2];\nfor (int i = C; i &gt;= v; i--) { // \u679a\u4e3e\u7b2c\u4e00\u7ef4\u5ea6\u8d39\u7528\nfor (int j = M; j &gt;= m; j--) { // \u679a\u4e3e\u7b2c\u4e8c\u7ef4\u5ea6\u8d39\u7528\ndp[i][j] = Math.max(dp[i][j], dp[i - v][j - m] + w);\n}\n}\n}\nout.println(dp[C][M]);\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u5206\u7ec4\u80cc\u5305","title":"\u5206\u7ec4\u80cc\u5305","text":""},{"location":"dp/knapsack/#t-acwing9-\u5206\u7ec4\u80cc\u5305","title":"[T] AcWing9: \u5206\u7ec4\u80cc\u5305","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(m\\) \u4e24\u4e2a\u6574\u6570\uff0c\\(1\u2264n,m\u22641e2\\) \u3002\u8868\u793a\u6709 \\(N\\) \u7ec4\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(m\\) \u7684\u80cc\u5305\u3002 \u63a5\u4e0b\u6765\u8f93\u5165 \\(n\\) \u7ec4\u7269\u54c1\u7684\u6570\u636e\uff1a</p> <ul> <li>\u6bcf\u7ec4\u6570\u636e\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6574\u6570 \\(c_i(1\u2264c_i\u22641e2)\\) \uff0c\u8868\u793a\u7b2c \\(i\\) \u7ec4\u6709 \\(c_i\\) \u4ef6\u7269\u54c1\uff1b</li> <li>\u63a5\u4e0b\u6765 \\(c_i\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_{ij}\\) \u548c \\(w_{ij}\\) \u4e24\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b2c \\(i\\) \u7ec4\u7b2c \\(j\\) \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f \\(v_{ij}\\) \uff0c\u4ef7\u503c\u662f \\(w_{ij}\\) \uff0c\\(1\u2264v_{ij},w_{ij}\u22641e2\\) \u3002</li> </ul> <p>\u6bcf\u7ec4\u7269\u54c1\u6709\u82e5\u5e72\u4ef6\uff0c\u540c\u4e00\u7ec4\u5185\u7684\u7269\u54c1\u6700\u591a\u53ea\u80fd\u9009\u4e00\u4ef6\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u5728 AcWing \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u548c 0-1 \u80cc\u5305\u7c7b\u4f3c\uff0c\u5bf9\u6bcf\u4e00\u7ec4\u8fdb\u884c\u4e00\u6b21 0-1 \u80cc\u5305\u5373\u53ef\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m, c int\nFscan(in, &amp;n, &amp;m)\ndp := make([]int, m+1)\nfor ; n &gt; 0; n-- { // \u679a\u4e3e\u5206\u7ec4\nFscan(in, &amp;c)\nlower := 100\nitems := make([][2]int, c)\nfor i := range items {\nFscan(in, &amp;items[i][0], &amp;items[i][1])\nlower = min(lower, items[i][0])\n}\nfor i := m; i &gt;= lower; i-- { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor _, item := range items { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u6bcf\u4e00\u4ef6\u7269\u54c1\nif v, w := item[0], item[1]; i &gt;= v {\ndp[i] = max(dp[i], dp[i-v]+w)\n}\n}\n}\n}\nFprintln(out, dp[m])\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\nint[] dp = new int[m + 1];\nfor (; n &gt; 0; n--) { // \u679a\u4e3e\u5206\u7ec4\nint c = Integer.parseInt(in.readLine());\nint lower = 100;\nint[][] items = new int[c][2];\nfor (int i = 0; i &lt; c; i++) {\nStringTokenizer vw = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(vw.nextToken());\nitems[i][1] = Integer.parseInt(vw.nextToken());\nlower = Math.min(lower, items[i][0]);\n}\nfor (int i = m; i &gt;= lower; i--) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor (int[] item : items) { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u6bcf\u4e00\u4ef6\u7269\u54c1\nint v = item[0], w = item[1];\nif (i &gt;= v) {\ndp[i] = Math.max(dp[i], dp[i - v] + w);\n}\n}\n}\n}\nout.println(dp[m]);\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#cf148e-porcelain","title":"CF148E: Porcelain","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n(1\u2264n\u2264100)\\) \u548c \\(m(1\u2264m\u22641e4)\\) \uff0c\u63a5\u4e0b\u6765 \\(n\\) \u884c\u8f93\u5165 \\(n\\) \u4e2a\u53cc\u7aef\u961f\u5217\uff08dq\uff09\u3002 \u5bf9\u4e8e\u6bcf\u4e2a dq\uff0c\u5148\u8f93\u5165 \\(k(1\u2264k\u2264100)\\) \u8868\u793a dq \u7684\u5927\u5c0f\uff0c\u6240\u6709 \\(k\\) \u4e4b\u548c \\(\u2265m\\)\u3002 \u7136\u540e\u8f93\u5165 dq \u4e2d\u7684 \\(k\\) \u4e2a\u6570\uff0c\u8303\u56f4\u5728 \\([1,100]\\)\u3002 \u4f60\u9700\u8981\u4ece\u8fd9 \\(n\\) \u4e2a dq \u4e2d\u53d6\u51fa \\(m\\) \u4e2a\u6570\uff0c\u8f93\u51fa\u8fd9 \\(m\\) \u4e2a\u6570\u7684\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5b9a\u4e49 \\(groups[i][j]\\) \u8868\u793a\u4ece\u7b2c \\(i\\) \u4e2a dq \u4e2d\u53d6\u51fa \\(j+1\\) \u4e2a\u6570\u7684\u6700\u5927\u548c\u3002 \u9884\u5904\u7406\u6bcf\u4e00\u4e2a dq \uff0c\u679a\u4e3e\u5728\u961f\u5934\u53d6\u51fa\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u901a\u8fc7\u524d\u7f00\u548c\u8ba1\u7b97\u5f97\u5230 \\(groups[i][j]\\) \u3002 \u9884\u5904\u7406\u5f97\u5230 \\(groups[i][j]\\) \u540e\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u80cc\u5305\u5bb9\u91cf\u4e3a \\(m\\) \u7684\u5206\u7ec4\u80cc\u5305\u95ee\u9898\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m int\nFscan(in, &amp;n, &amp;m)\n// groups[i][j]\u8868\u793a\u4ece\u7b2ci\u4e2adq\u4e2d\u53d6\u51faj+1\u4e2a\u6570\u7684\u6700\u5927\u548c\ngroups := make([][]int, n)\nfor i := 0; i &lt; n; i++ {\nvar k, x int\nFscan(in, &amp;k)\ns := make([]int, k+1) // \u524d\u7f00\u548c\nfor j := 0; j &lt; k; j++ {\nFscan(in, &amp;x)\ns[j+1] = s[j] + x\n}\ngroups[i] = make([]int, k)\ngroups[i][k-1] = s[k]\nfor j := 1; j &lt; k; j++ {\nfor l := 0; l &lt;= j; l++ { // \u5728dq\u5934\u90e8\u53d6l\u4e2a\u6570\uff0c\u5c3e\u90e8\u53d6j-l\u4e2a\u6570\ngroups[i][j-1] = max(groups[i][j-1], s[l]+s[k]-s[k-(j-l)])\n}\n}\n}\nt := 0\ndp := make([]int, m+1)\nfor _, group := range groups { // \u679a\u4e3e\u5206\u7ec4\nk := len(group)\nt += k\nfor i := min(t, m); i &gt; 0; i-- { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor j := 0; j &lt; k &amp;&amp; j &lt; i; j++ { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u6bcf\u4e00\u4ef6\u7269\u54c1\n// \u4f7f\u7528j+1\u7684\u5bb9\u91cf\u5bb9\u7eb3group[j]\ndp[i] = max(dp[i], dp[i-1-j]+group[j])\n}\n}\n}\nFprintln(out, dp[m])\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken());\nint m = Integer.parseInt(nm.nextToken());\n// groups[i][j]\u8868\u793a\u4ece\u7b2ci\u4e2adq\u4e2d\u53d6\u51faj+1\u4e2a\u6570\u7684\u6700\u5927\u548c\nint[][] groups = new int[n][];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nint k = Integer.parseInt(tokenizer.nextToken());\nint[] s = new int[k + 1]; // \u524d\u7f00\u548c\nfor (int j = 0; j &lt; k; j++) {\ns[j + 1] = s[j] + Integer.parseInt(tokenizer.nextToken());\n}\ngroups[i] = new int[k];\ngroups[i][k - 1] = s[k];\nfor (int j = 1; j &lt; k; j++) {\nfor (int l = 0; l &lt;= j; l++) { // \u5728dq\u5934\u90e8\u53d6l\u4e2a\u6570\uff0c\u5c3e\u90e8\u53d6j-l\u4e2a\u6570\ngroups[i][j - 1] = Math.max(groups[i][j - 1], s[l] + s[k] - s[k - (j - l)]);\n}\n}\n}\nint t = 0;\nint[] dp = new int[m + 1];\nfor (int[] group : groups) { // \u679a\u4e3e\u5206\u7ec4\nint k = group.length;\nt += k;\nfor (int i = Math.min(t, m); i &gt; 0; i--) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor (int j = 0; j &lt; k &amp;&amp; j &lt; i; j++) { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u6bcf\u4e00\u4ef6\u7269\u54c1\n// \u4f7f\u7528j+1\u7684\u5bb9\u91cf\u5bb9\u7eb3group[j]\ndp[i] = Math.max(dp[i], dp[i - 1 - j] + group[j]);\n}\n}\n}\nSystem.out.println(dp[m]);\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u6709\u4f9d\u8d56\u7684\u80cc\u5305","title":"\u6709\u4f9d\u8d56\u7684\u80cc\u5305","text":""},{"location":"dp/knapsack/#t-acwing10-\u6709\u4f9d\u8d56\u7684\u80cc\u5305","title":"[T] AcWing10: \u6709\u4f9d\u8d56\u7684\u80cc\u5305","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(m\\) \u4e24\u4e2a\u6574\u6570\uff0c\\(1\u2264n,m\u22641e2\\) \u3002\u8868\u793a\u6709\u7f16\u53f7\u4e3a \\(1\\dots n\\) \u7684 \\(n\\) \u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(m\\) \u7684\u80cc\u5305\u3002 \u7269\u54c1\u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u6240\u6709\u7269\u54c1\u7684\u4f9d\u8d56\u5173\u7cfb\u5f62\u6210\u4e00\u68f5\u6811\u3002\u5982\u679c\u9009\u62e9\u67d0\u4ef6\u7269\u54c1\uff0c\u5219\u5fc5\u987b\u540c\u65f6\u9009\u62e9\u5b83\u7684\u7236\u8282\u70b9\u3002 \u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_i\\ \\ w_i\\ \\ p_i\\) \u4e09\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7f16\u53f7\u4e3a \\(i\\) \u7684\u7269\u54c1\u7684\u4f53\u79ef\u662f \\(v_i\\) \uff0c\u4ef7\u503c\u662f \\(w_i\\) \uff0c\\(1\u2264v_i,w_i\u22641e2\\) \uff0c\u4f9d\u8d56\u7f16\u53f7\u4e3a \\(p_i\\) \u7684\u7269\u54c1\uff0c\\(p_i = -1\\) \u8868\u793a\u8be5\u7269\u54c1\u4e3a\u6839\u8282\u70b9\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u5728 AcWing \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m, p, root int\nFscan(in, &amp;n, &amp;m)\nog := make([][]int, n+1)\nitems := make([][2]int, n+1)\nfor i := 1; i &lt;= n; i++ {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;p)\nif p == -1 {\nroot = i\n} else {\nog[p] = append(og[p], i)\n}\n}\n// dp[x][i]\u8868\u793a\u9009\u62e9\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u7269\u54c1\uff0c\u4e14\u5bb9\u91cf\u4e0d\u8d85\u8fc7i\u65f6\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\ndp := make([][]int, n+1)\nvar dfs func(x int)\ndfs = func(x int) {\nv, w := items[x][0], items[x][1]\ndp[x] = make([]int, m+1)\nfor i := v; i &lt;= m; i++ {\ndp[x][i] = w // \u7269\u54c1x\u5fc5\u987b\u9009\uff0c\u521d\u59cb\u5316\u4e3a\u7269\u54c1x\u7684\u4ef7\u503c\n}\nfor _, y := range og[x] {\ndfs(y)                    // \u5148\u8ba1\u7b97\u5b50\u6811y\nfor i := m; i &gt;= v; i-- { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor j := 0; j &lt;= i-v; j++ { // \u679a\u4e3e\u7559\u7ed9\u5b50\u6811y\u7684\u80cc\u5305\u5bb9\u91cf\ndp[x][i] = max(dp[x][i], dp[x][i-j]+dp[y][j])\n}\n}\n}\n}\ndfs(root)\nFprintln(out, dp[root][m])\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\nstatic int n, m, root;\nstatic List&lt;Integer&gt;[] og;\nstatic int[][] items;\n// dp[x][i]\u8868\u793a\u9009\u62e9\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u7269\u54c1\uff0c\u4e14\u5bb9\u91cf\u4e0d\u8d85\u8fc7i\u65f6\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\nstatic int[][] dp;\npublic static void dfs(int x) {\nint v = items[x][0], w = items[x][1];\nfor (int i = v; i &lt;= m; i++) {\ndp[x][i] = w; // \u7269\u54c1x\u5fc5\u987b\u9009\uff0c\u521d\u59cb\u5316\u4e3a\u7269\u54c1x\u7684\u4ef7\u503c\n}\nfor (int y : og[x]) {\ndfs(y); // \u5148\u8ba1\u7b97\u5b50\u6811y\nfor (int i = m; i &gt;= v; i--) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor (int j = 0; j &lt;= i - v; j++) { // \u679a\u4e3e\u7559\u7ed9\u5b50\u6811y\u7684\u80cc\u5305\u5bb9\u91cf\ndp[x][i] = Math.max(dp[x][i], dp[x][i - j] + dp[y][j]);\n}\n}\n}\n}\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nn = Integer.parseInt(nm.nextToken());\nm = Integer.parseInt(nm.nextToken());\nog = new List[n + 1];\nfor (int i = 1; i &lt;= n; i++) {\nog[i] = new ArrayList&lt;&gt;();\n}\nitems = new int[n + 1][2];\nfor (int i = 1; i &lt;= n; i++) {\nStringTokenizer vwp = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(vwp.nextToken());\nitems[i][1] = Integer.parseInt(vwp.nextToken());\nint p = Integer.parseInt(vwp.nextToken());\nif (p == -1) {\nroot = i;\n} else {\nog[p].add(i);\n}\n}\ndp = new int[n + 1][m + 1];\ndfs(root);\nout.println(dp[root][m]);\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#lg1064-\u91d1\u660e\u7684\u9884\u7b97\u65b9\u6848","title":"LG1064: \u91d1\u660e\u7684\u9884\u7b97\u65b9\u6848","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n(1\u2264n\u22643.2e4)\\) \u548c \\(m(1\u2264m\u226460)\\) \u4e24\u4e2a\u6574\u6570\u3002\u8868\u793a\u6709 \\(n\\) \u5143\u94b1\uff0c\u60f3\u8981\u4e70 \\(m\\) \u4e2a\u7269\u54c1\u3002 \u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(v_i\\ \\ p_i\\ \\ q_i\\) \u4e09\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b2c \\(i(1\u2264i\u2264m)\\) \u4e2a\u7269\u54c1\u7684\u4ef7\u683c\u4e3a \\(v_i(1\u2264v_i\u22641e4)\\) \uff0c\u91cd\u8981\u5ea6\u4e3a \\(p_i(1\u2264p_i\u22645)\\) \uff0c\\(v_i\\) \u662f \\(10\\) \u7684\u6574\u6570\u500d\u3002\u5982\u679c \\(q_i = 0\\) \uff0c\u8868\u793a\u8be5\u7269\u54c1\u662f\u4e3b\u4ef6\uff1b\u5426\u5219\uff0c\u8868\u793a\u8be5\u7269\u54c1\u662f\u7b2c \\(q_i\\) \u4e2a\u7269\u54c1\uff08\u4e3b\u4ef6\uff09\u7684\u9644\u4ef6\u3002 \u4e3b\u4ef6\u53ef\u4ee5\u5355\u72ec\u8d2d\u4e70\uff0c\u8d2d\u4e70\u9644\u4ef6\u5219\u5fc5\u987b\u540c\u65f6\u8d2d\u4e70\u5b83\u7684\u4e3b\u4ef6\uff0c\u6bcf\u4e2a\u4e3b\u4ef6\u6700\u591a\u6709 \\(2\\) \u4e2a\u9644\u4ef6\u3002 \u6c42\u89e3\u8d2d\u4e70\u54ea\u4e9b\u7269\u54c1\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684 \\(v_i \\times p_i\\) \u4e4b\u548c\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u548c\u3002\u9898\u76ee\u4fdd\u8bc1\u7b54\u6848 \\(\u22642e5\\) \u3002</p> <p>\u5728 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5c06\u4e3b\u4ef6\u4e0e\u5176\u9644\u4ef6\u7684\u6240\u6709\u7ec4\u5408\u5f53\u505a\u4e00\u4e2a\u5206\u7ec4\uff0c\u8f6c\u5316\u4e3a\u5206\u7ec4\u80cc\u5305\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m int\nFscan(in, &amp;n, &amp;m)\nn /= 10\nitems := make([][3]int, m+1)\nog := make([][]int, m+1)\nfor i := 1; i &lt;= m; i++ {\nFscan(in, &amp;items[i][0], &amp;items[i][1], &amp;items[i][2])\nitems[i][0] /= 10\nitems[i][1] *= items[i][0]\nif q := items[i][2]; q != 0 {\nog[q] = append(og[q], i)\n}\n}\ndp := make([]int, n+1)\nfor x := 1; x &lt;= m; x++ { // \u679a\u4e3e\u4e3b\u4ef6\u4e0e\u5176\u9644\u4ef6\u7ec4\u6210\u7684\u5206\u7ec4\nif items[x][2] == 0 {\nvx, wx := items[x][0], items[x][1]\nfor i := n; i &gt;= vx; i-- { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nfor s := 1&lt;&lt;len(og[x]) - 1; s &gt;= 0; s-- { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u7269\u54c1\uff08\u9644\u4ef6\u9009\u62e9\u72b6\u6001\uff09\nv, w := vx, wx // \u9009\u62e9\u4e3b\u4ef6x\nfor j, y := range og[x] {\nif s&gt;&gt;j&amp;1 == 1 { // \u9009\u62e9\u72b6\u6001s\u8868\u793a\u7684\u9644\u4ef6\nv += items[y][0]\nw += items[y][1]\n}\n}\nif i &gt;= v {\ndp[i] = max(dp[i], dp[i-v]+w)\n}\n}\n}\n}\n}\nFprintln(out, dp[n]*10)\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nStringTokenizer nm = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nm.nextToken()) / 10;\nint m = Integer.parseInt(nm.nextToken());\nint[][] items = new int[m + 1][3];\nList&lt;Integer&gt;[] og = new List[m + 1];\nfor (int i = 1; i &lt;= m; i++) {\nog[i] = new ArrayList&lt;&gt;();\n}\nfor (int i = 1; i &lt;= m; i++) {\nStringTokenizer vpq = new StringTokenizer(in.readLine());\nitems[i][0] = Integer.parseInt(vpq.nextToken()) / 10;\nitems[i][1] = Integer.parseInt(vpq.nextToken()) * items[i][0];\nitems[i][2] = Integer.parseInt(vpq.nextToken());\nif (items[i][2] != 0) {\nog[items[i][2]].add(i);\n}\n}\nint[] dp = new int[n + 1];\nfor (int x = 1; x &lt;= m; x++) { // \u679a\u4e3e\u4e3b\u4ef6\u4e0e\u5176\u9644\u4ef6\u7ec4\u6210\u7684\u5206\u7ec4\nif (items[x][2] == 0) {\nint vx = items[x][0];\nfor (int i = n; i &gt;= vx; i--) { // \u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\nint c = og[x].size();\nfor (int s = (1 &lt;&lt; c) - 1; s &gt;= 0; s--) { // \u679a\u4e3e\u5206\u7ec4\u5185\u7684\u7269\u54c1\uff08\u9644\u4ef6\u9009\u62e9\u72b6\u6001\uff09\nint v = vx, w = items[x][1]; // \u9009\u62e9\u4e3b\u4ef6x\nfor (int j = 0; j &lt; c; j++) {\nif (((s &gt;&gt; j) &amp; 1) == 1) { // \u9009\u62e9\u72b6\u6001s\u8868\u793a\u7684\u9644\u4ef6\nint y = og[x].get(j);\nv += items[y][0];\nw += items[y][1];\n}\n}\nif (i &gt;= v) {\ndp[i] = Math.max(dp[i], dp[i - v] + w);\n}\n}\n}\n}\n}\nout.println(dp[n] * 10);\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u52a8\u6001\u7269\u54c1\u80cc\u5305","title":"\u52a8\u6001\u7269\u54c1\u80cc\u5305","text":"<p>\u6bcf\u4e2a\u7269\u54c1\u7684\u8d39\u7528\u6216\u4ef7\u503c\u6839\u636e\u4e00\u5b9a\u6761\u4ef6\u52a8\u6001\u53d8\u5316\u3002\u72b6\u6001\u8f6c\u79fb\u65f6\u8ba1\u7b97\u5177\u4f53\u7684\u8d39\u7528\u6216\u4ef7\u503c\u5373\u53ef\u3002</p>"},{"location":"dp/knapsack/#\u591a\u80cc\u5305","title":"\u591a\u80cc\u5305","text":"<p>\u4ee5\u4e0a\u90fd\u662f\u5355\u4e2a\u80cc\u5305\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u6574\u7406\u4e00\u4e9b\u6d89\u53ca\u5230\u591a\u4e2a\u80cc\u5305\u7684\u95ee\u9898\u3002</p>"},{"location":"dp/knapsack/#\u9759\u6001\u7269\u54c1\u591a\u80cc\u5305","title":"\u9759\u6001\u7269\u54c1\u591a\u80cc\u5305","text":"<p>\u6bcf\u4e2a\u7269\u54c1\u7684\u8d39\u7528\u548c\u4ef7\u503c\u56fa\u5b9a\u3002</p>"},{"location":"dp/knapsack/#cf687c-the-values-you-can-make","title":"CF687C: The Values You Can Make","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n\\) \u548c \\(k\\) \u4e24\u4e2a\u6574\u6570\uff0c\\(1\u2264n,k\u2264500\\) \u3002 \u7b2c\u4e8c\u884c\u8f93\u5165\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(c(1\u2264c[i]\u2264500)\\) \u3002 \u4ece \\(c\\) \u4e2d\u9009\u62e9\u82e5\u5e72\u4e2a\u6570\uff0c\u7ec4\u6210\u6570\u7ec4 \\(a\\) \uff0c\u6ee1\u8db3 \\(sum(a) = k\\) \u3002 \u4ece \\(a\\) \u4e2d\u518d\u9009\u62e9\u82e5\u5e72\u4e2a\u6570\uff0c\u7ec4\u6210\u6570\u7ec4 \\(b\\)\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\u3002 \u8ba1\u7b97 \\(sum(b)\\) \u7684\u6240\u6709\u53ef\u80fd\u7684\u503c\u3002\u7b2c\u4e00\u884c\u8f93\u51fa\u8fd9\u4e9b\u503c\u7684\u4e2a\u6570 \\(q\\) \uff0c\u7b2c\u4e8c\u884c\u6309\u5347\u5e8f\u8f93\u51fa\u8fd9 \\(q\\) \u4e2a\u6570\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5982\u679c\u80fd\u4ece \\(c\\) \u4e2d\u9009\u62e9\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6 \\(A\\) \u548c \\(B\\)\uff0c\u4f7f\u5f97 \\(\\sum A = x\\) \u4e14 \\(\\sum B = k-x\\) \u3002\u5219 \\(x\\) \u5c31\u662f\u4e00\u4e2a\u53ef\u80fd\u503c\u3002 \u95ee\u9898\u8f6c\u5316\u4e3a \u6709\u4e24\u4e2a\u80cc\u5305\u7684 0-1 \u80cc\u5305\u95ee\u9898 \uff0c\u6bcf\u4e2a\u7269\u54c1 \\(c_i\\) \uff0c\u8981\u4e48\u4e0d\u9009\uff0c\u8981\u4e48\u653e\u5165\u80cc\u53051\uff0c\u8981\u4e48\u653e\u5165\u80cc\u53052\u3002</p> <p>\u5b9a\u4e49 \\(dp[i][j_1][j_2]\\) \u8868\u793a\u4ece\u524d \\(i\\) \u4e2a\u6570\u4e2d\u80fd\u5426\u9009\u51fa\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6 \\(A\\) \u548c \\(B\\)\uff0c\u4f7f\u5f97 \\(\\sum A = j_1\\) \u4e14 \\(\\sum B = j_2\\) \u3002 \u5219\u6709 \\(dp[i][j_1][j_2] = dp[i-1][j_1][j_2] \\parallel dp[i-1][j_1-c_i][j_2] \\parallel dp[i-1][j_1][j_2-c_i]\\) \u3002 \u6240\u6709\u4f7f\u5f97 \\(dp[n][x][k-x] = true\\) \u7684 \\(x\\) \u90fd\u662f\u53ef\u80fd\u503c\u3002 \u5b9e\u73b0\u65f6\u4f18\u5316\u6389\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u6ce8\u610f\u5faa\u73af\u679a\u4e3e\u987a\u5e8f\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n\"sort\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, k int\nFscan(in, &amp;n, &amp;k)\nc := make([]int, n)\nfor i := range c {\nFscan(in, &amp;c[i])\n}\n// dp[i][j1][j2]\u8868\u793a\u4ece\u524di\u4e2a\u6570\u4e2d\u662f\u5426\u80fd\u9009\u51fa\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u5176\u4e2d\u5b50\u96c61\u7684\u5143\u7d20\u548c\u4e3aj1\uff0c\u5b50\u96c62\u7684\u5143\u7d20\u548c\u4e3aj2\ndp := make([][]bool, k+1)\nfor i := range dp {\ndp[i] = make([]bool, k+1)\n}\ndp[0][0] = true\nsort.Ints(c) // \u6392\u5e8f\u4f18\u5316\u679a\u4e3e\u6548\u7387\nvar s, ms int\nfor _, x := range c {\ns += x\nms = min(s, k) // \u5b50\u96c6\u5143\u7d20\u548c\u4ece\u5f53\u524d\u6700\u5927\u548c\u5f00\u59cb\u679a\u4e3e\nfor j1 := ms; j1 &gt;= 0; j1-- {\nfor j2 := ms; j2 &gt;= 0; j2-- {\n// \u4e0d\u9009\u62e9x\uff0c\u6216\u8005\u9009\u62e9x\u653e\u5165\u5b50\u96c61\uff0c\u6216\u8005\u9009\u62e9x\u653e\u5165\u5b50\u96c62\ndp[j1][j2] = dp[j1][j2] || (j1 &gt;= x &amp;&amp; dp[j1-x][j2]) || (j2 &gt;= x &amp;&amp; dp[j1][j2-x])\n}\n}\n}\nvar ans []int\nfor x, fx := range dp {\nif fx[k-x] {\nans = append(ans, x)\n}\n}\nFprintln(out, len(ans))\nfor _, x := range ans {\nFprint(out, x, \" \")\n}\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nStringTokenizer nk = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nk.nextToken());\nint k = Integer.parseInt(nk.nextToken());\nint[] c = new int[n];\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nfor (int i = 0; i &lt; n; i++) {\nc[i] = Integer.parseInt(tokenizer.nextToken());\n}\n// dp[i][j1][j2]\u8868\u793a\u4ece\u524di\u4e2a\u6570\u4e2d\u662f\u5426\u80fd\u9009\u51fa\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u5176\u4e2d\u5b50\u96c61\u7684\u5143\u7d20\u548c\u4e3aj1\uff0c\u5b50\u96c62\u7684\u5143\u7d20\u548c\u4e3aj2\nboolean[][] dp = new boolean[k + 1][k + 1];\ndp[0][0] = true;\nArrays.sort(c); // \u6392\u5e8f\u4f18\u5316\u679a\u4e3e\u6548\u7387\nint s = 0, ms = 0;\nfor (int x : c) {\ns += x;\nms = Math.min(s, k); // \u5b50\u96c6\u5143\u7d20\u548c\u4ece\u5f53\u524d\u6700\u5927\u548c\u5f00\u59cb\u679a\u4e3e\nfor (int j1 = ms; j1 &gt;= 0; j1--) {\nfor (int j2 = ms; j2 &gt;= 0; j2--) {\n// \u4e0d\u9009\u62e9x\uff0c\u6216\u8005\u9009\u62e9x\u653e\u5165\u5b50\u96c61\uff0c\u6216\u8005\u9009\u62e9x\u653e\u5165\u5b50\u96c62\ndp[j1][j2] |= (j1 &gt;= x &amp;&amp; dp[j1 - x][j2]) || (j2 &gt;= x &amp;&amp; dp[j1][j2 - x]);\n}\n}\n}\nint cnt = 0;\nint[] ans = new int[k + 1];\nfor (int x = 0; x &lt;= k; x++) {\nif (dp[x][k - x]) {\nans[cnt++] = x;\n}\n}\nout.println(cnt);\nfor (int i = 0; i &lt; cnt; i++) {\nout.printf(\"%d \", ans[i]);\n}\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u52a8\u6001\u7269\u54c1\u591a\u80cc\u5305","title":"\u52a8\u6001\u7269\u54c1\u591a\u80cc\u5305","text":"<p>\u6bcf\u4e2a\u7269\u54c1\u7684\u8d39\u7528\u6216\u4ef7\u503c\u6839\u636e\u4e00\u5b9a\u6761\u4ef6\u52a8\u6001\u53d8\u5316\u3002\u72b6\u6001\u8f6c\u79fb\u65f6\u8ba1\u7b97\u5177\u4f53\u7684\u8d39\u7528\u6216\u4ef7\u503c\u5373\u53ef\u3002</p>"},{"location":"dp/knapsack/#cf1525d-armchairs","title":"CF1525D: Armchairs","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n(2\u2264n\u22645000)\\) \uff0c\u7b2c\u4e8c\u884c\u8f93\u5165\u957f\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(a\\) \uff0c\u5176\u4e2d\u53ea\u6709 0 \u548c 1\u3002\u4fdd\u8bc1 1 \u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 \\(n/2\\) \u3002 \\(a[i]=0\\) \u8868\u793a\u4f4d\u7f6e \\(i\\) \u5904\u6709\u4e00\u628a\u6905\u5b50\uff0c\\(a[i]=1\\) \u8868\u793a\u4f4d\u7f6e \\(i\\) \u5904\u6709\u4e00\u4e2a\u4eba\u3002 \u4e00\u628a\u6905\u5b50\u53ea\u80fd\u5750\u4e00\u4e2a\u4eba\u3002\u4e00\u4e2a\u4eba\u4ece \\(i\\) \u79fb\u52a8\u5230 \\(j\\) \u7684\u4ee3\u4ef7\u4e3a \\(abs(i-j)\\) \u3002 \u95ee\u6240\u6709\u4eba\u90fd\u5750\u5230\u6905\u5b50\u4e0a\u7684\u603b\u4ee3\u4ef7\u548c\u6700\u5c0f\u662f\u591a\u5c11\uff1f</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> <p>\u8fdb\u9636\uff1a\u5982\u679c\u4e00\u628a\u6905\u5b50\u53ef\u4ee5\u5750\u591a\u4e2a\u4eba\u5462\uff1f\u53c2\u8003 LC2463: \u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6839\u636e\u8f93\u5165\u53ef\u4ee5\u5f97\u5230\u4eba\u7684\u4f4d\u7f6e\u5e8f\u5217 \\(peoples\\) \u548c\u6905\u5b50\u7684\u4f4d\u7f6e\u5e8f\u5217 \\(chairs\\) \uff0c\u4e24\u4e2a\u5e8f\u5217\u4e25\u683c\u9012\u589e\u3002 \u5047\u8bbe\u6700\u4f18\u65b9\u6848\u4e2d\uff0c\u7b2c \\(i\\) \u4e2a\u4eba\u5750\u5230\u6905\u5b50 \\(c_i\\) \u4e0a\uff0c\u5219 \u5b58\u5728\u6700\u4f18\u65b9\u6848\uff0c\u4f7f\u5f97 \\(c_i\\) \u662f\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684 \u3002\u51fa\u73b0\u4ea4\u53c9\u7684\u65b9\u6848\u4e0d\u4f1a\u66f4\u4f18\u3002</p> <p>\u5982\u679c\u628a\u6905\u5b50\u5f53\u505a\u5bb9\u91cf\u4e3a \\(1\\) \u7684\u80cc\u5305\uff0c\u4eba\u5f53\u505a\u4f53\u79ef\u4e3a \\(1\\) \u7684\u7269\u54c1\uff0c\u5219\u8f6c\u5316\u4e3a\u52a8\u6001\u7269\u54c1\u591a\u80cc\u5305\u95ee\u9898\u3002 \u5b9a\u4e49 \\(dp[i][j]\\) \u8868\u793a\u524d \\(j\\) \u4e2a\u4eba\u5728\u524d \\(i\\) \u628a\u6905\u5b50\u4e2d\u627e\u5230\u6905\u5b50\u5750\u7684\u6700\u5c0f\u603b\u4ee3\u4ef7\u3002</p> <ol> <li>\u5982\u679c\u7b2c \\(j\\) \u4e2a\u4eba\u4e0d\u5750\u5728\u7b2c \\(i\\) \u628a\u6905\u5b50\uff0c\u5219 \\(dp[i][j] = dp[i-1][j]\\) \uff1b</li> <li>\u5982\u679c\u7b2c \\(j\\) \u4e2a\u4eba\u5750\u5728\u7b2c \\(i\\) \u628a\u6905\u5b50\u4e0a\uff0c\u5219 \\(dp[i][j] = dp[i-1][j-1] + abs(chairs[i-1] - peoples[j-1])\\) \u3002</li> </ol> <p>\u5b9e\u73b0\u65f6\u53ef\u4ee5\u4f18\u5316\u6389\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u6ce8\u610f\u5faa\u73af\u679a\u4e3e\u987a\u5e8f\u3002</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, x int\nFscan(in, &amp;n)\nvar chairs, peoples []int\nfor i := 0; i &lt; n; i++ {\nif Fscan(in, &amp;x); x == 0 {\nchairs = append(chairs, i)\n} else {\npeoples = append(peoples, i)\n}\n}\nn = len(peoples)\ndp := make([]int, n+1)\nfor j := range dp {\ndp[j] = 1e8\n}\ndp[0] = 0\nfor i, chair := range chairs {\nfor j := min(n-1, i); j &gt;= 0; j-- {\ndp[j+1] = min(dp[j+1], dp[j]+abs(chair-peoples[j]))\n}\n}\nFprintln(out, dp[n])\n}\nfunc abs(x int) int {\nif x &lt; 0 {\nreturn -x\n} else {\nreturn x\n}\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nList&lt;Integer&gt; chairs = new ArrayList&lt;&gt;();\nList&lt;Integer&gt; peoples = new ArrayList&lt;&gt;();\nint n = Integer.parseInt(in.readLine());\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nfor (int i = 0; i &lt; n; i++) {\n(tokenizer.nextToken().charAt(0) == '0' ? chairs : peoples).add(i);\n}\nn = peoples.size();\nint[] dp = new int[n + 1];\nfor (int j = 1; j &lt;= n; j++) {\ndp[j] = (int) 1e8;\n}\nfor (int i = 0, m = chairs.size(); i &lt; m; i++) {\nfor (int j = Math.min(n - 1, i); j &gt;= 0; j--) {\ndp[j + 1] = Math.min(dp[j + 1], dp[j] + Math.abs(chairs.get(i) - peoples.get(j)));\n}\n}\nout.println(dp[n]);\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#lc2463-\u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb","title":"LC2463: \u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(m(1\u2264m\u2264100)\\) \u7684\u673a\u5668\u4eba\u6570\u7ec4 \\(robot\\) \uff0c\\(robot[i]\\) \u662f\u7b2c \\(i\\) \u4e2a\u673a\u5668\u4eba\u7684\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a\\([-1e9,1e9]\\)\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n(1\u2264n\u2264100)\\) \u7684\u5de5\u5382\u6570\u7ec4 \\(factory\\) \uff0c\\(factory[j] = [pos_j, limit_j]\\) \u8868\u793a\u7b2c <code>j</code> \u4e2a\u5de5\u5382\u7684\u4f4d\u7f6e\u548c\u7ef4\u4fee\u673a\u5668\u4eba\u7684\u4e0a\u9650\uff0c\u5176\u4e2d \\(-1e9\u2264pos_j\u22641e9\\) \uff0c\\(0\u2264limit_j\u2264m\\) \u3002 \u6bcf\u4e2a\u673a\u5668\u4eba\u6240\u5728\u7684\u4f4d\u7f6e\u4e92\u4e0d\u76f8\u540c\u3002\u6bcf\u4e2a\u5de5\u5382\u6240\u5728\u7684\u4f4d\u7f6e\u4e5f\u4e92\u4e0d\u76f8\u540c\u3002 \u6ce8\u610f\u4e00\u4e2a\u673a\u5668\u4eba\u53ef\u80fd\u4e00\u5f00\u59cb\u8ddf\u4e00\u4e2a\u5de5\u5382\u5728\u76f8\u540c\u7684\u4f4d\u7f6e\u3002 \u673a\u5668\u4eba\u4ece\u4f4d\u7f6e \\(x\\) \u5230\u4f4d\u7f6e \\(y\\) \u7684\u79fb\u52a8\u8ddd\u79bb\u4e3a \\(|x-y|\\) \u3002 \u95ee\u6240\u6709\u673a\u5668\u4eba\u90fd\u8fdb\u5165\u5de5\u5382\u7ef4\u4fee\u7684\u79fb\u52a8\u8ddd\u79bb\u603b\u548c\u6700\u5c0f\u662f\u591a\u5c11\uff1f\u6d4b\u8bd5\u6570\u636e\u4fdd\u8bc1\u6240\u6709\u673a\u5668\u4eba\u90fd\u53ef\u4ee5\u88ab\u7ef4\u4fee\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> <p>\u5982\u679c\u89c9\u5f97\u8fd9\u9898\u6bd4\u8f83\u96be\uff0c\u53ef\u4ee5\u5148\u505a\u7b80\u5355\u7248\uff1aCF1525D: Armchairs\u3002</p> \u89e3\u9898\u601d\u8def <p>\u4e0d\u5931\u4e00\u822c\u6027\u5730\uff0c\u5047\u8bbe\u673a\u5668\u4eba\u7684\u5750\u6807\u662f\u9012\u589e\u7684\uff0c\u5de5\u5382\u7684\u5750\u6807\u4e5f\u662f\u9012\u589e\u7684\u3002 \u8bbe\u6700\u4f18\u65b9\u6848\u4e2d\uff0c\u673a\u5668\u4eba \\(i\\) \u8fdb\u5165\u5de5\u5382 \\(f_i\\)\uff0c\u5219 \u5b58\u5728\u6700\u4f18\u65b9\u6848\uff0c\u4f7f\u5f97 \\(f_i\\) \u662f\u4e0d\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684 \u3002 \u4e0e CF1525D: Armchairs \u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u5728\u4e8e\u591a\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u8fdb\u5165\u76f8\u540c\u7684\u5de5\u5382\uff0c\u6240\u4ee5 \\(f_i\\) \u662f\u4e0d\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u3002</p> <p>\u5982\u679c\u628a\u6bcf\u4e2a\u5de5\u5382\u5f53\u505a\u5bb9\u91cf\u4e3a \\(factory[j][1]\\) \u7684\u80cc\u5305\uff0c\u673a\u5668\u4eba\u5f53\u505a\u4f53\u79ef\u4e3a \\(1\\) \u7684\u7269\u54c1\uff0c\u5219\u8f6c\u5316\u4e3a\u52a8\u6001\u7269\u54c1\u591a\u80cc\u5305\u95ee\u9898\u3002 \u5b9a\u4e49 \\(dp[i][j]\\) \u8868\u793a\u524d \\(j\\) \u4e2a\u673a\u5668\u4eba\u8fdb\u5165\u524d \\(i\\) \u4e2a\u5de5\u5382\u7ef4\u4fee\u7684\u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb\u3002 \u5b9e\u73b0\u65f6\u53ef\u4ee5\u4f18\u5316\u6389\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u6ce8\u610f\u5faa\u73af\u679a\u4e3e\u987a\u5e8f\u3002</p> Go <pre><code>package main\nimport (\n\"sort\"\n)\nfunc minimumTotalDistance(robot []int, factory [][]int) int64 {\nsort.Ints(robot)\nsort.Slice(factory, func(i, j int) bool { return factory[i][0] &lt; factory[j][0] })\nn := len(robot)\ndp := make([]int, n+1)\nfor i := 1; i &lt;= n; i++ {\ndp[i] = 1e12\n}\nacc := 0\nfor _, f := range factory {\nacc += f[1]\nfor j := min(n, acc); j &gt; 0; j-- {\n// \u5728\u5f53\u524d\u5de5\u5382\u53ef\u4ee5\u7ef4\u4fee0~cnt\u4e2a\u673a\u5668\u4eba\ncnt := min(j, f[1])\n// \u524dj\u4e2a\u673a\u5668\u4eba\u4e2d\u7684\u540ek\u4e2a\u8fdb\u5165\u5f53\u524d\u5de5\u5382\nfor k, dis := 1, 0; k &lt;= cnt; k++ {\ndis += abs(f[0] - robot[j-k])\ndp[j] = min(dp[j], dp[j-k]+dis)\n}\n}\n}\nreturn int64(dp[n])\n}\nfunc abs(x int) int {\nif x &lt; 0 {\nreturn -x\n} else {\nreturn x\n}\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#lc1478-\u5b89\u6392\u90ae\u7b52","title":"LC1478: \u5b89\u6392\u90ae\u7b52","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n(1\u2264n\u2264100)\\) \u7684\u623f\u5c4b\u6570\u7ec4 \\(houses\\) \u548c\u4e00\u4e2a\u6574\u6570 \\(k(1\u2264k\u2264n)\\) \u3002 \u5176\u4e2d \\(houses[i]\\) \u662f\u7b2c \\(i\\) \u680b\u623f\u5b50\u5728\u4e00\u6761\u8857\u4e0a\u7684\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a\\([1,1e4]\\) \u3002 \u73b0\u9700\u8981\u5728\u8fd9\u6761\u8857\u4e0a\u5b89\u6392 \\(k\\) \u4e2a\u90ae\u7b52\u3002\u8bf7\u4f60\u8fd4\u56de\u6bcf\u680b\u623f\u5b50\u4e0e\u79bb\u5b83\u6700\u8fd1\u7684\u90ae\u7b52\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u603b\u548c\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u7ed9\u4e00\u7ec4\u623f\u5c4b\u5b89\u6392\u4e00\u4e2a\u90ae\u7b52\uff0c\u9009\u62e9\u623f\u5c4b\u7684\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u76ee\u6807\u70b9\uff0c\u8ddd\u79bb\u603b\u548c\u6700\u5c0f\u3002</p> <p>\u5982\u679c\u628a\u6bcf\u4e2a\u90ae\u7b52\u5f53\u505a\u5bb9\u91cf\u4e0d\u9650\u7684\u80cc\u5305\uff0c\u623f\u5b50\u5f53\u505a\u7269\u54c1\uff0c\u5219\u8f6c\u5316\u4e3a\u52a8\u6001\u7269\u54c1\u591a\u80cc\u5305\u95ee\u9898\u3002 \u5b9a\u4e49 \\(dp[i][j]\\) \u8868\u793a\u7ed9 \\(houses[:j+1]\\) \u5b89\u6392\u7f16\u53f7\u4e3a \\(0\\dots i\\) \u7684 \\(i+1\\) \u4e2a\u90ae\u7b52\u7684\u6700\u5c0f\u8ddd\u79bb\u603b\u548c\u3002 \u5b9e\u73b0\u65f6\u53ef\u4ee5\u4f18\u5316\u6389\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u6ce8\u610f\u5faa\u73af\u679a\u4e3e\u987a\u5e8f\u3002</p> Go <pre><code>package main\nimport \"sort\"\nfunc minDistance(houses []int, k int) int {\nn := len(houses)\nsort.Ints(houses)\n// medsum[i][j]\u8868\u793a\u6709\u5e8f\u70b9\u96c6houses[i:j+1]\u5230\u4e2d\u4f4d\u6570\u7684\u6700\u5c0f\u8ddd\u79bb\u603b\u548c\nmedsum := make([][]int, n)\nfor i := n - 1; i &gt;= 0; i-- {\nmedsum[i] = make([]int, n)\nfor j := i + 1; j &lt; n; j++ {\nmedsum[i][j] = medsum[i+1][j-1] + houses[j] - houses[i]\n}\n}\n// dp[i][j]\u8868\u793a\u7ed9houses[:j+1]\u5b89\u6392\u7f16\u53f7\u4e3a[0..i]\u7684i+1\u4e2a\u90ae\u7b52\u7684\u6700\u5c0f\u8ddd\u79bb\u603b\u548c\ndp := make([]int, n)\n// \u5b89\u6392\u7f16\u53f7\u4e3a0\u76841\u4e2a\u90ae\u7b52\nfor j := range dp {\ndp[j] = medsum[0][j]\n}\n// \u5b89\u6392\u7f16\u53f7\u4e3ai\u7684\u7b2ci+1\u4e2a\u90ae\u7b52\nfor i := 1; i &lt; k; i++ {\n// \u7ed9houses[:j+1]\u5b89\u6392\u7f16\u53f7\u4e3a[0..i]\u7684i+1\u4e2a\u90ae\u7b52\n// j == i \u8868\u793a\u7ed9houses[:i+1]\u6bcf\u4e2a\u623f\u5b50\u5b89\u6392\u4e00\u4e2a\u90ae\u7b52\nfor j := n - 1; j &gt;= i; j-- {\n// \u5c06houses[j0:j+1]\u5b89\u6392\u7ed9\u7f16\u53f7\u4e3ai\u7684\u7b2ci+1\u4e2a\u90ae\u7b52\nfor j0 := i; j0 &lt;= j; j0++ {\ndp[j] = min(dp[j], dp[j0-1]+medsum[j0][j])\n}\n}\n}\nreturn dp[n-1]\n}\nfunc min(x, y int) int {\nif x &lt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre>"},{"location":"dp/knapsack/#\u80cc\u5305\u95ee\u9898\u53d8\u79cd","title":"\u80cc\u5305\u95ee\u9898\u53d8\u79cd","text":""},{"location":"dp/tree/","title":"\u6811\u5f62 DP","text":""},{"location":"dp/tree/#\u6362\u6839-dp","title":"\u6362\u6839 DP","text":""},{"location":"dp/tree/#cf219d-choosing-capital-for-treeland","title":"CF219D: Choosing Capital for Treeland","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u8f93\u5165 \\(n(2\u2264n\u22642e5)\\) \u548c \\(n-1\\) \u6761\u8fb9 \\(v \\quad w\\)\uff0c\u8868\u793a\u4e00\u6761 \\(v \\to w\\) \u7684\u6709\u5411\u8fb9\uff08\u8282\u70b9\u7f16\u53f7\u4ece \\(1\\) \u5f00\u59cb\uff09\u3002 \u4fdd\u8bc1\u8f93\u5165\u6784\u6210\u4e00\u68f5\u6811\u3002 \u4f60\u53ef\u4ee5\u628a\u8fb9\u53cd\u5411\uff0c\u5373 \\(v \\to w\\) \u6539\u6210 \\(w \\to v\\)\u3002 \u5b9a\u4e49 \\(f(x)\\) \u8868\u793a\u4ee5 \\(x\\) \u4e3a\u6839\u65f6\uff0c\u8981\u8ba9 \\(x\\) \u80fd\u591f\u5230\u8fbe\u4efb\u610f\u70b9\uff0c\u9700\u8981\u53cd\u5411\u7684\u8fb9\u7684\u6570\u91cf\u3002 \u7b2c\u4e00\u884c\u8f93\u51fa \\(min(f(x))\\)\uff0c\u7b2c\u4e8c\u884c\u5347\u5e8f\u8f93\u51fa\u6240\u6709\u7b49\u4e8e \\(min(f(x))\\) \u7684\u8282\u70b9\u7f16\u53f7\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5148\u901a\u8fc7 DFS \u8ba1\u7b97\u51fa\u4ee5 \\(1\\) \u4e3a\u6839\u7684\u53cd\u5411\u8fb9\u6570\u91cf\u3002 \u7136\u540e\u8fdb\u884c\u6362\u6839 DP\uff0c\u5047\u8bbe\u4ee5 \\(x\\) \u4e3a\u6839\u7684\u53cd\u5411\u8fb9\u6570\u91cf\u4e3a \\(n\\) \uff0c\u8003\u8651\u4e0e \\(x\\) \u76f8\u8fde\u7684\u8282\u70b9 \\(y\\) \uff1a</p> <ol> <li>\u5982\u679c \\(x \\to y\\) \uff0c\u5219\u4ee5 \\(y\\) \u4e3a\u6839\u7684\u53cd\u5411\u8fb9\u6570\u91cf\u4e3a \\(n+1\\) \uff1b</li> <li>\u5982\u679c \\(x \\gets y\\) \uff0c\u5219\u4ee5 \\(y\\) \u4e3a\u6839\u7684\u53cd\u5411\u8fb9\u6570\u91cf\u4e3a \\(n-1\\) \u3002</li> </ol> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n\"sort\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, v, w int\nFscan(in, &amp;n)\nug := make([][]int, n+1)\nfor ; n &gt; 1; n-- {\nFscan(in, &amp;v, &amp;w)\nug[v] = append(ug[v], w&lt;&lt;1)   // \u6700\u4f4e\u4f4d 0 \u8868\u793a\u6b63\u5411\nug[w] = append(ug[w], v&lt;&lt;1|1) // \u6700\u4f4e\u4f4d 1 \u8868\u793a\u53cd\u5411\n}\n// \u7b2c\u4e00\u904dDFS\u8ba1\u7b97\u4ee5\u8282\u70b91\u4e3a\u6839\u65f6\uff0c\u9700\u8981\u53cd\u5411\u7684\u8fb9\u7684\u6570\u91cf\nvar dfs1 func(x, fa int) int\ndfs1 = func(x, fa int) (c int) {\nfor _, y := range ug[x] {\nif y&gt;&gt;1 != fa {\nc += y&amp;1 + dfs1(y&gt;&gt;1, x)\n}\n}\nreturn\n}\nmin := dfs1(1, 0)\n// \u7b2c\u4e8c\u904dDFS\u901a\u8fc7\u6362\u6839DP\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u9700\u8981\u53cd\u5411\u7684\u8fb9\u7684\u6570\u91cf\nvar xs []int\nvar dfs func(x, fa, c int)\ndfs = func(x, fa, c int) {\nif c &lt; min {\nxs, min = []int{x}, c\n} else if c == min {\nxs = append(xs, x)\n}\nfor _, y := range ug[x] {\nif y&gt;&gt;1 != fa {\n// \u5982\u679cx-&gt;y\u4e3a\u6b63\u5411\uff0c\u5219\u4ee5\u8282\u70b9y\u4e3a\u6839\u65f6\uff0c\u9700\u8981\u53cd\u5411\u7684\u8fb9\u7684\u6570\u91cf+1\uff1b\u5982\u679c\u4e3a\u53cd\u5411\u5219-1\ndfs(y&gt;&gt;1, x, c-(y&amp;1)&lt;&lt;1+1)\n}\n}\n}\ndfs(1, 0, min)\nsort.Ints(xs)\nFprintln(out, min)\nfor _, x := range xs {\nFprint(out, x, \" \")\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\nstatic List&lt;Integer&gt;[] ug;\nstatic List&lt;Integer&gt; xs = new ArrayList&lt;&gt;();\nstatic int min;\npublic static void main(String[] args) throws Exception {\nint n = Integer.parseInt(in.readLine());\nug = new List[n + 1];\nfor (int i = 1; i &lt;= n; i++) {\nug[i] = new ArrayList&lt;&gt;();\n}\nfor (; n &gt; 1; n--) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nint v = Integer.parseInt(tokenizer.nextToken());\nint w = Integer.parseInt(tokenizer.nextToken());\nug[v].add(w &lt;&lt; 1);     // \u6700\u4f4e\u4f4d 0 \u8868\u793a\u6b63\u5411\nug[w].add(v &lt;&lt; 1 | 1); // \u6700\u4f4e\u4f4d 1 \u8868\u793a\u53cd\u5411\n}\n// \u7b2c\u4e00\u904dDFS\u8ba1\u7b97\u4ee5\u8282\u70b91\u4e3a\u6839\u65f6\uff0c\u9700\u8981\u53cd\u5411\u7684\u8fb9\u7684\u6570\u91cf\nmin = dfs1(1, 0);\n// \u7b2c\u4e8c\u904dDFS\u901a\u8fc7\u6362\u6839DP\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u9700\u8981\u53cd\u5411\u7684\u8fb9\u7684\u6570\u91cf\ndfs(1, 0, min);\nCollections.sort(xs);\nout.println(min);\nfor (int x : xs) {\nout.printf(\"%d \", x);\n}\nout.flush();\nout.close();\nin.close();\n}\npublic static int dfs1(int x, int fa) {\nint count = 0;\nfor (int y : ug[x]) {\nif ((y &gt;&gt; 1) != fa) {\ncount += (y &amp; 1) + dfs1(y &gt;&gt; 1, x);\n}\n}\nreturn count;\n}\npublic static void dfs(int x, int fa, int c) {\nif (c &lt; min) {\nmin = c;\nxs.clear();\nxs.add(x);\n} else if (c == min) {\nxs.add(x);\n}\nfor (int y : ug[x]) {\nif ((y &gt;&gt; 1) != fa) {\n// \u5982\u679cx-&gt;y\u4e3a\u6b63\u5411\uff0c\u5219\u4ee5\u8282\u70b9y\u4e3a\u6839\u65f6\uff0c\u9700\u8981\u53cd\u5411\u7684\u8fb9\u7684\u6570\u91cf+1\uff1b\u5982\u679c\u4e3a\u53cd\u5411\u5219-1\ndfs(y &gt;&gt; 1, x, c - ((y &amp; 1) &lt;&lt; 1) + 1);\n}\n}\n}\n}\n</code></pre>"},{"location":"dp/tree/#cf337d-book-of-evil","title":"CF337D: Book of Evil","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u8f93\u5165 \\(n\\ m(1\u2264m\u2264n\u22641e5)\\ d(0\u2264d\u2264n-1)\\) \u8868\u793a\u4e00\u68f5 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5176\u4e2d \\(m\\) \u4e2a\u8282\u70b9\u6709\u602a\u7269\uff0c\u8fd9\u4e9b\u602a\u7269\u662f\u7531\u4e00\u4e2a\u4f20\u9001\u95e8\u751f\u6210\u7684\uff0c\u4f20\u9001\u95e8\u4e0e\u4efb\u610f\u602a\u7269\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(d\\)\u3002 \u7136\u540e\u8f93\u5165 \\(m\\) \u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u6570\uff0c\u8868\u793a\u602a\u7269\u6240\u5728\u8282\u70b9\u7f16\u53f7\uff08\u4ece \\(1\\) \u5f00\u59cb\uff09\u3002 \u7136\u540e\u8f93\u5165 \\(n-1\\) \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u8282\u70b9\u7f16\u53f7\uff0c\u8868\u793a\u6811\u7684\u8fb9\u3002 \u8f93\u51fa\u53ef\u80fd\u5b58\u5728\u4f20\u9001\u95e8\u7684\u8282\u70b9\u7684\u4e2a\u6570\u3002\u6ce8\u610f\u4f20\u9001\u95e8\u53ea\u6709\u4e00\u4e2a\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, m, d, u, v int\nFscan(in, &amp;n, &amp;m, &amp;d)\nmonster := make([]bool, n+1)\nfor i := 0; i &lt; m; i++ {\nFscan(in, &amp;u)\nmonster[u] = true\n}\nug := make([][]int, n+1)\nfor i := 1; i &lt; n; i++ {\nFscan(in, &amp;u, &amp;v)\nug[u] = append(ug[u], v)\nug[v] = append(ug[v], u)\n}\nconst inf = int(-1e9)\n// \u7b2c\u4e00\u904dDFS\u4ee5\u8282\u70b91\u4e3a\u6839\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e0e\u5176\u5b50\u6811\u4e2d\u7684\u6700\u8fdc\u602a\u7269\u8ddd\u79bb\u3001\u6b21\u8fdc\u602a\u7269\u8ddd\u79bb\u53ca\u6700\u8fdc\u602a\u7269\u8ddd\u79bb\u6240\u5728\u5b50\u6811\u8282\u70b9\ntype tuple struct{ f, s, o int }\ndis := make([]tuple, n+1)\nvar dfs1 func(x, fa int) int\ndfs1 = func(x, fa int) int {\n// \u8ddd\u79bb\u521d\u59cb\u5316\u4e3ainf\uff0c\u65b9\u4fbf\u5904\u7406\u5b50\u6811\u4e2d\u6ca1\u6709\u602a\u7269\u7684\u60c5\u51b5\nf, s, o := inf, inf, 0\nfor _, y := range ug[x] {\nif y != fa {\nif yf := dfs1(y, x) + 1; yf &gt; f {\nf, s, o = yf, f, y\n} else if yf &gt; s {\ns = yf\n}\n}\n}\ndis[x] = tuple{f, s, o}\nif f &lt; 0 &amp;&amp; monster[x] {\nreturn 0\n} else {\nreturn f\n}\n}\ndfs1(1, 0)\n// \u7b2c\u4e8c\u904dDFS\u901a\u8fc7\u6362\u6839DP\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u4e0e\u5176\u5b50\u6811\u4e2d\u7684\u6700\u8fdc\u602a\u7269\u8ddd\u79bb\uff0c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4f5c\u4e3a\u4f20\u9001\u95e8\ncnt := 0\nvar dfs func(x, fa, df int)\ndfs = func(x, fa, df int) {\nif df &lt;= d {\ndx := dis[x]\nif dx.f &lt;= d {\ncnt++\n}\nif df &lt; 0 &amp;&amp; monster[x] {\ndf = 0\n}\nfor _, y := range ug[x] {\nif y != fa {\nif y == dx.o {\ndfs(y, x, max(df, dx.s)+1)\n} else {\ndfs(y, x, max(df, dx.f)+1)\n}\n}\n}\n}\n}\ndfs(1, 0, inf)\nFprintln(out, cnt)\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic final int inf = (int) -1e9;\nstatic int d;\nstatic boolean[] monster;\nstatic List&lt;Integer&gt;[] ug;\nstatic Tuple[] dis;\nstatic int cnt;\npublic static void main(String[] args) throws Exception {\nStringTokenizer nmd = new StringTokenizer(in.readLine());\nint n = Integer.parseInt(nmd.nextToken());\nint m = Integer.parseInt(nmd.nextToken());\nd = Integer.parseInt(nmd.nextToken());\nmonster = new boolean[n + 1];\nStringTokenizer ms = new StringTokenizer(in.readLine());\nfor (int i = 0; i &lt; m; i++) {\nint o = Integer.parseInt(ms.nextToken());\nmonster[o] = true;\n}\nug = new List[n + 1];\nfor (int i = 1; i &lt;= n; i++) {\nug[i] = new ArrayList&lt;&gt;();\n}\nfor (int i = 1; i &lt; n; i++) {\nStringTokenizer uv = new StringTokenizer(in.readLine());\nint u = Integer.parseInt(uv.nextToken());\nint v = Integer.parseInt(uv.nextToken());\nug[u].add(v);\nug[v].add(u);\n}\ndis = new Tuple[n + 1];\n// \u7b2c\u4e00\u904dDFS\u4ee5\u8282\u70b91\u4e3a\u6839\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e0e\u5176\u5b50\u6811\u4e2d\u7684\u6700\u8fdc\u602a\u7269\u8ddd\u79bb\u3001\u6b21\u8fdc\u602a\u7269\u8ddd\u79bb\u53ca\u6700\u8fdc\u602a\u7269\u8ddd\u79bb\u6240\u5728\u5b50\u6811\u8282\u70b9\ndfs1(1, 0);\n// \u7b2c\u4e8c\u904dDFS\u901a\u8fc7\u6362\u6839DP\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u4e0e\u5176\u5b50\u6811\u4e2d\u7684\u6700\u8fdc\u602a\u7269\u8ddd\u79bb\uff0c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4f5c\u4e3a\u4f20\u9001\u95e8\ndfs(1, 0, inf);\nSystem.out.println(cnt);\nin.close();\n}\npublic static int dfs1(int x, int fa) {\n// \u8ddd\u79bb\u521d\u59cb\u5316\u4e3ainf\uff0c\u65b9\u4fbf\u5904\u7406\u5b50\u6811\u4e2d\u6ca1\u6709\u602a\u7269\u7684\u60c5\u51b5\nint f = inf, s = inf, o = 0;\nfor (int y : ug[x]) {\nif (y != fa) {\nint yf = dfs1(y, x) + 1;\nif (yf &gt; f) {\no = y;\ns = f;\nf = yf;\n} else if (yf &gt; s) {\ns = yf;\n}\n}\n}\ndis[x] = new Tuple(f, s, o);\nif (f &lt; 0 &amp;&amp; monster[x]) {\nreturn 0;\n} else {\nreturn f;\n}\n}\npublic static void dfs(int x, int fa, int df) {\nif (df &lt;= d) {\nTuple dx = dis[x];\nif (dx.f &lt;= d) {\ncnt++;\n}\nif (df &lt; 0 &amp;&amp; monster[x]) {\ndf = 0;\n}\nfor (int y : ug[x]) {\nif (y != fa) {\nif (y == dx.o) {\ndfs(y, x, Math.max(df, dx.s) + 1);\n} else {\ndfs(y, x, Math.max(df, dx.f) + 1);\n}\n}\n}\n}\n}\nprivate static class Tuple {\nint f; // \u5b50\u6811\u4e2d\u6700\u8fdc\u602a\u7269\u7684\u8ddd\u79bb\nint s; // \u5b50\u6811\u4e2d\u6b21\u8fdc\u602a\u7269\u7684\u8ddd\u79bb\nint o; // \u6700\u8fdc\u602a\u7269\u8ddd\u79bb\u6240\u5728\u5b50\u6811\u8282\u70b9\nTuple(int f, int s, int o) {\nthis.f = f;\nthis.s = s;\nthis.o = o;\n}\n}\n}\n</code></pre>"},{"location":"ds/bit/","title":"\u6811\u72b6\u6570\u7ec4","text":""},{"location":"ds/bit/#cf652d-nested-segments","title":"CF652D: Nested Segments","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165\u6574\u6570 \\(n (1\u2009\u2264\u2009n\u2009\u2264\u20092e5)\\) \uff0c\u63a5\u4e0b\u6765 \\(n\\) \u884c\u8f93\u5165 \\(n\\) \u4e2a\u95ed\u533a\u95f4\uff0c\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u8303\u56f4\u5728 \\([-1e9,1e9]\\)\uff0c\u6240\u6709\u533a\u95f4\u7aef\u70b9\u4e92\u4e0d\u76f8\u540c\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u8f93\u51fa\u5b83\u5305\u542b\u591a\u5c11\u4e2a\u5176\u5b83\u7684\u533a\u95f4\u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n\"sort\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, l, r int\nFscan(in, &amp;n)\ntype tuple struct{ l, r, i int }\narr := make([]tuple, n)\nrs := make([]int, n)\nfor i := 0; i &lt; n; i++ {\nFscan(in, &amp;l, &amp;r)\narr[i] = tuple{l, r, i}\nrs[i] = r\n}\n// \u6309\u7167\u5de6\u7aef\u70b9\u964d\u5e8f\u6392\u5e8f\nsort.Slice(arr, func(i, j int) bool { return arr[i].l &gt; arr[j].l })\nans := make([]int, n)\n// \u79bb\u6563\u5316\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u524d\u5e8f\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u53f3\u7aef\u70b9\u5c0f\u4e8e\u5f53\u524d\u533a\u95f4\u53f3\u7aef\u70b9\nsort.Ints(rs)\nt := make(BIT, n+1)\nfor _, lri := range arr {\nx := sort.SearchInts(rs, lri.r)\nans[lri.i] = t.query(x)\nt.update(x+1, 1)\n}\nfor _, x := range ans {\nFprintln(out, x)\n}\n}\n// \u6811\u72b6\u6570\u7ec4\ntype BIT []int\n// \u5355\u70b9\u66f4\u65b0\nfunc (t BIT) update(i, v int) {\nfor n := len(t); i &lt; n; i += i &amp; -i {\nt[i] += v\n}\n}\n// \u524d\u7f00\u67e5\u8be2 [1, i]\nfunc (t BIT) query(i int) (ans int) {\nfor ; i &gt; 0; i &amp;= i - 1 {\nans += t[i]\n}\nreturn\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint n = Integer.parseInt(in.readLine());\nint[] rs = new int[n];\nint[][] arr = new int[n][];\nfor (int i = 0; i &lt; n; i++) {\nStringTokenizer tokenizer = new StringTokenizer(in.readLine());\nint l = Integer.parseInt(tokenizer.nextToken());\nint r = Integer.parseInt(tokenizer.nextToken());\narr[i] = new int[] { l, r, i };\nrs[i] = r;\n}\n// \u6309\u7167\u5de6\u7aef\u70b9\u964d\u5e8f\u6392\u5e8f\nArrays.sort(arr, (a, b) -&gt; Integer.compare(b[0], a[0]));\nint[] ans = new int[n];\n// \u79bb\u6563\u5316\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u524d\u5e8f\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u53f3\u7aef\u70b9\u5c0f\u4e8e\u5f53\u524d\u533a\u95f4\u53f3\u7aef\u70b9\nArrays.sort(rs);\nBIT bit = new BIT(n + 1);\nfor (int[] lri : arr) {\nint x = Arrays.binarySearch(rs, lri[1]);\nans[lri[2]] = bit.query(x);\nbit.update(x + 1, 1);\n}\nfor (int c : ans) {\nout.println(c);\n}\nout.flush();\nout.close();\nin.close();\n}\n// \u6811\u72b6\u6570\u7ec4\nprivate static class BIT {\nint n;\nint[] arr;\nBIT(int n) {\nthis.n = n;\nthis.arr = new int[n];\n}\n// \u5355\u70b9\u66f4\u65b0\nvoid update(int i, int v) {\nfor (; i &lt; n; i += (i &amp; -i)) {\narr[i] += v;\n}\n}\n// \u524d\u7f00\u67e5\u8be2 [1, i]\nint query(int i) {\nint sum = 0;\nfor (; i &gt; 0; i &amp;= (i - 1)) {\nsum += arr[i];\n}\nreturn sum;\n}\n}\n}\n</code></pre>"},{"location":"ds/dsu/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"ds/dsu/#\u5e76\u67e5\u96c6\u57fa\u7840","title":"\u5e76\u67e5\u96c6\u57fa\u7840","text":""},{"location":"ds/dsu/#cf1157e-minimum-array","title":"CF1157E: Minimum Array","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(n(1\u2264n\u22642e5)\\) \uff0c\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u5206\u522b\u8f93\u5165\u4e24\u4e2a\u957f\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(a\\) \u548c \\(b\\) \uff0c\u5143\u7d20\u8303\u56f4\uff1a\\([0,n-1]\\) \u3002 \u4f60\u53ef\u4ee5\u91cd\u6392\u6570\u7ec4 \\(b\\) \u3002 \u8fd8\u6709\u4e00\u4e2a\u957f\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(c\\) \uff0c\u5176\u4e2d \\(c[i] = (a[i] + b[i]) \\% n\\) \u3002 \u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6570\u7ec4 \\(c\\) \u3002</p> <p>\u5728 Codeforces \u6216 \u6d1b\u8c37 \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5bf9\u4e8e \\(a[i]\\) \uff0c\u9700\u8981\u53bb\u6570\u7ec4 \\(b\\) \u4e2d\u627e \\((n-a[i])%n\\) \uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u627e\u66f4\u5927\u7684\u503c\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5c31\u518d\u4ece \\(0\\) \u5f00\u59cb\u627e\u3002 \u76f4\u63a5\u66b4\u529b\u67e5\u627e\u4f1a\u8d85\u65f6\uff0c\u6709\u591a\u79cd\u4f18\u5316\u65b9\u6cd5\uff1a</p> <ul> <li>\u7c7b\u4f3c Java TreeMap \u8fd9\u6837\u7684\u5e73\u8861\u6811\uff0c\u53ea\u7ef4\u62a4\u5b58\u5728\u7684\uff1b</li> <li>\u5e76\u67e5\u96c6\uff0c\u5982\u679c \\(x\\) \u4e0d\u5b58\u5728\uff0c\u5219\u628a \\(x\\) \u548c \\(x+1\\) \u5408\u5e76\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u4e0b\u4e00\u4e2a\u5b58\u5728\u7684\u3002</li> </ul> <p>\u65b9\u6cd5\u4e00\uff1a\u5e76\u67e5\u96c6</p> GoJava <pre><code>package main\nimport (\n\"bufio\"\n. \"fmt\"\n\"os\"\n)\nfunc main() {\nin := bufio.NewReader(os.Stdin)\nout := bufio.NewWriter(os.Stdout)\ndefer out.Flush()\nvar n, x int\nFscan(in, &amp;n)\na := make([]int, n)\nfor i := range a {\nFscan(in, &amp;a[i])\n}\nb := make([]int, n+1)\nfor i := 0; i &lt; n; i++ {\nFscan(in, &amp;x)\nb[x]++\n}\n// \u5e76\u67e5\u96c6\nfa := make([]int, n+1)\nfor i, next := n, 0; i &gt;= 0; i-- {\nif b[i] != 0 {\nnext = i\n}\nfa[i] = next\n}\nvar find func(x int) int\nfind = func(x int) int {\nif fa[x] != x {\nfa[x] = find(fa[x]) // \u8def\u5f84\u538b\u7f29\n}\nreturn fa[x]\n}\nunion := func(f, t int) {\nif f, t = find(f), find(t); f != t {\nfa[f] = t\n}\n}\nfor _, x = range a {\ny := find(n - x)\nif b[y]--; b[y] == 0 {\nunion(y, y+1) // \u6307\u5411\u4e0b\u4e00\u4e2a\u672a\u4f7f\u7528\u7684\u6570\u5b57\n}\nFprint(out, (x+y)%n, \" \")\n}\n}\n</code></pre> <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint n = Integer.parseInt(in.readLine());\nint[] a = new int[n];\nint[] b = new int[n + 1];\nStringTokenizer at = new StringTokenizer(in.readLine());\nStringTokenizer bt = new StringTokenizer(in.readLine());\nfor (int i = 0; i &lt; n; i++) {\na[i] = Integer.parseInt(at.nextToken());\nint x = Integer.parseInt(bt.nextToken());\nb[x]++;\n}\nfa = new int[n + 1];\nfor (int i = n, next = 0; i &gt;= 0; i--) {\nif (b[i] != 0) {\nnext = i;\n}\nfa[i] = next;\n}\nfor (int x : a) {\nint y = find(n - x);\nif (--b[y] == 0) {\nunion(y, y + 1); // \u6307\u5411\u4e0b\u4e00\u4e2a\u672a\u4f7f\u7528\u7684\u6570\u5b57\n}\nout.printf(\"%d \", (x + y) % n);\n}\nout.flush();\nout.close();\nin.close();\n}\n// \u5e76\u67e5\u96c6\nstatic int[] fa;\npublic static int find(int x) {\nif (fa[x] != x) {\nfa[x] = find(fa[x]); // \u8def\u5f84\u538b\u7f29\n}\nreturn fa[x];\n}\npublic static void union(int f, int t) {\nf = find(f);\nt = find(t);\nif (f != t) {\nfa[f] = t;\n}\n}\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u6709\u5e8f\u5b57\u5178</p> Java <pre><code>import java.io.*;\nimport java.util.*;\npublic class Main {\nstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\nstatic PrintWriter out = new PrintWriter(System.out);\npublic static void main(String[] args) throws Exception {\nint n = Integer.parseInt(in.readLine());\nint[] a = new int[n];\nTreeMap&lt;Integer, Integer&gt; b = new TreeMap&lt;&gt;();\nStringTokenizer at = new StringTokenizer(in.readLine());\nStringTokenizer bt = new StringTokenizer(in.readLine());\nfor (int i = 0; i &lt; n; i++) {\na[i] = Integer.parseInt(at.nextToken());\nint x = Integer.parseInt(bt.nextToken());\nb.compute(x, (k, v) -&gt; v == null ? 1 : v + 1);\n}\nfor (int x : a) {\nInteger y = b.ceilingKey(n - x);\nif (y == null) {\ny = b.ceilingKey(0);\n}\nb.compute(y, (k, v) -&gt; v == 1 ? null : v - 1);\nout.printf(\"%d \", (x + y) % n);\n}\nout.flush();\nout.close();\nin.close();\n}\n}\n</code></pre>"},{"location":"ds/monotonous-stack/","title":"\u5355\u8c03\u6808","text":""},{"location":"graph/shortest-path/","title":"\u6700\u77ed\u8def","text":""},{"location":"graph/shortest-path/#dijkstra-\u7b97\u6cd5","title":"Dijkstra \u7b97\u6cd5","text":"<p>Dijkstra \u7b97\u6cd5\u9002\u5408\u7528\u6765\u6c42\u51fa\u65e0\u8d1f\u6743\u8fb9\u56fe\u4e2d\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u3002\u5176\u4e2d\uff1a</p> <ul> <li>\u65e0\u8d1f\u6743\u8fb9 \u8868\u793a\u56fe\u4e2d\u6240\u6709\u8fb9\u7684\u6743\u503c\u5fc5\u987b\u4e3a\u975e\u8d1f\u6570\uff1b</li> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84 \u8868\u793a Dijkstra \u7b97\u6cd5\u53ef\u4ee5\u6c42\u51fa\u4ece\u67d0\u4e00\u4e2a\u8282\u70b9\u5230\u5176\u4f59\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002</li> </ul> <p>\u4f7f\u7528\u4e8c\u53c9\u5806\u5b9e\u73b0\u7684\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684 Dijkstra \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\\(O((E+V)\\log V)\\) \uff0c\u5176\u4e2d \\(V\\) \u548c \\(E\\) \u5206\u522b\u662f\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u548c\u8fb9\u6570\u3002</p>"},{"location":"graph/shortest-path/#0-1-bfs\u53cc\u7aef\u961f\u5217bfs","title":"0-1 BFS\uff08\u53cc\u7aef\u961f\u5217BFS\uff09","text":"<p>0-1 BFS \u9002\u7528\u4e8e\u89e3\u51b3\u8fb9\u6743\u503c\u53ea\u6709 \\(0\\) \u548c \\(1\\)\uff08\u6216\u8005\u80fd\u591f\u8f6c\u5316\u4e3a\u8fd9\u79cd\u60c5\u51b5\uff09\u7684\u6700\u77ed\u8def\u95ee\u9898\u3002</p> <p>\u8fd9\u91cc\u6709\u4e00\u7bc7\u5f88\u8be6\u7ec6\u7684\u6559\u7a0b\u3002</p> <p>0-1 BFS \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\\(O(E+V)\\) \uff0c\u5176\u4e2d \\(V\\) \u548c \\(E\\) \u5206\u522b\u662f\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u548c\u8fb9\u6570\u3002</p>"},{"location":"graph/shortest-path/#lc1368-\u4f7f\u7f51\u683c\u56fe\u81f3\u5c11\u6709\u4e00\u6761\u6709\u6548\u8def\u5f84\u7684\u6700\u5c0f\u4ee3\u4ef7","title":"LC1368: \u4f7f\u7f51\u683c\u56fe\u81f3\u5c11\u6709\u4e00\u6761\u6709\u6548\u8def\u5f84\u7684\u6700\u5c0f\u4ee3\u4ef7","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a <code>m x n (1\u2264m,n\u2264100)</code> \u7684\u7f51\u683c\u56fe <code>grid</code> \u3002 \u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u5b57\u8868\u793a\u5f53\u524d\u5355\u5143\u683c\u5141\u8bb8\u7684\u524d\u8fdb\u65b9\u5411\uff0c<code>1, 2, 3, 4</code> \u5206\u522b\u5bf9\u5e94\u53f3\u3001\u5de6\u3001\u4e0b\u3001\u4e0a\u56db\u4e2a\u65b9\u5411\u3002 \u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u5b57\u53ef\u4ee5\u4fee\u6539\u4e00\u6b21\uff0c\u4fee\u6539\u7684\u4ee3\u4ef7\u4e3a <code>1</code> \u3002 \u6c42\u4f7f\u5f97\u7f51\u683c\u56fe\u4e2d\u81f3\u5c11\u6709\u4e00\u6761\u4ece <code>(0, 0)</code> \u5230 <code>(m-1, n-1)</code> \u7684\u6709\u6548\u8def\u5f84\u7684\u6700\u5c0f\u4fee\u6539\u4ee3\u4ef7\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6839\u636e\u9898\u610f\u5efa\u7acb\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u4f5c\u4e3a\u4e00\u4e2a\u8282\u70b9\u3002 \u6bcf\u4e2a\u8282\u70b9\u5411\u4e0e\u5176\u76f8\u90bb\u7684\u5355\u5143\u683c\u8282\u70b9\u8fde\u51fa\u6709\u5411\u8fb9\uff0c\u5982\u679c\u65b9\u5411\u76f8\u540c\u5219\u8fb9\u6743\u4e3a <code>0</code> \uff1b\u65b9\u5411\u4e0d\u540c\u5219\u8fb9\u6743\u4e3a <code>1</code> \u3002 \u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u4ece <code>(0, 0)</code> \u5230 <code>(m-1, n-1)</code> \u7684\u6700\u77ed\u8def\u5f84\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1a0-1 BFS</p> Go <pre><code>package main\nfunc minCost(grid [][]int) int {\nm, n := len(grid), len(grid[0])\nmn := m * n\n// dp[x][y]\u8868\u793a\u4ece\u8d77\u70b9\u5230\u4f4d\u7f6e(x, y)\u7684\u6700\u5c0f\u4ee3\u4ef7\ndp := make([][]int, m)\nvis := make([][]bool, m)\nfor i := range dp {\ndp[i] = make([]int, n)\nvis[i] = make([]bool, n)\nfor j := range dp[i] {\ndp[i][j] = mn\n}\n}\ndp[0][0] = 0\nq := deque{{0}}\nfor q.size() != 0 {\nif x, y := q.remove(0); !vis[x][y] {\nvis[x][y] = true\nfor i, d := range dirs {\nnx, ny := x+d[0], y+d[1]\nif 0 &lt;= nx &amp;&amp; nx &lt; m &amp;&amp; 0 &lt;= ny &amp;&amp; ny &lt; n {\ncost := 0\nif i+1 != grid[x][y] {\ncost = 1\n}\nif dis := dp[x][y] + cost; dis &lt; dp[nx][ny] {\ndp[nx][ny] = dis\nq.add(cost, nx, ny)\n}\n}\n}\n}\n}\nreturn dp[m-1][n-1]\n}\nvar dirs = [][]int{{0, 1}, {0, -1}, {1, 0}, {-1, 0}}\nconst shift, mask = 8, (1 &lt;&lt; 8) - 1\n// \u4e24\u4e2a slice \u5934\u5bf9\u5934\u5b9e\u73b0\u53cc\u7aef\u961f\u5217\ntype deque [2][]int\n// size \u961f\u5217\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\nfunc (q *deque) size() int { return len(q[0]) + len(q[1]) }\n// add \u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u5750\u6807(x, y)\u3002i == 0\u5728\u961f\u9996\u6dfb\u52a0\uff1bi == 1\u5728\u961f\u5c3e\u6dfb\u52a0\nfunc (q *deque) add(i, x, y int) { q[i] = append(q[i], x&lt;&lt;shift|y) }\n// remove \u4ece\u961f\u5217\u4e2d\u79fb\u9664\u4e00\u4e2a\u5750\u6807(x, y)\u5e76\u8fd4\u56de\u3002i == 0\u4ece\u961f\u9996\u79fb\u9664\uff1bi == 1\u4ece\u961f\u5c3e\u79fb\u9664\nfunc (q *deque) remove(i int) (x, y int) {\nvar xy int\nif tail := len(q[i]) - 1; tail == -1 {\nxy, q[i^1] = q[i^1][0], q[i^1][1:]\n} else {\nxy, q[i] = q[i][tail], q[i][:tail]\n}\nreturn xy &gt;&gt; shift, xy &amp; mask\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1aDijkstra \u7b97\u6cd5</p> <p>Dijkstra \u7b97\u6cd5\u4e0d\u662f\u672c\u9898\u7684\u91cd\u70b9\uff0c\u8fd9\u91cc\u662f\u66f4\u9002\u5408\u4f7f\u7528Dijkstra \u7b97\u6cd5\u7684\u9898\u76ee\u3002</p> Go <pre><code>package main\nimport \"container/heap\"\nfunc minCost(grid [][]int) int {\nm, n := len(grid), len(grid[0])\nmn := m * n\ndis := make([][]int, m)\nfor i := range dis {\ndis[i] = make([]int, n)\nfor j := range dis[i] {\ndis[i][j] = mn\n}\n}\nh := hp{{}}\ndis[0][0] = 0\nfor h.Len() &gt; 0 {\nf := heap.Pop(&amp;h).(pair)\nif x, y := f.x, f.y; f.dis &lt;= dis[x][y] {\nfor i, dir := range dirs {\nnx, ny := x+dir[0], y+dir[1]\nif 0 &lt;= nx &amp;&amp; nx &lt; m &amp;&amp; 0 &lt;= ny &amp;&amp; ny &lt; n {\ncost := 0\nif i+1 != grid[x][y] {\ncost = 1\n}\nif d := f.dis + cost; d &lt; dis[nx][ny] {\ndis[nx][ny] = d\nheap.Push(&amp;h, pair{nx, ny, d})\n}\n}\n}\n}\n}\nreturn dis[m-1][n-1]\n}\nvar dirs = [][]int{{0, 1}, {0, -1}, {1, 0}, {-1, 0}}\ntype pair struct{ x, y, dis int } // \u5355\u5143\u683c(x, y)\u53ca\u5176\u4e0e\u8d77\u70b9\u7684\u8ddd\u79bb\ntype hp []pair                    // \u5806\uff08\u4f18\u5148\u961f\u5217\uff09\nfunc (h hp) Len() int            { return len(h) }\nfunc (h hp) Less(i, j int) bool  { return h[i].dis &lt; h[j].dis }\nfunc (h hp) Swap(i, j int)       { h[i], h[j] = h[j], h[i] }\nfunc (h *hp) Push(x interface{}) { *h = append(*h, x.(pair)) }\nfunc (h *hp) Pop() interface{} {\nold := *h\nn := len(old)\nx := old[n-1]\n*h = old[:n-1]\nreturn x\n}\n</code></pre>"},{"location":"graph/shortest-path/#lc2290-\u5230\u8fbe\u89d2\u843d\u9700\u8981\u79fb\u9664\u969c\u788d\u7269\u7684\u6700\u5c0f\u6570\u76ee","title":"LC2290: \u5230\u8fbe\u89d2\u843d\u9700\u8981\u79fb\u9664\u969c\u788d\u7269\u7684\u6700\u5c0f\u6570\u76ee","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a <code>m x n</code> <code>1\u2264m,n\u22641e5</code> \u4e14 <code>2\u2264m*n\u22641e5</code> \u7684\u7f51\u683c\u56fe <code>grid</code> \u3002\u6bcf\u4e2a\u5355\u5143\u683c\u90fd\u662f\u4e24\u4e2a\u503c\u4e4b\u4e00\uff1a</p> <ul> <li><code>0</code> \u8868\u793a\u4e00\u4e2a\u7a7a\u5355\u5143\u683c\uff1b</li> <li><code>1</code> \u8868\u793a\u4e00\u4e2a\u53ef\u4ee5\u79fb\u9664\u7684\u969c\u788d\u7269\u3002</li> </ul> <p>\u4f60\u53ef\u4ee5\u5411\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u79fb\u52a8\uff0c\u4ece\u4e00\u4e2a\u7a7a\u5355\u5143\u683c\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7a7a\u5355\u5143\u683c\u3002 \u73b0\u5728\u4f60\u9700\u8981\u4ece\u5de6\u4e0a\u89d2 <code>(0, 0)</code> \u79fb\u52a8\u5230\u53f3\u4e0b\u89d2 <code>(m-1, n-1)</code> \uff0c\u8fd4\u56de\u9700\u8981\u79fb\u9664\u7684\u969c\u788d\u7269\u7684\u6700\u5c0f\u6570\u76ee\u3002 \u9898\u76ee\u4fdd\u8bc1\u5de6\u4e0a\u89d2 <code>(0, 0)</code> \u548c\u53f3\u4e0b\u89d2 <code>(m-1, n-1)</code> \u4e3a\u7a7a\u5355\u5143\u683c\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6839\u636e\u9898\u610f\u5efa\u7acb\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u4f5c\u4e3a\u4e00\u4e2a\u8282\u70b9\u3002 \u6bcf\u4e2a\u8282\u70b9\u5411\u4e0e\u5176\u76f8\u90bb\u7684\u5355\u5143\u683c\u8282\u70b9\u8fde\u51fa\u6709\u5411\u8fb9\uff0c\u76f8\u90bb\u5355\u5143\u683c\u7684\u503c\u5373\u4e3a\u8fb9\u6743\u3002 \u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u4ece <code>(0, 0)</code> \u5230 <code>(m-1, n-1)</code> \u7684\u6700\u77ed\u8def\u5f84\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1a0-1 BFS</p> Go <pre><code>package main\nfunc minimumObstacles(grid [][]int) int {\nm, n := len(grid), len(grid[0])\nmn := m * n\n// dp[i][j]\u8868\u793a\u5230\u8fbegrid[i][j]\u9700\u8981\u79fb\u9664\u7684\u969c\u788d\u7269\u7684\u6700\u5c0f\u6570\u76ee\uff0c\u5373\u6700\u5c0f\u4ee3\u4ef7\ndp := make([][]int, m)\nvis := make([][]bool, m)\nfor i := 0; i &lt; m; i++ {\ndp[i] = make([]int, n)\nvis[i] = make([]bool, n)\nfor j := 0; j &lt; n; j++ {\ndp[i][j] = mn\n}\n}\ndp[0][0] = 0\n// 0-1 BFS\uff0c(0, 0)\u7684\u6700\u5c0f\u4ee3\u4ef7\u4e3a0\uff0c\u5165\u961f\u9996\nq := deque{{0}}\nfor q.size() != 0 {\nif x, y := q.remove(0); !vis[x][y] {\nvis[x][y] = true\nfor _, delta := range dirs {\nnx, ny := x+delta[0], y+delta[1]\nif 0 &lt;= nx &amp;&amp; nx &lt; m &amp;&amp; 0 &lt;= ny &amp;&amp; ny &lt; n {\ncost := grid[nx][ny]\nif dis := dp[x][y] + cost; dis &lt; dp[nx][ny] {\n// \u66f4\u65b0\u5230\u8fbe(nx, ny)\u7684\u6700\u5c0f\u4ee3\u4ef7\ndp[nx][ny] = dis\n// \u7a7a\u683c\u4ee3\u4ef7\u4e3a0\u5165\u961f\u9996\uff0c\u969c\u788d\u4ee3\u4ef7\u4e3a1\u5165\u961f\u5c3e\uff0c\u4f18\u5148\u641c\u7d22\u4ee3\u4ef7\u5c0f\u7684\u5750\u6807\nq.add(cost, nx, ny)\n}\n}\n}\n}\n}\nreturn dp[m-1][n-1]\n}\nvar dirs = [][]int{{-1, 0}, {0, -1}, {1, 0}, {0, 1}}\nconst shift, mask = 20, (1 &lt;&lt; 20) - 1\n// \u4e24\u4e2aslice\u5934\u5bf9\u5934\u5b9e\u73b0deque\ntype deque [2][]int\n// size \u961f\u5217\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\nfunc (q *deque) size() int {\nreturn len(q[0]) + len(q[1])\n}\n// add \u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u5750\u6807(x, y)\u3002i == 0\u5728\u961f\u9996\u6dfb\u52a0\uff1bi == 1\u5728\u961f\u5c3e\u6dfb\u52a0\nfunc (q *deque) add(i, x, y int) {\nq[i] = append(q[i], (x&lt;&lt;shift)|y)\n}\n// remove \u4ece\u961f\u5217\u4e2d\u79fb\u9664\u4e00\u4e2a\u5750\u6807(x, y)\u5e76\u8fd4\u56de\u3002i == 0\u4ece\u961f\u9996\u79fb\u9664\uff1bi == 1\u4ece\u961f\u5c3e\u79fb\u9664\nfunc (q *deque) remove(i int) (x, y int) {\nvar xy int\nif tail := len(q[i]) - 1; tail &gt; -1 {\nxy, q[i] = q[i][tail], q[i][:tail]\n} else {\n// 0^1 = 1, 1^1 = 0\nxy, q[i^1] = q[i^1][0], q[i^1][1:]\n}\nreturn xy &gt;&gt; shift, xy &amp; mask\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1aDijkstra \u7b97\u6cd5</p> <p>Dijkstra \u7b97\u6cd5\u4e0d\u662f\u672c\u9898\u7684\u91cd\u70b9\uff0c\u8fd9\u91cc\u662f\u66f4\u9002\u5408\u4f7f\u7528Dijkstra \u7b97\u6cd5\u7684\u9898\u76ee\u3002</p> Go <pre><code>package main\nimport \"container/heap\"\nfunc minimumObstacles(grid [][]int) int {\nm, n := len(grid), len(grid[0])\nmn := m * n\ndis := make([][]int, m)\nfor i := range dis {\ndis[i] = make([]int, n)\nfor j := range dis[i] {\ndis[i][j] = mn\n}\n}\ndis[0][0] = 0\nh := hp{{}}\nfor h.Len() != 0 {\nf := heap.Pop(&amp;h).(tuple)\nif x, y := f.x, f.y; f.dis &lt;= dis[x][y] {\nfor _, d := range dirs {\nnx, ny := x+d[0], y+d[1]\nif 0 &lt;= nx &amp;&amp; nx &lt; m &amp;&amp; 0 &lt;= ny &amp;&amp; ny &lt; n {\nif d := f.dis + grid[nx][ny]; d &lt; dis[nx][ny] {\ndis[nx][ny] = d\nheap.Push(&amp;h, tuple{nx, ny, d})\n}\n}\n}\n}\n}\nreturn dis[m-1][n-1]\n}\nvar dirs = [][]int{{-1, 0}, {1, 0}, {0, -1}, {0, 1}}\ntype tuple struct{ x, y, dis int } // \u5355\u5143\u683c(x, y)\u53ca\u5176\u4e0e\u8d77\u70b9\u7684\u8ddd\u79bb\ntype hp []tuple                    // \u5806\uff08\u4f18\u5148\u961f\u5217\uff09\nfunc (h hp) Len() int            { return len(h) }\nfunc (h hp) Less(i, j int) bool  { return h[i].dis &lt; h[j].dis }\nfunc (h hp) Swap(i, j int)       { h[i], h[j] = h[j], h[i] }\nfunc (h *hp) Push(x interface{}) { *h = append(*h, x.(tuple)) }\nfunc (h *hp) Pop() interface{} {\nold := *h\nn := len(old)\nx := old[n-1]\n*h = old[:n-1]\nreturn x\n}\n</code></pre>"},{"location":"graph/tree/diameter/","title":"\u6811\u7684\u76f4\u5f84","text":""},{"location":"graph/tree/diameter/#lc1617-\u7edf\u8ba1\u5b50\u6811\u4e2d\u57ce\u5e02\u4e4b\u95f4\u6700\u5927\u8ddd\u79bb","title":"LC1617: \u7edf\u8ba1\u5b50\u6811\u4e2d\u57ce\u5e02\u4e4b\u95f4\u6700\u5927\u8ddd\u79bb","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60 \\(n(2\u2264n\u226415)\\) \u4e2a\u57ce\u5e02\uff0c\u7f16\u53f7\u4ece \\(1\\) \u5230 \\(n\\) \u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n-1\\) \u7684\u6570\u7ec4 \\(edges\\) \uff0c\u5176\u4e2d \\(edges[i]=[u_i,v_i]\\) \u8868\u793a\u57ce\u5e02 \\(u_i\\) \u548c \\(v_i\\) \u4e4b\u95f4\u6709\u4e00\u6761\u53cc\u5411\u8fb9\u3002 \u9898\u76ee\u4fdd\u8bc1\u6240\u6709\u57ce\u5e02\u5f62\u6210\u4e00\u68f5\u6811\u3002 \u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(n-1\\) \u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u7b2c \\(d\\) \u4e2a\u5143\u7d20\uff08\u4ece \\(1\\) \u5f00\u59cb\uff09\u662f\u57ce\u5e02\u95f4\u6700\u5927\u8ddd\u79bb\u6070\u597d\u7b49\u4e8e \\(d\\) \u7684\u5b50\u6811\u6570\u76ee\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u65b9\u6cd5\u4e00\uff1a\u679a\u4e3e\u5b50\u6811 + \u6811\u5f62DP</p> <p>\u679a\u4e3e\u57ce\u5e02\u5b50\u96c6\uff0c\u68c0\u67e5\u662f\u5426\u662f\u6709\u6548\u5b50\u6811\uff0c\u5982\u679c\u6709\u6548\uff0c\u5219\u901a\u8fc7\u6811\u5f62DP\u8ba1\u7b97\u5b50\u6811\u7684\u76f4\u5f84\u3002</p> Go <pre><code>package main\nimport \"math/bits\"\nfunc countSubgraphsForEachDiameter(n int, edges [][]int) []int {\nug := make([][]int, n)\nfor _, e := range edges {\nu, v := e[0]-1, e[1]-1\nug[u] = append(ug[u], v)\nug[v] = append(ug[v], u)\n}\nans := make([]int, n-1)\n// \u72b6\u6001\u538b\u7f29\u679a\u4e3e\u57ce\u5e02\u5b50\u96c6\nfor s := 1&lt;&lt;n - 1; s != 0; s-- {\nif bits.OnesCount16(uint16(s)) != 1 { // \u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u8282\u70b9\nmask, d := s, 0\nvar dfs func(x, fa int) int\ndfs = func(x, fa int) int {\nmask ^= 1 &lt;&lt; x\nvar f, s int // \u6700\u5927\u5b50\u6811\u6df1\u5ea6\u548c\u6b21\u5927\u5b50\u6811\u6df1\u5ea6\nfor _, y := range ug[x] {\nif y != fa &amp;&amp; mask&gt;&gt;y&amp;1 == 1 {\nif yf := dfs(y, x) + 1; yf &gt; f {\nf, s = yf, f\n} else if yf &gt; s {\ns = yf\n}\n}\n}\nd = max(d, f+s)\nreturn f // \u8fd4\u56de\u6700\u5927\u5b50\u6811\u6df1\u5ea6\n}\nstart := bits.Len16(uint16(s)) - 1\nif dfs(start, -1); mask == 0 { // \u5224\u65ad\u5b50\u6811s\u662f\u5426\u6709\u6548\nans[d-1]++\n}\n}\n}\nreturn ans\n}\nfunc max(x, y int) int {\nif x &gt; y {\nreturn x\n} else {\nreturn y\n}\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u679a\u4e3e\u5b50\u6811 + \u4e24\u6b21DFS</p> <p>\u679a\u4e3e\u57ce\u5e02\u5b50\u96c6\uff0c\u68c0\u67e5\u662f\u5426\u662f\u6709\u6548\u5b50\u6811\uff0c\u5982\u679c\u6709\u6548\uff0c\u5219\u901a\u8fc7\u4e24\u6b21DFS\u8ba1\u7b97\u5b50\u6811\u7684\u76f4\u5f84\u3002</p> Go <pre><code>package main\nimport \"math/bits\"\nfunc countSubgraphsForEachDiameter(n int, edges [][]int) []int {\nug := make([][]int, n)\nfor _, e := range edges {\nu, v := e[0]-1, e[1]-1\nug[u] = append(ug[u], v)\nug[v] = append(ug[v], u)\n}\nans := make([]int, n-1)\n// \u72b6\u6001\u538b\u7f29\u679a\u4e3e\u57ce\u5e02\u5b50\u96c6\nfor s := 1&lt;&lt;n - 1; s != 0; s-- {\nif bits.OnesCount16(uint16(s)) != 1 { // \u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u8282\u70b9\nmax, o, vis := 0, -1, 0\nvar dfs func(x, fa, depth int)\ndfs = func(x, fa, depth int) {\nvis |= 1 &lt;&lt; x\nif depth &gt; max {\nmax, o = depth, x\n}\nfor _, y := range ug[x] {\nif y != fa &amp;&amp; s&gt;&gt;y&amp;1 == 1 {\ndfs(y, x, depth+1)\n}\n}\n}\n// \u7b2c\u4e00\u904dDFS\u627e\u5230\u4e0estart\u8282\u70b9\u8ddd\u79bb\u6700\u8fdc\u7684\u8282\u70b9\nstart := bits.Len16(uint16(s)) - 1\nif dfs(start, -1, 0); vis == s { // \u5224\u65ad\u5b50\u6811s\u662f\u5426\u6709\u6548\nmax = 0\ndfs(o, -1, 0) // \u7b2c\u4e8c\u904dDFS\u627e\u5230\u4e0eo\u8282\u70b9\u8ddd\u79bb\u6700\u8fdc\u7684\u8282\u70b9\uff0c\u4e24\u8282\u70b9\u8ddd\u79bb\u5373\u4e3a\u5b50\u6811\u7684\u76f4\u5f84\nans[max-1]++\n}\n}\n}\nreturn ans\n}\n</code></pre> <p>\u65b9\u6cd5\u4e09\uff1a\u679a\u4e3e\u76f4\u5f84\u7aef\u70b9</p> <p>\u679a\u4e3e\u76f4\u5f84\u4e24\u7aef\u70b9\uff0c\u8ba1\u7b97\u4ee5\u8fd9\u4e24\u4e2a\u7aef\u70b9\u4f5c\u4e3a\u76f4\u5f84\u7684\u5b50\u6811\u4e2a\u6570\uff0c\u6ce8\u610f\u53bb\u91cd\u5904\u7406\u3002</p> Go <pre><code>package main\nfunc countSubgraphsForEachDiameter(n int, edges [][]int) []int {\nug := make([][]int, n)\nfor _, e := range edges {\nu, v := e[0]-1, e[1]-1\nug[u] = append(ug[u], v)\nug[v] = append(ug[v], u)\n}\n// dis[i][j]\u8868\u793a\u8282\u70b9i\u548cj\u7684\u8ddd\u79bb\ndis := make([][]int, n)\nfor i := range dis {\ndis[i] = make([]int, n)\n// \u4ee5\u8282\u70b9i\u4e3a\u6839\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u5373\u4e0e\u8282\u70b9i\u7684\u8ddd\u79bb\nvar dfs func(x, fa int)\ndfs = func(x, fa int) {\nfor _, y := range ug[x] {\nif y != fa {\ndis[i][y] = dis[i][x] + 1 // \u81ea\u9876\u5411\u4e0b\ndfs(y, x)\n}\n}\n}\ndfs(i, -1)\n}\nans := make([]int, n-1)\nfor i, di := range dis {\nfor j := i + 1; j &lt; n; j++ {\nd := di[j]\ndj := dis[j]\nvar dfs func(x, fa int) int\ndfs = func(x, fa int) int {\n// \u9009\u62e9x\ncnt := 1\nfor _, y := range ug[x] {\nif y != fa &amp;&amp;\n(di[y] &lt; d || (di[y] == d &amp;&amp; y &gt; j)) &amp;&amp;\n(dj[y] &lt; d || (dj[y] == d &amp;&amp; y &gt; i)) { // \u53ef\u4ee5\u9009\u62e9\u8282\u70b9y\ncnt *= dfs(y, x) // \u6bcf\u9897\u5b50\u6811\u76f8\u4e92\u72ec\u7acb\uff0c\u4f7f\u7528\u4e58\u6cd5\u539f\u7406\n}\n}\nif di[x]+dj[x] &gt; d { // \u8282\u70b9x\u975e\u5fc5\u9009\ncnt++ // \u4e0d\u9009\u62e9x\n}\nreturn cnt\n}\nans[d-1] += dfs(i, -1)\n}\n}\nreturn ans\n}\n</code></pre>"},{"location":"intro/format/","title":"\u683c\u5f0f\u8bf4\u660e","text":""},{"location":"intro/format/#\u7b97\u6cd5\u5206\u7c7b","title":"\u7b97\u6cd5\u5206\u7c7b","text":"<p>\u6bcf\u4e2a\u7b97\u6cd5\u5206\u7c7b\u4f1a\u7ed9\u51fa\u4f7f\u7528\u8be5\u7b97\u6cd5\u7684\u9898\u76ee\u3002</p> <p>\u9898\u76ee\u5c3d\u53ef\u80fd\u6309\u7167\u7531\u7b80\u5230\u7e41\u3001\u7531\u5355\u4e00\u7b97\u6cd5\u5230\u7efc\u5408\u5e94\u7528\u7684\u987a\u5e8f\u7ed9\u51fa\u3002</p>"},{"location":"intro/format/#\u7b97\u6cd5\u9898\u76ee","title":"\u7b97\u6cd5\u9898\u76ee","text":"<p>\u9898\u76ee\u6807\u9898\u5982\u679c\u4ee5 <code>[T]</code> \u5f00\u5934\uff0c\u8868\u793a\u8fd9\u9053\u9898\u76ee\u662f\u8be5\u7b97\u6cd5\u7684\u6a21\u677f\u9898\u3002</p> <p>\u6bcf\u9053\u9898\u76ee\u4f1a\u7ed9\u51fa\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <ol> <li>\u9ed8\u8ba4\u5c55\u5f00\u7684\u9898\u76ee\u63cf\u8ff0\u548c\u9898\u76ee\u6765\u6e90\uff1b</li> <li>\u9ed8\u8ba4\u6536\u8d77\u7684\u89e3\u9898\u601d\u8def\u548c\u4ee3\u7801\u5b9e\u73b0\u3002</li> </ol> <p>\u6574\u4f53\u6548\u679c\u5982\u4e0b\uff1a</p> \u95ee\u9898\u63cf\u8ff0 <p>\u8fd9\u91cc\u662f\u95ee\u9898\u63cf\u8ff0\u3002</p> <p>\u5728 XX-OJ \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u8fd9\u91cc\u662f\u89e3\u9898\u601d\u8def\u3002</p> GoJava <pre><code>package main\nimport \"fmt\"\nfunc main() {\nfmt.Println(\"Algorithm in Action!\")\n}\n</code></pre> <pre><code>public class Main {\npublic static void main(String[] args) {\nSystem.out.println(\"Algorithm in Action!\");\n}\n}\n</code></pre>"},{"location":"math/binary-set/","title":"\u4e8c\u8fdb\u5236\u96c6\u5408\u64cd\u4f5c","text":""},{"location":"math/binary-set/#\u5b50\u96c6\u679a\u4e3e","title":"\u5b50\u96c6\u679a\u4e3e","text":""},{"location":"math/binary-set/#lc982-\u6309\u4f4d\u4e0e\u4e3a\u96f6\u7684\u4e09\u5143\u7ec4","title":"LC982: \u6309\u4f4d\u4e0e\u4e3a\u96f6\u7684\u4e09\u5143\u7ec4","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u6574\u6570\u6570\u7ec4 \\(nums(0\u2264nums[i]&lt;2^{16})\\) \u957f\u5ea6\u4e3a \\(n(1\u2264n\u22641000)\\) \uff0c\u8fd4\u56de\u5176\u4e2d\u6309\u4f4d\u4e0e\u4e3a\u96f6\u7684\u4e09\u5143\u7ec4\u6570\u76ee\u3002 \u5373\u6ee1\u8db3 \\(0 \u2264 i,j,k &lt; n\\) \u4e14 \\(nums[i]\\ \\&amp;\\ nums[j]\\ \\&amp;\\ nums[k] == 0\\) \u7684\u4e09\u5143\u7ec4 \\((i, j, k)\\) \u7684\u6570\u76ee\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u5c31\u662f\u66b4\u529b\u679a\u4e3e\u4e09\u5143\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^3)\\) \uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002 \u7b80\u5355\u4f18\u5316\u4e00\u4e0b\uff0c\u4ee4 \\(x = nums[i], y = nums[j], z = nums[k], a = x\\ \\&amp;\\ y\\)\uff0c\u9884\u5904\u7406\u6bcf\u4e2a \\(a\\) \u7684\u6570\u91cf\u518d\u679a\u4e3e \\(a\\) \u548c \\(z\\) \u3002</p> GoJava <pre><code>package main\nfunc countTriplets(nums []int) (ans int) {\ncnt := [1 &lt;&lt; 16]int{}\nfor _, x := range nums {\nfor _, y := range nums {\ncnt[x&amp;y]++\n}\n}\nfor a, c := range cnt {\nfor _, z := range nums {\nif a&amp;z == 0 {\nans += c\n}\n}\n}\nreturn\n}\n</code></pre> <pre><code>class Solution {\npublic int countTriplets(int[] nums) {\nint[] cnt = new int[1 &lt;&lt; 16];\nfor (int x : nums) {\nfor (int y : nums) {\ncnt[x &amp; y]++;\n}\n}\nint ans = 0;\nfor (int a = 0; a &lt; 1 &lt;&lt; 16; a++) {\nfor (int z : nums) {\nif ((a &amp; z) == 0) {\nans += cnt[a];\n}\n}\n}\nreturn ans;\n}\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2+2^{16}*n)\\) \uff0c\u4ecd\u7136\u4f1a\u8d85\u65f6\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u4f18\u5316\u3002</p> <p>\u628a\u4e8c\u8fdb\u5236\u770b\u505a\u7531\u975e0\u4f4d\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u6309\u4f4d\u4e0e\u4e3a0\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u96c6\u5408\u6ca1\u6709\u4ea4\u96c6\u3002 \u4ee4 \\(c = x\\ \\oplus\\) <code>0xffff</code>\uff0c\u5219 \\(c\\) \u7684\u6240\u6709\u5b50\u96c6\u4e0e \\(x\\) \u90fd\u4e0d\u5b58\u5728\u4ea4\u96c6\u3002 \u56e0\u6b64\uff0c\u53ea\u9700\u8981\u679a\u4e3e \\(c\\) \u7684\u6240\u6709\u5b50\u96c6\u5373\u53ef\u3002</p> <p>\u5b50\u96c6\u679a\u4e3e\u6280\u5de7</p> <p>\u5982\u4f55\u9ad8\u6548\u679a\u4e3e \\(c\\) \u7684\u5b50\u96c6 \\(s\\) \u5462\uff1f \u901a\u8fc7 \\(s = (s-1)\\ \\&amp;\\ c\\) \u53ef\u4ee5\u6309\u9012\u51cf\u987a\u5e8f\u9ad8\u6548\u679a\u4e3e \\(c\\) \u7684\u5b50\u96c6\u3002 \u6ce8\uff1a\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u5b50\u96c6\u679a\u4e3e\u6280\u5de7\u7ecf\u5e38\u7528\u4e8e\u5b50\u96c6\u72b6\u538bDP\u4e2d\u3002</p> GoJava <pre><code>package main\nfunc countTriplets(nums []int) (ans int) {\nn := len(nums)\ncnt := [1 &lt;&lt; 16]int{}\nfor _, x := range nums {\nfor _, y := range nums {\ncnt[x&amp;y]++\n}\n}\nfor _, x := range nums {\nif x == 0 {\nans += n * n\n} else {\nx ^= 0xffff // \u53d6\u8865\u96c6\nfor s := x; s != 0; s = (s - 1) &amp; x {\nans += cnt[s]\n}\nans += cnt[0] // \u7a7a\u96c6\u4e5f\u9700\u8981\u7edf\u8ba1\n}\n}\nreturn\n}\n</code></pre> <pre><code>class Solution {\npublic int countTriplets(int[] nums) {\nint[] cnt = new int[1 &lt;&lt; 16];\nfor (int x : nums) {\nfor (int y : nums) {\ncnt[x &amp; y]++;\n}\n}\nint ans = 0;\nfor (int x : nums) {\nx ^= 0xffff;\nfor (int s = x; s != 0; s = (s - 1) &amp; x) {\nans += cnt[s];\n}\nans += cnt[0];\n}\nreturn ans;\n}\n}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5148\u9884\u5904\u7406\u6bcf\u4e2a\u6570\u5b57\u7684\u8865\u96c6\u7684\u5b50\u96c6\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u518d\u7d2f\u52a0 \\(cnt[x\\&amp;y]\\) \u3002</p> GoJava <pre><code>package main\nfunc countTriplets(nums []int) (ans int) {\nn := len(nums)\ncnt := [1 &lt;&lt; 16]int{n}\nfor _, x := range nums {\nx ^= 0xffff\nfor s := x; s != 0; s = (s - 1) &amp; x {\ncnt[s]++\n}\n}\nfor _, x := range nums {\nfor _, y := range nums {\nans += cnt[x&amp;y]\n}\n}\nreturn\n}\n</code></pre> <pre><code>class Solution {\npublic int countTriplets(int[] nums) {\nint[] cnt = new int[1 &lt;&lt; 16];\ncnt[0] = nums.length;\nfor (int x : nums) {\nx ^= 0xffff;\nfor (int s = x; s != 0; s = (s - 1) &amp; x) {\ncnt[s]++;\n}\n}\nint ans = 0;\nfor (int x : nums) {\nfor (int y : nums) {\nans += cnt[x &amp; y];\n}\n}\nreturn ans;\n}\n}\n</code></pre> <p>\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a\u6839\u636e \\(nums\\) \u6570\u7ec4\u786e\u5b9a \\(cnt\\) \u7684\u6700\u5c0f\u957f\u5ea6\u3002</p> GoJava <pre><code>package main\nfunc countTriplets(nums []int) (ans int) {\nm := 1\nfor _, x := range nums {\nfor ; m &lt;= x; m &lt;&lt;= 1 {\n}\n}\ncnt := make([]int, m)\ncnt[0] = len(nums)\nmask := m - 1\nfor _, x := range nums {\nx ^= mask\nfor s := x; s != 0; s = (s - 1) &amp; x {\ncnt[s]++\n}\n}\nfor _, x := range nums {\nfor _, y := range nums {\nans += cnt[x&amp;y]\n}\n}\nreturn\n}\n</code></pre> <pre><code>class Solution {\npublic int countTriplets(int[] nums) {\nint m = 1;\nfor (int x : nums) {\nfor (; m &lt;= x; m &lt;&lt;= 1) {\n}\n}\nint[] cnt = new int[m];\ncnt[0] = nums.length;\nint mask = m - 1;\nfor (int x : nums) {\nx ^= mask;\nfor (int s = x; s != 0; s = (s - 1) &amp; x) {\ncnt[s]++;\n}\n}\nint ans = 0;\nfor (int x : nums) {\nfor (int y : nums) {\nans += cnt[x &amp; y];\n}\n}\nreturn ans;\n}\n}\n</code></pre>"},{"location":"string/palindrome/","title":"\u56de\u6587\u5b57\u7b26\u4e32","text":""},{"location":"string/palindrome/#lc1616-\u5206\u5272\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f97\u5230\u56de\u6587\u4e32","title":"LC1616: \u5206\u5272\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f97\u5230\u56de\u6587\u4e32","text":"\u95ee\u9898\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e24\u4e2a\u957f\u5ea6\u5747\u4e3a <code>n(1\u2264n\u22641e5)</code> \u7684\u5b57\u7b26\u4e32 <code>a</code> \u548c <code>b</code> \u3002 \u8bf7\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e0b\u6807 <code>0\u2264i\u2264n</code> \u4f7f\u5f97 <code>a[:i]+b[i:]</code> \u6216 <code>b[:i]+a[i:]</code> \u6784\u6210\u56de\u6587\u5b57\u7b26\u4e32\u3002</p> <p>\u5728 LeetCode\u4e3b\u7ad9 \u6216 \u529b\u6263\u4e2d\u6587\u793e\u533a \u67e5\u770b\u8be5\u9898\u3002</p> \u89e3\u9898\u601d\u8def <p>\u4e2d\u5fc3\u6269\u5c55\u6cd5</p> Go <pre><code>package main\nfunc checkPalindromeFormation(a string, b string) bool {\nn := len(a)\ncheck := func(s, t string) bool {\nl, r := (n-1)&gt;&gt;1, n&gt;&gt;1\nfor ; r &lt; n &amp;&amp; s[l] == s[r]; r++ {\nl--\n}\nif r == n {\nreturn true // s\u56de\u6587\n} else {\ncheckLR := func(pref, suff string) bool {\ni, j := l, r\nfor ; j &lt; n &amp;&amp; pref[i] == suff[j]; j++ {\ni--\n}\nreturn j == n\n}\n// s[:r]+t[r:]\u6784\u6210\u56de\u6587 || t[:l+1]+s[l+1:]\u6784\u6210\u56de\u6587\nreturn checkLR(s, t) || checkLR(t, s)\n}\n}\nreturn check(a, b) || check(b, a)\n}\n</code></pre>"}]}